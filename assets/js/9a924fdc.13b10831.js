"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[54917],{95793:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>d,default:()=>f,frontMatter:()=>g,metadata:()=>p,toc:()=>c});n(96540);var a=n(15680),r=n(53720),l=n(5400);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const g={sidebar_position:36,title:"MLflow",slug:"/generated/ingestion/sources/mlflow",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/mlflow.md"},d="MLflow",p={unversionedId:"docs/generated/ingestion/sources/mlflow",id:"version-0.14.1/docs/generated/ingestion/sources/mlflow",title:"MLflow",description:"Testing",source:"@site/versioned_docs/version-0.14.1/docs/generated/ingestion/sources/mlflow.md",sourceDirName:"docs/generated/ingestion/sources",slug:"/generated/ingestion/sources/mlflow",permalink:"/docs/0.14.1/generated/ingestion/sources/mlflow",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/mlflow.md",tags:[],version:"0.14.1",sidebarPosition:36,frontMatter:{sidebar_position:36,title:"MLflow",slug:"/generated/ingestion/sources/mlflow",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/mlflow.md"},sidebar:"overviewSidebar",previous:{title:"Microsoft SQL Server",permalink:"/docs/0.14.1/generated/ingestion/sources/mssql"},next:{title:"Mode",permalink:"/docs/0.14.1/generated/ingestion/sources/mode"}},m={},c=[{value:"Important Capabilities",id:"important-capabilities",level:3},{value:"Concept Mapping",id:"concept-mapping",level:3},{value:"CLI based Ingestion",id:"cli-based-ingestion",level:3},{value:"Install the Plugin",id:"install-the-plugin",level:4},{value:"Starter Recipe",id:"starter-recipe",level:3},{value:"Config Details",id:"config-details",level:3},{value:"Code Coordinates",id:"code-coordinates",level:3}],y={toc:c},u="wrapper";function f(e){var{components:t}=e,n=s(e,["components"]);return(0,a.yg)(u,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){i(e,t,n[t])}))}return e}({},y,n),{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"mlflow"},"MLflow"),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-testing-lightgrey",alt:"Testing"})),(0,a.yg)("h3",{id:"important-capabilities"},"Important Capabilities"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Capability"),(0,a.yg)("th",{parentName:"tr",align:null},"Status"),(0,a.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Descriptions"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,a.yg)("td",{parentName:"tr",align:null},"Extract descriptions for MLflow Registered Models and Model Versions")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Extract Tags"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,a.yg)("td",{parentName:"tr",align:null},"Extract tags for MLflow Registered Model Stages")))),(0,a.yg)("h3",{id:"concept-mapping"},"Concept Mapping"),(0,a.yg)("p",null,"This ingestion source maps the following MLflow Concepts to DataHub Concepts:"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"center"},"Source Concept"),(0,a.yg)("th",{parentName:"tr",align:"center"},"DataHub Concept"),(0,a.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("a",{parentName:"td",href:"https://mlflow.org/docs/latest/model-registry.html#concepts"},(0,a.yg)("inlineCode",{parentName:"a"},"Registered Model"))),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("a",{parentName:"td",href:"/docs/generated/metamodel/entities/mlmodelgroup/"},(0,a.yg)("inlineCode",{parentName:"a"},"MlModelGroup"))),(0,a.yg)("td",{parentName:"tr",align:null},"The name of a Model Group is the same as a Registered Model's name (e.g. my_mlflow_model)")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("a",{parentName:"td",href:"https://mlflow.org/docs/latest/model-registry.html#concepts"},(0,a.yg)("inlineCode",{parentName:"a"},"Model Version"))),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("a",{parentName:"td",href:"/docs/generated/metamodel/entities/mlmodel/"},(0,a.yg)("inlineCode",{parentName:"a"},"MlModel"))),(0,a.yg)("td",{parentName:"tr",align:null},"The name of a Model is ",(0,a.yg)("inlineCode",{parentName:"td"},"{registered_model_name}{model_name_separator}{model_version}")," (e.g. my_mlflow_model_1 for Registered Model named my_mlflow_model and Version 1, my_mlflow_model_2, etc.)")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("a",{parentName:"td",href:"https://mlflow.org/docs/latest/model-registry.html#concepts"},(0,a.yg)("inlineCode",{parentName:"a"},"Model Stage"))),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("a",{parentName:"td",href:"/docs/generated/metamodel/entities/tag/"},(0,a.yg)("inlineCode",{parentName:"a"},"Tag"))),(0,a.yg)("td",{parentName:"tr",align:null},"The mapping between Model Stages and generated Tags is the following:",(0,a.yg)("br",null),"- Production: mlflow_production",(0,a.yg)("br",null),"- Staging: mlflow_staging",(0,a.yg)("br",null),"- Archived: mlflow_archived",(0,a.yg)("br",null),"- None: mlflow_none")))),(0,a.yg)("h3",{id:"cli-based-ingestion"},"CLI based Ingestion"),(0,a.yg)("h4",{id:"install-the-plugin"},"Install the Plugin"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"mlflow")," source works out of the box with ",(0,a.yg)("inlineCode",{parentName:"p"},"acryl-datahub"),"."),(0,a.yg)("h3",{id:"starter-recipe"},"Starter Recipe"),(0,a.yg)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,a.yg)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,a.yg)("p",null,"For general pointers on writing and running a recipe, see our ",(0,a.yg)("a",{parentName:"p",href:"/docs/0.14.1/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"source:\n  type: mlflow\n  config:\n    # Coordinates\n    tracking_uri: tracking_uri\n\nsink:\n  # sink configs\n\n")),(0,a.yg)("h3",{id:"config-details"},"Config Details"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,a.yg)("p",null,"Note that a ",(0,a.yg)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,a.yg)("div",{className:"config-table"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Field"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("div",{className:"path-line"},(0,a.yg)("span",{className:"path-main"},"model_name_separator"))," ",(0,a.yg)("div",{className:"type-name-line"},(0,a.yg)("span",{className:"type-name"},"string"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"A string which separates model name from its version (e.g. model_1 or model-1) ",(0,a.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,a.yg)("span",{className:"default-value"},"_")))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("div",{className:"path-line"},(0,a.yg)("span",{className:"path-main"},"registry_uri"))," ",(0,a.yg)("div",{className:"type-name-line"},(0,a.yg)("span",{className:"type-name"},"string"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"Registry server URI. If not set, an MLflow default registry_uri is used (value of tracking_uri or ",(0,a.yg)("inlineCode",{parentName:"td"},"MLFLOW_REGISTRY_URI")," environment variable)")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("div",{className:"path-line"},(0,a.yg)("span",{className:"path-main"},"tracking_uri"))," ",(0,a.yg)("div",{className:"type-name-line"},(0,a.yg)("span",{className:"type-name"},"string"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"Tracking server URI. If not set, an MLflow default tracking_uri is used (local ",(0,a.yg)("inlineCode",{parentName:"td"},"mlruns/")," directory or ",(0,a.yg)("inlineCode",{parentName:"td"},"MLFLOW_TRACKING_URI")," environment variable)")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("div",{className:"path-line"},(0,a.yg)("span",{className:"path-main"},"env"))," ",(0,a.yg)("div",{className:"type-name-line"},(0,a.yg)("span",{className:"type-name"},"string"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"The environment that all assets produced by this connector belong to ",(0,a.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,a.yg)("span",{className:"default-value"},"PROD")))))))),(0,a.yg)(l.A,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,a.yg)("p",null,"The ",(0,a.yg)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "title": "MLflowConfig",\n  "description": "Any source that produces dataset urns in a single environment should inherit this class",\n  "type": "object",\n  "properties": {\n    "env": {\n      "title": "Env",\n      "description": "The environment that all assets produced by this connector belong to",\n      "default": "PROD",\n      "type": "string"\n    },\n    "tracking_uri": {\n      "title": "Tracking Uri",\n      "description": "Tracking server URI. If not set, an MLflow default tracking_uri is used (local `mlruns/` directory or `MLFLOW_TRACKING_URI` environment variable)",\n      "type": "string"\n    },\n    "registry_uri": {\n      "title": "Registry Uri",\n      "description": "Registry server URI. If not set, an MLflow default registry_uri is used (value of tracking_uri or `MLFLOW_REGISTRY_URI` environment variable)",\n      "type": "string"\n    },\n    "model_name_separator": {\n      "title": "Model Name Separator",\n      "description": "A string which separates model name from its version (e.g. model_1 or model-1)",\n      "default": "_",\n      "type": "string"\n    }\n  },\n  "additionalProperties": false\n}\n')))),(0,a.yg)("h3",{id:"code-coordinates"},"Code Coordinates"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Class Name: ",(0,a.yg)("inlineCode",{parentName:"li"},"datahub.ingestion.source.mlflow.MLflowSource")),(0,a.yg)("li",{parentName:"ul"},"Browse on ",(0,a.yg)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/mlflow.py"},"GitHub"))),(0,a.yg)("h2",null,"Questions"),(0,a.yg)("p",null,"If you've got any questions on configuring ingestion for MLflow, feel free to ping us on ",(0,a.yg)("a",{parentName:"p",href:"https://slack.datahubproject.io"},"our Slack"),"."))}f.isMDXComponent=!0}}]);