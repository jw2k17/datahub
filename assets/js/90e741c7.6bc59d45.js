"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[34975],{174:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>b,frontMatter:()=>g,metadata:()=>p,toc:()=>u});n(96540);var a=n(15680),i=n(53720),r=n(5400);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const g={sidebar_position:42,title:"Neo4j",slug:"/generated/ingestion/sources/neo4j",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/neo4j.md"},d="Neo4j",p={unversionedId:"docs/generated/ingestion/sources/neo4j",id:"version-0.15.0/docs/generated/ingestion/sources/neo4j",title:"Neo4j",description:"Certified",source:"@site/versioned_docs/version-0.15.0/docs/generated/ingestion/sources/neo4j.md",sourceDirName:"docs/generated/ingestion/sources",slug:"/generated/ingestion/sources/neo4j",permalink:"/docs/0.15.0/generated/ingestion/sources/neo4j",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/neo4j.md",tags:[],version:"0.15.0",sidebarPosition:42,frontMatter:{sidebar_position:42,title:"Neo4j",slug:"/generated/ingestion/sources/neo4j",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/neo4j.md"},sidebar:"overviewSidebar",previous:{title:"MySQL",permalink:"/docs/0.15.0/generated/ingestion/sources/mysql"},next:{title:"NiFi",permalink:"/docs/0.15.0/generated/ingestion/sources/nifi"}},c={},u=[{value:"CLI based Ingestion",id:"cli-based-ingestion",level:3},{value:"Install the Plugin",id:"install-the-plugin",level:4},{value:"Starter Recipe",id:"starter-recipe",level:3},{value:"Config Details",id:"config-details",level:3},{value:"Integration Details",id:"integration-details",level:2},{value:"Metadata Ingestion Quickstart",id:"metadata-ingestion-quickstart",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Code Coordinates",id:"code-coordinates",level:3}],y={toc:u},m="wrapper";function b(e){var{components:t}=e,n=l(e,["components"]);return(0,a.yg)(m,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){s(e,t,n[t])}))}return e}({},y,n),{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"neo4j"},"Neo4j"),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-certified-brightgreen",alt:"Certified"})),(0,a.yg)("h3",{id:"cli-based-ingestion"},"CLI based Ingestion"),(0,a.yg)("h4",{id:"install-the-plugin"},"Install the Plugin"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"neo4j")," source works out of the box with ",(0,a.yg)("inlineCode",{parentName:"p"},"acryl-datahub"),"."),(0,a.yg)("h3",{id:"starter-recipe"},"Starter Recipe"),(0,a.yg)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,a.yg)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,a.yg)("p",null,"For general pointers on writing and running a recipe, see our ",(0,a.yg)("a",{parentName:"p",href:"/docs/0.15.0/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"source:\n    type: 'neo4j'\n    config:\n        uri: 'neo4j+ssc://host:7687'\n        username: 'neo4j'\n        password: 'password'\n        env: 'PROD'\n\nsink:\n  type: \"datahub-rest\"\n  config:\n    server: 'http://localhost:8080'\n")),(0,a.yg)("h3",{id:"config-details"},"Config Details"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,a.yg)("p",null,"Note that a ",(0,a.yg)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,a.yg)("div",{className:"config-table"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Field"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("div",{className:"path-line"},(0,a.yg)("span",{className:"path-main"},"password"),"\xa0",(0,a.yg)("abbr",{title:"Required"},"\u2705"))," ",(0,a.yg)("div",{className:"type-name-line"},(0,a.yg)("span",{className:"type-name"},"string"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"Neo4j Password")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("div",{className:"path-line"},(0,a.yg)("span",{className:"path-main"},"uri"),"\xa0",(0,a.yg)("abbr",{title:"Required"},"\u2705"))," ",(0,a.yg)("div",{className:"type-name-line"},(0,a.yg)("span",{className:"type-name"},"string"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"The URI for the Neo4j server")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("div",{className:"path-line"},(0,a.yg)("span",{className:"path-main"},"username"),"\xa0",(0,a.yg)("abbr",{title:"Required"},"\u2705"))," ",(0,a.yg)("div",{className:"type-name-line"},(0,a.yg)("span",{className:"type-name"},"string"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"Neo4j Username")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("div",{className:"path-line"},(0,a.yg)("span",{className:"path-main"},"env"),"\xa0",(0,a.yg)("abbr",{title:"Required"},"\u2705"))," ",(0,a.yg)("div",{className:"type-name-line"},(0,a.yg)("span",{className:"type-name"},"string"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"Neo4j env")))))),(0,a.yg)(r.A,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,a.yg)("p",null,"The ",(0,a.yg)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "title": "Neo4jConfig",\n  "description": "Any source that produces dataset urns in a single environment should inherit this class",\n  "type": "object",\n  "properties": {\n    "env": {\n      "title": "Env",\n      "description": "Neo4j env",\n      "type": "string"\n    },\n    "username": {\n      "title": "Username",\n      "description": "Neo4j Username",\n      "type": "string"\n    },\n    "password": {\n      "title": "Password",\n      "description": "Neo4j Password",\n      "type": "string"\n    },\n    "uri": {\n      "title": "Uri",\n      "description": "The URI for the Neo4j server",\n      "type": "string"\n    }\n  },\n  "required": [\n    "env",\n    "username",\n    "password",\n    "uri"\n  ],\n  "additionalProperties": false\n}\n')))),(0,a.yg)("h2",{id:"integration-details"},"Integration Details"),(0,a.yg)("p",null,"Neo4j metadata will be ingested into DataHub using\n",(0,a.yg)("inlineCode",{parentName:"p"},"CALL apoc.meta.schema() YIELD value UNWIND keys(value) AS key RETURN key, value[key] AS value;"),(0,a.yg)("br",{parentName:"p"}),"\n","The data that is returned will be parsed\nand will be displayed as Nodes and Relationships in DataHub.  Each object will be tagged with describing what kind of DataHub\nobject it is.  The defaults are 'Node' and 'Relationship'.  These tag values can be overwritten in the recipe."),(0,a.yg)("h2",{id:"metadata-ingestion-quickstart"},"Metadata Ingestion Quickstart"),(0,a.yg)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.yg)("p",null,"In order to ingest metadata from Neo4j, you will need:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Neo4j instance with APOC installed")),(0,a.yg)("h3",{id:"code-coordinates"},"Code Coordinates"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Class Name: ",(0,a.yg)("inlineCode",{parentName:"li"},"datahub.ingestion.source.neo4j.neo4j_source.Neo4jSource")),(0,a.yg)("li",{parentName:"ul"},"Browse on ",(0,a.yg)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/neo4j/neo4j_source.py"},"GitHub"))),(0,a.yg)("h2",null,"Questions"),(0,a.yg)("p",null,"If you've got any questions on configuring ingestion for Neo4j, feel free to ping us on ",(0,a.yg)("a",{parentName:"p",href:"https://slack.datahubproject.io"},"our Slack"),"."))}b.isMDXComponent=!0}}]);