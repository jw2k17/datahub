"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[99223],{7653:(e,t,a)=>{a.d(t,{A:()=>r});const r={icon:{tag:"svg",attrs:{"fill-rule":"evenodd",viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64c247.4 0 448 200.6 448 448S759.4 960 512 960 64 759.4 64 512 264.6 64 512 64zm127.98 274.82h-.04l-.08.06L512 466.75 384.14 338.88c-.04-.05-.06-.06-.08-.06a.12.12 0 00-.07 0c-.03 0-.05.01-.09.05l-45.02 45.02a.2.2 0 00-.05.09.12.12 0 000 .07v.02a.27.27 0 00.06.06L466.75 512 338.88 639.86c-.05.04-.06.06-.06.08a.12.12 0 000 .07c0 .03.01.05.05.09l45.02 45.02a.2.2 0 00.09.05.12.12 0 00.07 0c.02 0 .04-.01.08-.05L512 557.25l127.86 127.87c.04.04.06.05.08.05a.12.12 0 00.07 0c.03 0 .05-.01.09-.05l45.02-45.02a.2.2 0 00.05-.09.12.12 0 000-.07v-.02a.27.27 0 00-.05-.06L557.25 512l127.87-127.86c.04-.04.05-.06.05-.08a.12.12 0 000-.07c0-.03-.01-.05-.05-.09l-45.02-45.02a.2.2 0 00-.09-.05.12.12 0 00-.07 0z"}}]},name:"close-circle",theme:"filled"}},4732:(e,t,a)=>{a.d(t,{A:()=>s});var r=a(89379),o=a(96540),n=a(7653),i=a(38046),l=function(e,t){return o.createElement(i.A,(0,r.A)((0,r.A)({},e),{},{ref:t,icon:n.A}))};const s=o.forwardRef(l)},15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>d});var r=a(96540);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(a),m=o,d=p["".concat(s,".").concat(m)]||p[m]||g[m]||n;return a?r.createElement(d,i(i({ref:t},u),{},{components:a})):r.createElement(d,i({ref:t},u))}));function d(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,i=new Array(n);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<n;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},43655:(e,t,a)=>{a.d(t,{A:()=>f});var r=a(96540),o=a(20053);const n="availabilityCard_P5od",i="managedIcon_AxXO",l="platform_wqXv",s="platformAvailable_Y8lN";var c=a(4732),u=a(89379);const p={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z"}}]},name:"check-circle",theme:"filled"};var g=a(38046),m=function(e,t){return r.createElement(g.A,(0,u.A)((0,u.A)({},e),{},{ref:t,icon:p}))};const d=r.forwardRef(m);const y={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M811.4 418.7C765.6 297.9 648.9 212 512.2 212S258.8 297.8 213 418.6C127.3 441.1 64 519.1 64 612c0 110.5 89.5 200 199.9 200h496.2C870.5 812 960 722.5 960 612c0-92.7-63.1-170.7-148.6-193.3zm36.3 281a123.07 123.07 0 01-87.6 36.3H263.9c-33.1 0-64.2-12.9-87.6-36.3A123.3 123.3 0 01140 612c0-28 9.1-54.3 26.2-76.3a125.7 125.7 0 0166.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10c54.3 14.5 92.1 63.8 92.1 120 0 33.1-12.9 64.3-36.3 87.7z"}}]},name:"cloud",theme:"outlined"};var h=function(e,t){return r.createElement(g.A,(0,u.A)((0,u.A)({},e),{},{ref:t,icon:y}))};const b=r.forwardRef(h),f=({saasOnly:e,ossOnly:t})=>r.createElement("div",{className:(0,o.A)(n,"card")},r.createElement("strong",null,"Feature Availability"),r.createElement("div",null,r.createElement("span",{className:(0,o.A)(l,!e&&s)},"Self-Hosted DataHub ",e?r.createElement(c.A,null):r.createElement(d,null))),r.createElement("div",null,r.createElement(b,{className:i}),r.createElement("span",{className:(0,o.A)(l,!t&&s)},"DataHub Cloud ",t?r.createElement(c.A,null):r.createElement(d,null))))},41060:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>y,frontMatter:()=>s,metadata:()=>u,toc:()=>g});a(96540);var r=a(15680),o=a(43655);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function l(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}const s={description:"This page describes the steps required to configure a remote executor, which allows you to ingest metadata from private metadata sources using private credentials via the DataHub UI.",title:"Setting up Remote Ingestion Executor",slug:"/managed-datahub/operator-guide/setting-up-remote-ingestion-executor",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/managed-datahub/operator-guide/setting-up-remote-ingestion-executor.md"},c="Setting up Remote Ingestion Executor",u={unversionedId:"docs/managed-datahub/operator-guide/setting-up-remote-ingestion-executor",id:"version-0.15.0/docs/managed-datahub/operator-guide/setting-up-remote-ingestion-executor",title:"Setting up Remote Ingestion Executor",description:"This page describes the steps required to configure a remote executor, which allows you to ingest metadata from private metadata sources using private credentials via the DataHub UI.",source:"@site/versioned_docs/version-0.15.0/docs/managed-datahub/operator-guide/setting-up-remote-ingestion-executor.md",sourceDirName:"docs/managed-datahub/operator-guide",slug:"/managed-datahub/operator-guide/setting-up-remote-ingestion-executor",permalink:"/docs/0.15.0/managed-datahub/operator-guide/setting-up-remote-ingestion-executor",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/managed-datahub/operator-guide/setting-up-remote-ingestion-executor.md",tags:[],version:"0.15.0",frontMatter:{description:"This page describes the steps required to configure a remote executor, which allows you to ingest metadata from private metadata sources using private credentials via the DataHub UI.",title:"Setting up Remote Ingestion Executor",slug:"/managed-datahub/operator-guide/setting-up-remote-ingestion-executor",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/managed-datahub/operator-guide/setting-up-remote-ingestion-executor.md"},sidebar:"overviewSidebar",previous:{title:"Troubleshoot Slack Issues",permalink:"/docs/0.15.0/managed-datahub/slack/saas-slack-troubleshoot"},next:{title:"Setting up Events API on AWS EventBridge",permalink:"/docs/0.15.0/managed-datahub/operator-guide/setting-up-events-api-on-aws-eventbridge"}},p={},g=[{value:"Overview",id:"overview",level:2},{value:"Deploying a Remote Executor",id:"deploying-a-remote-executor",level:2},{value:"Deploying on Amazon ECS",id:"deploying-on-amazon-ecs",level:3},{value:"Updating a deployment",id:"updating-a-deployment",level:4},{value:"Steps - AWS Console",id:"steps---aws-console",level:5},{value:"Deploying on Kubernetes",id:"deploying-on-kubernetes",level:3},{value:"FAQ",id:"faq",level:2},{value:"If I need to change (or add) a secret that is stored in AWS Secrets Manager, e.g. for rotation, will the new secret automatically get picked up by Acryl&#39;s executor?",id:"if-i-need-to-change-or-add-a-secret-that-is-stored-in-aws-secrets-manager-eg-for-rotation-will-the-new-secret-automatically-get-picked-up-by-acryls-executor",level:3},{value:"I want to deploy multiple Acryl Executors. Is this currently possible?",id:"i-want-to-deploy-multiple-acryl-executors-is-this-currently-possible",level:3},{value:"I&#39;ve run the CloudFormation Template, how can I tell that the container was successfully deployed?",id:"ive-run-the-cloudformation-template-how-can-i-tell-that-the-container-was-successfully-deployed",level:3}],m={toc:g},d="wrapper";function y(e){var{components:t}=e,a=l(e,["components"]);return(0,r.yg)(d,i(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},r=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),r.forEach((function(t){n(e,t,a[t])}))}return e}({},m,a),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"setting-up-remote-ingestion-executor"},"Setting up Remote Ingestion Executor"),(0,r.yg)(o.A,{saasOnly:!0,mdxType:"FeatureAvailability"}),(0,r.yg)("h2",{id:"overview"},"Overview"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"The Remote Executor can now also be used for monitoring of ingestion sources.")),(0,r.yg)("p",null,"DataHub Cloud comes packaged with an Acryl-managed executor, which is hosted inside of Acryl's environment on your behalf. However, there are certain scenarios in which an Acryl-hosted executor is not ideal or sufficient to cover all of an organization's ingestion sources. For example, if an ingestion source is hosted behind a firewall or in an environment with strict access policies, then the Acryl executor might be unable to connect to it to extract metadata."),(0,r.yg)("p",null,"To accommodate these cases, Acryl supports configuring a Remote Ingestion Executor which can be deployed inside of your environment \u2013 whether that is on-prem or in cloud. This setup allows you to continue leveraging the DataHub Cloud console to create, schedule, and run both ingestion and assertion monitors, all while retaining network and credential isolation."),(0,r.yg)("h2",{id:"deploying-a-remote-executor"},"Deploying a Remote Executor"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"The Remote Ingestion Executor is only available for\xa0DataHub Cloud. Setting up a new executor requires coordination with an Acryl representative.")),(0,r.yg)("p",null,"The Remote Ingestion Executor can be deployed on several different platforms, including ",(0,r.yg)("a",{parentName:"p",href:"#deploying-on-amazon-ecs"},"Amazon ECS"),", ",(0,r.yg)("a",{parentName:"p",href:"#deploying-on-kubernetes"},"Kubernetes")," (GKE, EKS or self-hosted) and others. It can also be deployed using several different methods, including ",(0,r.yg)("a",{parentName:"p",href:"https://raw.githubusercontent.com/acryldata/datahub-cloudformation/master/remote-executor/datahub-executor.ecs.template.yaml"},"CloudFormation")," or ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/acryldata/datahub-terraform-modules/tree/main/remote-ingestion-executor"},"Terraform")," templates for ECS, or ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/acryldata/datahub-executor-helm"},"Helm chart")," for Kubernetes. Please reach out to your Acryl representative for other alternatives."),(0,r.yg)("h3",{id:"deploying-on-amazon-ecs"},"Deploying on Amazon ECS"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"Customers migrating from the legacy DataHub Executor: migration to the new executor requires a configuration change on Acryl side. Please contact your Acryl representative for detailed guidance."),(0,r.yg)("p",{parentName:"admonition"},"Steps you will need to perform on your end when instructed by your Acryl representative:"),(0,r.yg)("ol",{parentName:"admonition"},(0,r.yg)("li",{parentName:"ol"},"Temporarily stop your legacy DataHub Remote Executor instance (e.g. ",(0,r.yg)("inlineCode",{parentName:"li"},'aws ecs update-service --desired-count 0 --cluster "cluster-name" --service "service-name"'),")"),(0,r.yg)("li",{parentName:"ol"},"Deploy new DataHub Executor using steps below."),(0,r.yg)("li",{parentName:"ol"},"Trigger an ingestion to make sure the new executor is working as expected."),(0,r.yg)("li",{parentName:"ol"},"Tear down legacy executor ECS deployment."))),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Provide AWS account ID"),": Provide Acryl with the ID of the AWS account in which the remote executor will be hosted. This will be used to grant access to the private Acryl ECR registry. The account ID can be provided to your Acryl representative via Email or ",(0,r.yg)("a",{parentName:"p",href:"https://onetimesecret.com/"},"One Time Secret"),".")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Provision an Acryl Executor")," (ECS)",(0,r.yg)("strong",{parentName:"p"},":")," Acryl team will provide a ",(0,r.yg)("a",{parentName:"p",href:"https://raw.githubusercontent.com/acryldata/datahub-cloudformation/master/remote-executor/datahub-executor.ecs.template.yaml"},"Cloudformation Template")," that you can run to provision an ECS cluster with a single remote ingestion task. It will also provision an AWS role for the task which grants the permissions necessary to read and delete from the private queue created for you, along with reading the secrets you've specified. At minimum, the template requires the following parameters:"),(0,r.yg)("ol",{parentName:"li"},(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Deployment Location:")," The AWS VPC and subnet in which the Acryl Executor task is to be provisioned.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"DataHub Personal Access Token"),": A valid DataHub PAT. This can be generated inside of ",(0,r.yg)("strong",{parentName:"p"},"Settings > Access Tokens")," of DataHub web application. You can alternatively create a secret in AWS Secrets Manager and refer to that by ARN.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"DataHub Cloud URL"),": The URL for your DataHub instance, e.g. ",(0,r.yg)("inlineCode",{parentName:"p"},"<your-company>.acryl.io/gms"),". Note that you MUST enter the trailing /gms when configuring the executor.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Acryl Remote Executor Version:")," The version of the remote executor to deploy. This is converted into a container image tag. It will be set to the latest version of the executor by default.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Source Secrets:")," The template accepts up to 10 named secrets which live inside your environment. Secrets are specified using the ",(0,r.yg)("strong",{parentName:"p"},"OptionalSecrets")," parameter in the following form: ",(0,r.yg)("inlineCode",{parentName:"p"},"SECRET_NAME=SECRET_ARN")," with multiple separated by comma, e.g. ",(0,r.yg)("inlineCode",{parentName:"p"},"SECRET_NAME_1=SECRET_ARN_1,SECRET_NAME_2,SECRET_ARN_2."))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Environment Variables:")," The template accepts up to 10 arbitrary environment variables. These can be used to inject properties into your ingestion recipe from within your environment. Environment variables are specified using the ",(0,r.yg)("strong",{parentName:"p"},"OptionalEnvVars")," parameter in the following form: ",(0,r.yg)("inlineCode",{parentName:"p"},"ENV_VAR_NAME=ENV_VAR_VALUE")," with multiple separated by comma, e.g. ",(0,r.yg)("inlineCode",{parentName:"p"},"ENV_VAR_NAME_1=ENV_VAR_VALUE_1,ENV_VAR_NAME_2,ENV_VAR_VALUE_2."),"\n",(0,r.yg)("inlineCode",{parentName:"p"}),"Providing secrets enables you to manage ingestion sources from the DataHub UI without storing credentials inside DataHub. Once defined, secrets can be referenced by name inside of your DataHub Ingestion Source configurations using the usual convention: ",(0,r.yg)("inlineCode",{parentName:"p"},"${SECRET_NAME}"),"."),(0,r.yg)("p",{parentName:"li"},"Note that the only external secret provider that is currently supported is AWS Secrets Manager.")))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Test the Executor:")," To test your remote executor:"),(0,r.yg)("ol",{parentName:"li"},(0,r.yg)("li",{parentName:"ol"},"Create a new Ingestion Source by clicking ",(0,r.yg)("strong",{parentName:"li"},"Create new Source")," in the ",(0,r.yg)("strong",{parentName:"li"},"Ingestion")," tab of the DataHub console. Configure your Ingestion Recipe as though you were running it from inside of your environment."),(0,r.yg)("li",{parentName:"ol"},'When working with "secret" fields (passwords, keys, etc), you can refer to any "self-managed" secrets by name: ',(0,r.yg)("inlineCode",{parentName:"li"},"${SECRET_NAME}:"))))),(0,r.yg)("p",{align:"center"},(0,r.yg)("img",{width:"70%",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/saas/Screen-Shot-2023-01-19-at-4.16.52-PM.png"})),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"3. In the 'Finish Up' step, click '**Advanced'**.\n4. Update the '**Executor Id**' form field to be  '**remote**'. This indicates that you'd like to use the remote executor.\n5. Click '**Done**'.\n\nNow, simple click '**Execute**' to test out the remote executor. If your remote executor is configured properly, you should promptly see the ingestion task state change to 'Running'.\n")),(0,r.yg)("p",{align:"center"},(0,r.yg)("img",{width:"70%",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/saas/Screen-Shot-2022-03-07-at-10.23.31-AM.png"})),(0,r.yg)("h4",{id:"updating-a-deployment"},"Updating a deployment"),(0,r.yg)("p",null,"In order to update the executor, ie. to deploy a new container version, you'll need to update the CloudFormation Stack to re-deploy the CloudFormation template with a new set of parameters."),(0,r.yg)("h5",{id:"steps---aws-console"},"Steps - AWS Console"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Navigate to CloudFormation in AWS Console"),(0,r.yg)("li",{parentName:"ol"},"Select the stack dedicated to the remote executor"),(0,r.yg)("li",{parentName:"ol"},"Click ",(0,r.yg)("strong",{parentName:"li"},"Update")),(0,r.yg)("li",{parentName:"ol"},"Select ",(0,r.yg)("strong",{parentName:"li"},"Replace Current Template")),(0,r.yg)("li",{parentName:"ol"},"Select ",(0,r.yg)("strong",{parentName:"li"},"Upload a template file")),(0,r.yg)("li",{parentName:"ol"},"Upload a copy of the Acryl Remote Executor ",(0,r.yg)("a",{parentName:"li",href:"https://raw.githubusercontent.com/acryldata/datahub-cloudformation/master/Ingestion/templates/python.ecs.template.yaml"},"CloudFormation Template"))),(0,r.yg)("p",{align:"center"},(0,r.yg)("img",{width:"70%",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/saas/Screen-Shot-2023-01-19-at-4.23.32-PM.png"})),(0,r.yg)("ol",{start:7},(0,r.yg)("li",{parentName:"ol"},"Click ",(0,r.yg)("strong",{parentName:"li"},"Next")),(0,r.yg)("li",{parentName:"ol"},"Change parameters based on your modifications (e.g. ImageTag, etc)"),(0,r.yg)("li",{parentName:"ol"},"Click ",(0,r.yg)("strong",{parentName:"li"},"Next")),(0,r.yg)("li",{parentName:"ol"},"Confirm your parameter changes, and update. This should perform the necessary upgrades.")),(0,r.yg)("h3",{id:"deploying-on-kubernetes"},"Deploying on Kubernetes"),(0,r.yg)("p",null,"The Helm chart ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/acryldata/datahub-executor-helm/tree/main/charts/datahub-executor-worker"},"datahub-executor-worker")," can be used to deploy on a Kubernetes cluster. These instructions also apply for deploying to Amazon Elastic Kubernetes Service (EKS) or Google Kubernetes Engine (GKE)."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Download Chart"),": Download the ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/acryldata/datahub-executor-helm/releases"},"latest release")," of the chart"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Unpack the release archive"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"tar zxvf v0.0.4.tar.gz --strip-components=2\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Contact Acryl representative"),": To provision the required access and infrastructure. The remote executor image is hosted on a private registry. For access within AWS, you will need to provide the IAM principal which will be allowed to pull from the ECR repository. For Google Cloud, you will need to provide the cluster's IAM service account."),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Create a secret with DataHub PAT"),": This can be generated under ",(0,r.yg)("strong",{parentName:"li"},"Settings > Access Tokens")," on DataHub. You can create the secret object as follows:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"kubectl create secret generic datahub-access-token-secret --from-literal=datahub-access-token-secret-key=<DATAHUB-ACCESS-TOKEN>\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"DataHub Cloud URL"),": The URL for your DataHub instance, e.g. ",(0,r.yg)("inlineCode",{parentName:"li"},"https://<your-company>.acryl.io/gms"),". Note that you MUST enter the trailing /gms when configuring the executor."),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Acryl Remote Executor Version:")," The version of the remote executor to deploy. This is converted into a container image tag."),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Optionally")," pass source secrets/environment variables as necessary. See ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/acryldata/datahub-executor-helm/blob/main/charts/datahub-executor-worker/values.yaml"},"values.yaml")," file for all the available configurable options."),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Install DataHub Executor chart as follows:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'  helm install \\\n  --set global.datahub.executor.worker_id="remote" \\\n  --set global.datahub.gms.url="https://company.acryl.io/gms" \\\n  --set image.tag=v0.3.1 \\\n  acryl datahub-executor-worker\n')))),(0,r.yg)("h2",{id:"faq"},"FAQ"),(0,r.yg)("h3",{id:"if-i-need-to-change-or-add-a-secret-that-is-stored-in-aws-secrets-manager-eg-for-rotation-will-the-new-secret-automatically-get-picked-up-by-acryls-executor"},"If I need to change (or add) a secret that is stored in AWS Secrets Manager, e.g. for rotation, will the new secret automatically get picked up by Acryl's executor?"),(0,r.yg)("p",null,"Unfortunately, no. Secrets are wired into the executor container at deployment time, via environment variables. Therefore, the ECS Task will need to be restarted (either manually or via a stack parameter update) whenever your secrets change."),(0,r.yg)("h3",{id:"i-want-to-deploy-multiple-acryl-executors-is-this-currently-possible"},"I want to deploy multiple Acryl Executors. Is this currently possible?"),(0,r.yg)("p",null,"Yes. Please contact your Acryl representative for details."),(0,r.yg)("h3",{id:"ive-run-the-cloudformation-template-how-can-i-tell-that-the-container-was-successfully-deployed"},"I've run the CloudFormation Template, how can I tell that the container was successfully deployed?"),(0,r.yg)("p",null,"We recommend verifying in AWS Console by navigating to ",(0,r.yg)("strong",{parentName:"p"},"ECS > Cluster > Stack Name > Services > Logs."),"\nWhen you first deploy the executor, you should a single log line to indicate success:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"Starting datahub executor worker\n")),(0,r.yg)("p",null,"This indicates that the remote executor has established a successful connection to your DataHub instance and is ready to execute ingestion & monitors.\nIf you DO NOT see this log line, but instead see something else, please contact your Acryl representative for support."))}y.isMDXComponent=!0}}]);