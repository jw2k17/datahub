"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[98581],{35610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"overviewSidebar":[{"type":"html","value":"<div>Getting Started</div>","defaultStyle":true},{"label":"What Is DataHub?","type":"category","collapsed":true,"items":[{"type":"link","label":"Quickstart Guide","href":"/docs/quickstart","docId":"docs/quickstart"},{"type":"link","label":"Demo","href":"https://demo.datahubproject.io/"},{"type":"link","label":"Adoption Stories","href":"/adoption-stories"},{"type":"link","label":"Concepts","href":"/docs/what-is-datahub/datahub-concepts","docId":"docs/what-is-datahub/datahub-concepts"}],"collapsible":true,"href":"/docs/features"},{"type":"category","label":"Features","items":[{"label":"Assertions","type":"category","items":[{"type":"link","label":"Column Assertions","href":"/docs/managed-datahub/observe/column-assertions","className":"saasOnly","docId":"docs/managed-datahub/observe/column-assertions"},{"type":"link","label":"Custom SQL Assertions","href":"/docs/managed-datahub/observe/custom-sql-assertions","className":"saasOnly","docId":"docs/managed-datahub/observe/custom-sql-assertions"},{"type":"link","label":"Freshness Assertions","href":"/docs/managed-datahub/observe/freshness-assertions","className":"saasOnly","docId":"docs/managed-datahub/observe/freshness-assertions"},{"type":"link","label":"Schema Assertions","href":"/docs/managed-datahub/observe/schema-assertions","className":"saasOnly","docId":"docs/managed-datahub/observe/schema-assertions"},{"type":"link","label":"Volume Assertions","href":"/docs/managed-datahub/observe/volume-assertions","className":"saasOnly","docId":"docs/managed-datahub/observe/volume-assertions"},{"label":"Open Assertions Specification","type":"category","items":[{"type":"link","label":"Snowflake","href":"/docs/assertions/snowflake/snowflake_dmfs","docId":"docs/assertions/snowflake/snowflake_dmfs"}],"collapsed":true,"collapsible":true,"href":"/docs/assertions/open-assertions-spec"}],"collapsed":true,"collapsible":true,"href":"/docs/managed-datahub/observe/assertions"},{"label":"Automations","type":"category","collapsed":false,"items":[{"type":"link","label":"Documentation Propagation","href":"/docs/automations/docs-propagation","docId":"docs/automations/docs-propagation"},{"type":"link","label":"Glossary Term Propagation","href":"/docs/automations/glossary-term-propagation","docId":"docs/automations/glossary-term-propagation"},{"type":"link","label":"BigQuery Metadata Sync","href":"/docs/automations/bigquery-metadata-sync","className":"saasOnly","docId":"docs/automations/bigquery-metadata-sync"},{"type":"link","label":"Snowflake Tag Sync","href":"/docs/automations/snowflake-tag-propagation","className":"saasOnly","docId":"docs/automations/snowflake-tag-propagation"},{"type":"link","label":"AI Classification","href":"/docs/automations/ai-term-suggestion","className":"saasOnly","docId":"docs/automations/ai-term-suggestion"},{"type":"link","label":"AI Documentation","href":"/docs/automations/ai-docs","className":"saasOnly","docId":"docs/automations/ai-docs"}],"collapsible":true},{"type":"link","label":"Business Attributes","href":"/docs/businessattributes","docId":"docs/businessattributes"},{"type":"link","label":"Business Glossary","href":"/docs/glossary/business-glossary","docId":"docs/glossary/business-glossary"},{"label":"Compliance Forms","type":"category","collapsed":true,"items":[{"type":"link","label":"Overview","href":"/docs/features/feature-guides/compliance-forms/overview","docId":"docs/features/feature-guides/compliance-forms/overview"},{"type":"link","label":"Create a Form","href":"/docs/features/feature-guides/compliance-forms/create-a-form","docId":"docs/features/feature-guides/compliance-forms/create-a-form"},{"type":"link","label":"Complete a Form","href":"/docs/features/feature-guides/compliance-forms/complete-a-form","docId":"docs/features/feature-guides/compliance-forms/complete-a-form"}],"collapsible":true},{"type":"link","label":"Data Contract","href":"/docs/managed-datahub/observe/data-contract","docId":"docs/managed-datahub/observe/data-contract"},{"type":"link","label":"Data Products","href":"/docs/dataproducts","docId":"docs/dataproducts"},{"type":"link","label":"Dataset Usage and Query History","href":"/docs/features/dataset-usage-and-query-history","docId":"docs/features/dataset-usage-and-query-history"},{"type":"link","label":"Domains","href":"/docs/domains","docId":"docs/domains"},{"type":"link","label":"Incidents","href":"/docs/incidents/incidents","docId":"docs/incidents/incidents"},{"type":"link","label":"Ingestion","href":"/docs/ui-ingestion","docId":"docs/ui-ingestion"},{"label":"Lineage","type":"category","items":[{"type":"link","label":"Lineage Impact analysis","href":"/docs/act-on-metadata/impact-analysis","docId":"docs/act-on-metadata/impact-analysis"},{"type":"link","label":"Managing Lineage via UI","href":"/docs/features/feature-guides/ui-lineage","docId":"docs/features/feature-guides/ui-lineage"}],"collapsed":true,"collapsible":true,"href":"/docs/generated/lineage/lineage-feature-guide"},{"type":"link","label":"Metadata Tests","href":"/docs/tests/metadata-tests","className":"saasOnly","docId":"docs/tests/metadata-tests"},{"type":"link","label":"Ownership","href":"/docs/ownership/ownership-types","docId":"docs/ownership/ownership-types"},{"type":"link","label":"Policies","href":"/docs/authorization/access-policies-guide","docId":"docs/authorization/access-policies-guide"},{"type":"link","label":"Posts","href":"/docs/posts","docId":"docs/posts"},{"label":"Properties","type":"category","collapsed":true,"items":[{"type":"link","label":"Overview","href":"/docs/features/feature-guides/properties/overview","docId":"docs/features/feature-guides/properties/overview"},{"type":"link","label":"Create and Add a Structured Property","href":"/docs/features/feature-guides/properties/create-a-property","docId":"docs/features/feature-guides/properties/create-a-property"}],"collapsible":true},{"type":"link","label":"Schema history","href":"/docs/schema-history","docId":"docs/schema-history"},{"type":"link","label":"Search","href":"/docs/how/search","docId":"docs/how/search"},{"type":"link","label":"Sync Status","href":"/docs/sync-status","docId":"docs/sync-status"},{"type":"link","label":"Tags","href":"/docs/tags","docId":"docs/tags"}],"collapsed":true,"collapsible":true,"href":"/docs/category/features"},{"label":"DataHub Cloud","type":"category","collapsed":true,"items":[{"type":"link","label":"Getting Started with DataHub Cloud","href":"/docs/managed-datahub/welcome-acryl","docId":"docs/managed-datahub/welcome-acryl"},{"type":"category","label":"Configure Single Sign-On","items":[{"type":"link","label":"Prerequisites for OIDC Authentication","href":"/docs/authentication/guides/sso/initialize-oidc","className":"saasOnly","docId":"docs/authentication/guides/sso/initialize-oidc"},{"type":"link","label":"Enable OIDC SSO","href":"/docs/managed-datahub/integrations/oidc-sso-integration","className":"saasOnly","docId":"docs/managed-datahub/integrations/oidc-sso-integration"}],"collapsed":true,"collapsible":true},{"type":"category","label":"DataHub API","items":[{"type":"link","label":"Entity Events API","href":"/docs/managed-datahub/datahub-api/entity-events-api","className":"saasOnly","docId":"docs/managed-datahub/datahub-api/entity-events-api"},{"type":"category","label":"GraphQL API","items":[{"type":"link","label":"Getting Started","href":"/docs/managed-datahub/datahub-api/graphql-api/getting-started","docId":"docs/managed-datahub/datahub-api/graphql-api/getting-started"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Slack","items":[{"type":"link","label":"Configure Slack For Notifications","href":"/docs/managed-datahub/slack/saas-slack-setup","className":"saasOnly","docId":"docs/managed-datahub/slack/saas-slack-setup"},{"type":"link","label":"Slack App Features","href":"/docs/managed-datahub/slack/saas-slack-app","className":"saasOnly","docId":"docs/managed-datahub/slack/saas-slack-app"},{"type":"link","label":"Troubleshoot Slack Issues","href":"/docs/managed-datahub/slack/saas-slack-troubleshoot","className":"saasOnly","docId":"docs/managed-datahub/slack/saas-slack-troubleshoot"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Operator Guides","items":[{"type":"link","label":"Setting up Remote Ingestion Executor","href":"/docs/managed-datahub/operator-guide/setting-up-remote-ingestion-executor","className":"saasOnly","docId":"docs/managed-datahub/operator-guide/setting-up-remote-ingestion-executor"},{"type":"link","label":"Setting up Events API on AWS EventBridge","href":"/docs/managed-datahub/operator-guide/setting-up-events-api-on-aws-eventbridge","className":"saasOnly","docId":"docs/managed-datahub/operator-guide/setting-up-events-api-on-aws-eventbridge"},{"type":"link","label":"AWS PrivateLink","href":"/docs/managed-datahub/integrations/aws-privatelink","className":"saasOnly","docId":"docs/managed-datahub/integrations/aws-privatelink"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Approval Workflows","href":"/docs/managed-datahub/approval-workflows","className":"saasOnly","docId":"docs/managed-datahub/approval-workflows"},{"type":"link","label":"Cloud Chrome Extension","href":"/docs/managed-datahub/chrome-extension","docId":"docs/managed-datahub/chrome-extension"},{"type":"link","label":"Subscriptions & Notifications","href":"/docs/managed-datahub/subscription-and-notification","className":"saasOnly","docId":"docs/managed-datahub/subscription-and-notification"},{"type":"category","label":"DataHub Cloud Release History","items":[{"type":"link","label":"v0.3.8","href":"/docs/managed-datahub/release-notes/v_0_3_8","docId":"docs/managed-datahub/release-notes/v_0_3_8"},{"type":"link","label":"v0.3.7","href":"/docs/managed-datahub/release-notes/v_0_3_7","docId":"docs/managed-datahub/release-notes/v_0_3_7"},{"type":"link","label":"v0.3.6","href":"/docs/managed-datahub/release-notes/v_0_3_6","docId":"docs/managed-datahub/release-notes/v_0_3_6"},{"type":"link","label":"v0.3.5","href":"/docs/managed-datahub/release-notes/v_0_3_5","docId":"docs/managed-datahub/release-notes/v_0_3_5"},{"type":"link","label":"v0.3.4","href":"/docs/managed-datahub/release-notes/v_0_3_4","docId":"docs/managed-datahub/release-notes/v_0_3_4"},{"type":"link","label":"v0.3.3","href":"/docs/managed-datahub/release-notes/v_0_3_3","docId":"docs/managed-datahub/release-notes/v_0_3_3"},{"type":"link","label":"v0.3.2","href":"/docs/managed-datahub/release-notes/v_0_3_2","docId":"docs/managed-datahub/release-notes/v_0_3_2"},{"type":"link","label":"v0.3.1","href":"/docs/managed-datahub/release-notes/v_0_3_1","docId":"docs/managed-datahub/release-notes/v_0_3_1"},{"type":"link","label":"v0.2.16","href":"/docs/managed-datahub/release-notes/v_0_2_16","docId":"docs/managed-datahub/release-notes/v_0_2_16"},{"type":"link","label":"v0.2.15.1","href":"/docs/managed-datahub/release-notes/v_0_2_15","docId":"docs/managed-datahub/release-notes/v_0_2_15"},{"type":"link","label":"v0.2.14.1","href":"/docs/managed-datahub/release-notes/v_0_2_14","docId":"docs/managed-datahub/release-notes/v_0_2_14"},{"type":"link","label":"v0.2.13","href":"/docs/managed-datahub/release-notes/v_0_2_13","docId":"docs/managed-datahub/release-notes/v_0_2_13"},{"type":"link","label":"v0.2.12","href":"/docs/managed-datahub/release-notes/v_0_2_12","docId":"docs/managed-datahub/release-notes/v_0_2_12"},{"type":"link","label":"v0.2.11","href":"/docs/managed-datahub/release-notes/v_0_2_11","docId":"docs/managed-datahub/release-notes/v_0_2_11"},{"type":"link","label":"v0.2.10","href":"/docs/managed-datahub/release-notes/v_0_2_10","docId":"docs/managed-datahub/release-notes/v_0_2_10"},{"type":"link","label":"v0.2.9","href":"/docs/managed-datahub/release-notes/v_0_2_9","docId":"docs/managed-datahub/release-notes/v_0_2_9"},{"type":"link","label":"v0.2.8","href":"/docs/managed-datahub/release-notes/v_0_2_8","docId":"docs/managed-datahub/release-notes/v_0_2_8"},{"type":"link","label":"v0.2.7","href":"/docs/managed-datahub/release-notes/v_0_2_7","docId":"docs/managed-datahub/release-notes/v_0_2_7"},{"type":"link","label":"v0.2.6","href":"/docs/managed-datahub/release-notes/v_0_2_6","docId":"docs/managed-datahub/release-notes/v_0_2_6"},{"type":"link","label":"v0.2.5","href":"/docs/managed-datahub/release-notes/v_0_2_5","docId":"docs/managed-datahub/release-notes/v_0_2_5"},{"type":"link","label":"v0.2.4","href":"/docs/managed-datahub/release-notes/v_0_2_4","docId":"docs/managed-datahub/release-notes/v_0_2_4"},{"type":"link","label":"v0.2.3","href":"/docs/managed-datahub/release-notes/v_0_2_3","docId":"docs/managed-datahub/release-notes/v_0_2_3"},{"type":"link","label":"v0.2.2","href":"/docs/managed-datahub/release-notes/v_0_2_2","docId":"docs/managed-datahub/release-notes/v_0_2_2"},{"type":"link","label":"v0.2.1","href":"/docs/managed-datahub/release-notes/v_0_2_1","docId":"docs/managed-datahub/release-notes/v_0_2_1"},{"type":"link","label":"v0.2.0","href":"/docs/managed-datahub/release-notes/v_0_2_0","docId":"docs/managed-datahub/release-notes/v_0_2_0"},{"type":"link","label":"v0.1.73","href":"/docs/managed-datahub/release-notes/v_0_1_73","docId":"docs/managed-datahub/release-notes/v_0_1_73"},{"type":"link","label":"v0.1.72","href":"/docs/managed-datahub/release-notes/v_0_1_72","docId":"docs/managed-datahub/release-notes/v_0_1_72"},{"type":"link","label":"v0.1.70","href":"/docs/managed-datahub/release-notes/v_0_1_70","docId":"docs/managed-datahub/release-notes/v_0_1_70"},{"type":"link","label":"v0.1.69","href":"/docs/managed-datahub/release-notes/v_0_1_69","docId":"docs/managed-datahub/release-notes/v_0_1_69"}],"collapsed":true,"collapsible":true}],"collapsible":true,"href":"/docs/managed-datahub/managed-datahub-overview"},{"type":"html","value":"<div>Integrations</div>","defaultStyle":true},{"type":"category","label":"Overview","items":[{"type":"link","label":"Recipe","href":"/docs/metadata-ingestion/recipe_overview","docId":"metadata-ingestion/recipe_overview"},{"type":"category","label":"Sinks","items":[{"type":"link","label":"Console","href":"/docs/metadata-ingestion/sink_docs/console","docId":"metadata-ingestion/sink_docs/console"},{"type":"link","label":"DataHub","href":"/docs/metadata-ingestion/sink_docs/datahub","docId":"metadata-ingestion/sink_docs/datahub"},{"type":"link","label":"Metadata File","href":"/docs/metadata-ingestion/sink_docs/metadata-file","docId":"metadata-ingestion/sink_docs/metadata-file"}],"collapsed":true,"collapsible":true,"href":"/docs/metadata-ingestion/sink_overview"},{"type":"category","label":"Transformers","items":[{"type":"link","label":"Dataset","href":"/docs/metadata-ingestion/docs/transformer/dataset_transformer","docId":"metadata-ingestion/docs/transformer/dataset_transformer"}],"collapsed":true,"collapsible":true,"href":"/docs/metadata-ingestion/docs/transformer/intro"}],"collapsed":true,"collapsible":true,"href":"/docs/metadata-ingestion"},{"type":"category","label":"Quickstart Guides","items":[{"type":"link","label":"CLI Ingestion","href":"/docs/metadata-ingestion/cli-ingestion","docId":"metadata-ingestion/cli-ingestion"},{"type":"category","label":"BigQuery","items":[{"type":"link","label":"Overview","href":"/docs/quick-ingestion-guides/bigquery/overview","docId":"docs/quick-ingestion-guides/bigquery/overview"},{"type":"link","label":"Setup","href":"/docs/quick-ingestion-guides/bigquery/setup","docId":"docs/quick-ingestion-guides/bigquery/setup"},{"type":"link","label":"Configuration","href":"/docs/quick-ingestion-guides/bigquery/configuration","docId":"docs/quick-ingestion-guides/bigquery/configuration"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Redshift","items":[{"type":"link","label":"Overview","href":"/docs/quick-ingestion-guides/redshift/overview","docId":"docs/quick-ingestion-guides/redshift/overview"},{"type":"link","label":"Setup","href":"/docs/quick-ingestion-guides/redshift/setup","docId":"docs/quick-ingestion-guides/redshift/setup"},{"type":"link","label":"Configuration","href":"/docs/quick-ingestion-guides/redshift/configuration","docId":"docs/quick-ingestion-guides/redshift/configuration"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Snowflake","items":[{"type":"link","label":"Overview","href":"/docs/quick-ingestion-guides/snowflake/overview","docId":"docs/quick-ingestion-guides/snowflake/overview"},{"type":"link","label":"Setup","href":"/docs/quick-ingestion-guides/snowflake/setup","docId":"docs/quick-ingestion-guides/snowflake/setup"},{"type":"link","label":"Configuration","href":"/docs/quick-ingestion-guides/snowflake/configuration","docId":"docs/quick-ingestion-guides/snowflake/configuration"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tableau","items":[{"type":"link","label":"Overview","href":"/docs/quick-ingestion-guides/tableau/overview","docId":"docs/quick-ingestion-guides/tableau/overview"},{"type":"link","label":"Setup","href":"/docs/quick-ingestion-guides/tableau/setup","docId":"docs/quick-ingestion-guides/tableau/setup"},{"type":"link","label":"Configuration","href":"/docs/quick-ingestion-guides/tableau/configuration","docId":"docs/quick-ingestion-guides/tableau/configuration"}],"collapsed":true,"collapsible":true},{"type":"category","label":"PowerBI","items":[{"type":"link","label":"Overview","href":"/docs/quick-ingestion-guides/powerbi/overview","docId":"docs/quick-ingestion-guides/powerbi/overview"},{"type":"link","label":"Setup","href":"/docs/quick-ingestion-guides/powerbi/setup","docId":"docs/quick-ingestion-guides/powerbi/setup"},{"type":"link","label":"Configuration","href":"/docs/quick-ingestion-guides/powerbi/configuration","docId":"docs/quick-ingestion-guides/powerbi/configuration"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Looker","items":[{"type":"link","label":"Overview","href":"/docs/quick-ingestion-guides/looker/overview","docId":"docs/quick-ingestion-guides/looker/overview"},{"type":"link","label":"Setup","href":"/docs/quick-ingestion-guides/looker/setup","docId":"docs/quick-ingestion-guides/looker/setup"},{"type":"link","label":"Configuration","href":"/docs/quick-ingestion-guides/looker/configuration","docId":"docs/quick-ingestion-guides/looker/configuration"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Sources","items":[{"type":"link","label":"Airflow","href":"/docs/lineage/airflow","docId":"docs/lineage/airflow"},{"type":"link","label":"Dagster","href":"/docs/lineage/dagster","docId":"docs/lineage/dagster"},{"type":"link","label":"OpenLineage","href":"/docs/lineage/openlineage","docId":"docs/lineage/openlineage"},{"type":"link","label":"Prefect","href":"/docs/lineage/prefect","docId":"docs/lineage/prefect"},{"type":"link","label":"Spark","href":"/docs/metadata-integration/java/acryl-spark-lineage","docId":"metadata-integration/java/acryl-spark-lineage/README"},{"type":"link","label":"Great Expectations","href":"/docs/metadata-ingestion/integration_docs/great-expectations","docId":"metadata-ingestion/integration_docs/great-expectations"},{"type":"link","label":"Protobuf Schemas","href":"/docs/metadata-integration/java/datahub-protobuf","docId":"metadata-integration/java/datahub-protobuf/README"},{"type":"link","label":"ABS Data Lake","href":"/docs/generated/ingestion/sources/abs","docId":"docs/generated/ingestion/sources/abs"},{"type":"link","label":"Athena","href":"/docs/generated/ingestion/sources/athena","docId":"docs/generated/ingestion/sources/athena"},{"type":"link","label":"Azure AD","href":"/docs/generated/ingestion/sources/azure-ad","docId":"docs/generated/ingestion/sources/azure-ad"},{"type":"link","label":"BigQuery","href":"/docs/generated/ingestion/sources/bigquery","docId":"docs/generated/ingestion/sources/bigquery"},{"type":"link","label":"Business Glossary","href":"/docs/generated/ingestion/sources/business-glossary","docId":"docs/generated/ingestion/sources/business-glossary"},{"type":"link","label":"Cassandra","href":"/docs/generated/ingestion/sources/cassandra","docId":"docs/generated/ingestion/sources/cassandra"},{"type":"link","label":"ClickHouse","href":"/docs/generated/ingestion/sources/clickhouse","docId":"docs/generated/ingestion/sources/clickhouse"},{"type":"link","label":"CockroachDB","href":"/docs/generated/ingestion/sources/cockroachdb","docId":"docs/generated/ingestion/sources/cockroachdb"},{"type":"link","label":"CSV Enricher","href":"/docs/generated/ingestion/sources/csv-enricher","docId":"docs/generated/ingestion/sources/csv-enricher"},{"type":"link","label":"Databricks","href":"/docs/generated/ingestion/sources/databricks","docId":"docs/generated/ingestion/sources/databricks"},{"type":"link","label":"DataHub","href":"/docs/generated/ingestion/sources/datahub","docId":"docs/generated/ingestion/sources/datahub"},{"type":"link","label":"DataHubApply","href":"/docs/generated/ingestion/sources/datahubapply","docId":"docs/generated/ingestion/sources/datahubapply"},{"type":"link","label":"DataHubGc","href":"/docs/generated/ingestion/sources/datahubgc","docId":"docs/generated/ingestion/sources/datahubgc"},{"type":"link","label":"dbt","href":"/docs/generated/ingestion/sources/dbt","docId":"docs/generated/ingestion/sources/dbt"},{"type":"link","label":"Delta Lake","href":"/docs/generated/ingestion/sources/delta-lake","docId":"docs/generated/ingestion/sources/delta-lake"},{"type":"link","label":"Demo Data","href":"/docs/generated/ingestion/sources/demo-data","docId":"docs/generated/ingestion/sources/demo-data"},{"type":"link","label":"Dremio","href":"/docs/generated/ingestion/sources/dremio","docId":"docs/generated/ingestion/sources/dremio"},{"type":"link","label":"Druid","href":"/docs/generated/ingestion/sources/druid","docId":"docs/generated/ingestion/sources/druid"},{"type":"link","label":"DynamoDB","href":"/docs/generated/ingestion/sources/dynamodb","docId":"docs/generated/ingestion/sources/dynamodb"},{"type":"link","label":"Elasticsearch","href":"/docs/generated/ingestion/sources/elasticsearch","docId":"docs/generated/ingestion/sources/elasticsearch"},{"type":"link","label":"Feast","href":"/docs/generated/ingestion/sources/feast","docId":"docs/generated/ingestion/sources/feast"},{"type":"link","label":"File Based Lineage","href":"/docs/generated/ingestion/sources/file-based-lineage","docId":"docs/generated/ingestion/sources/file-based-lineage"},{"type":"link","label":"Fivetran","href":"/docs/generated/ingestion/sources/fivetran","docId":"docs/generated/ingestion/sources/fivetran"},{"type":"link","label":"Glue","href":"/docs/generated/ingestion/sources/glue","docId":"docs/generated/ingestion/sources/glue"},{"type":"link","label":"Google Cloud Storage","href":"/docs/generated/ingestion/sources/gcs","docId":"docs/generated/ingestion/sources/gcs"},{"type":"link","label":"Grafana","href":"/docs/generated/ingestion/sources/grafana","docId":"docs/generated/ingestion/sources/grafana"},{"type":"link","label":"Hive","href":"/docs/generated/ingestion/sources/hive","docId":"docs/generated/ingestion/sources/hive"},{"type":"link","label":"Hive Metastore","href":"/docs/generated/ingestion/sources/hive-metastore","docId":"docs/generated/ingestion/sources/hive-metastore"},{"type":"link","label":"Iceberg","href":"/docs/generated/ingestion/sources/iceberg","docId":"docs/generated/ingestion/sources/iceberg"},{"type":"link","label":"JSON Schemas","href":"/docs/generated/ingestion/sources/json-schema","docId":"docs/generated/ingestion/sources/json-schema"},{"type":"link","label":"Kafka","href":"/docs/generated/ingestion/sources/kafka","docId":"docs/generated/ingestion/sources/kafka"},{"type":"link","label":"Kafka Connect","href":"/docs/generated/ingestion/sources/kafka-connect","docId":"docs/generated/ingestion/sources/kafka-connect"},{"type":"link","label":"LDAP","href":"/docs/generated/ingestion/sources/ldap","docId":"docs/generated/ingestion/sources/ldap"},{"type":"link","label":"Looker","href":"/docs/generated/ingestion/sources/looker","docId":"docs/generated/ingestion/sources/looker"},{"type":"link","label":"MariaDB","href":"/docs/generated/ingestion/sources/mariadb","docId":"docs/generated/ingestion/sources/mariadb"},{"type":"link","label":"Metabase","href":"/docs/generated/ingestion/sources/metabase","docId":"docs/generated/ingestion/sources/metabase"},{"type":"link","label":"Metadata File","href":"/docs/generated/ingestion/sources/metadata-file","docId":"docs/generated/ingestion/sources/metadata-file"},{"type":"link","label":"Microsoft SQL Server","href":"/docs/generated/ingestion/sources/mssql","docId":"docs/generated/ingestion/sources/mssql"},{"type":"link","label":"MLflow","href":"/docs/generated/ingestion/sources/mlflow","docId":"docs/generated/ingestion/sources/mlflow"},{"type":"link","label":"Mode","href":"/docs/generated/ingestion/sources/mode","docId":"docs/generated/ingestion/sources/mode"},{"type":"link","label":"MongoDB","href":"/docs/generated/ingestion/sources/mongodb","docId":"docs/generated/ingestion/sources/mongodb"},{"type":"link","label":"MySQL","href":"/docs/generated/ingestion/sources/mysql","docId":"docs/generated/ingestion/sources/mysql"},{"type":"link","label":"Neo4j","href":"/docs/generated/ingestion/sources/neo4j","docId":"docs/generated/ingestion/sources/neo4j"},{"type":"link","label":"NiFi","href":"/docs/generated/ingestion/sources/nifi","docId":"docs/generated/ingestion/sources/nifi"},{"type":"link","label":"Okta","href":"/docs/generated/ingestion/sources/okta","docId":"docs/generated/ingestion/sources/okta"},{"type":"link","label":"OpenAPI","href":"/docs/generated/ingestion/sources/openapi","docId":"docs/generated/ingestion/sources/openapi"},{"type":"link","label":"Oracle","href":"/docs/generated/ingestion/sources/oracle","docId":"docs/generated/ingestion/sources/oracle"},{"type":"link","label":"Postgres","href":"/docs/generated/ingestion/sources/postgres","docId":"docs/generated/ingestion/sources/postgres"},{"type":"link","label":"PowerBI","href":"/docs/generated/ingestion/sources/powerbi","docId":"docs/generated/ingestion/sources/powerbi"},{"type":"link","label":"PowerBI Report Server","href":"/docs/generated/ingestion/sources/powerbi-report-server","docId":"docs/generated/ingestion/sources/powerbi-report-server"},{"type":"link","label":"Preset","href":"/docs/generated/ingestion/sources/preset","docId":"docs/generated/ingestion/sources/preset"},{"type":"link","label":"Presto","href":"/docs/generated/ingestion/sources/presto","docId":"docs/generated/ingestion/sources/presto"},{"type":"link","label":"Pulsar","href":"/docs/generated/ingestion/sources/pulsar","docId":"docs/generated/ingestion/sources/pulsar"},{"type":"link","label":"Qlik Sense","href":"/docs/generated/ingestion/sources/qlik-sense","docId":"docs/generated/ingestion/sources/qlik-sense"},{"type":"link","label":"Redash","href":"/docs/generated/ingestion/sources/redash","docId":"docs/generated/ingestion/sources/redash"},{"type":"link","label":"Redshift","href":"/docs/generated/ingestion/sources/redshift","docId":"docs/generated/ingestion/sources/redshift"},{"type":"link","label":"S3 / Local Files","href":"/docs/generated/ingestion/sources/s3","docId":"docs/generated/ingestion/sources/s3"},{"type":"link","label":"SageMaker","href":"/docs/generated/ingestion/sources/sagemaker","docId":"docs/generated/ingestion/sources/sagemaker"},{"type":"link","label":"Salesforce","href":"/docs/generated/ingestion/sources/salesforce","docId":"docs/generated/ingestion/sources/salesforce"},{"type":"link","label":"SAP Analytics Cloud","href":"/docs/generated/ingestion/sources/sac","docId":"docs/generated/ingestion/sources/sac"},{"type":"link","label":"SAP HANA","href":"/docs/generated/ingestion/sources/hana","docId":"docs/generated/ingestion/sources/hana"},{"type":"link","label":"Sigma","href":"/docs/generated/ingestion/sources/sigma","docId":"docs/generated/ingestion/sources/sigma"},{"type":"link","label":"Slack","href":"/docs/generated/ingestion/sources/slack","docId":"docs/generated/ingestion/sources/slack"},{"type":"link","label":"Snowflake","href":"/docs/generated/ingestion/sources/snowflake","docId":"docs/generated/ingestion/sources/snowflake"},{"type":"link","label":"SQL Queries","href":"/docs/generated/ingestion/sources/sql-queries","docId":"docs/generated/ingestion/sources/sql-queries"},{"type":"link","label":"SQLAlchemy","href":"/docs/generated/ingestion/sources/sqlalchemy","docId":"docs/generated/ingestion/sources/sqlalchemy"},{"type":"link","label":"Superset","href":"/docs/generated/ingestion/sources/superset","docId":"docs/generated/ingestion/sources/superset"},{"type":"link","label":"Tableau","href":"/docs/generated/ingestion/sources/tableau","docId":"docs/generated/ingestion/sources/tableau"},{"type":"link","label":"Teradata","href":"/docs/generated/ingestion/sources/teradata","docId":"docs/generated/ingestion/sources/teradata"},{"type":"link","label":"Trino","href":"/docs/generated/ingestion/sources/trino","docId":"docs/generated/ingestion/sources/trino"},{"type":"link","label":"Vertica","href":"/docs/generated/ingestion/sources/vertica","docId":"docs/generated/ingestion/sources/vertica"}],"collapsed":true,"collapsible":true,"href":"/docs/metadata-ingestion/source_overview"},{"type":"category","label":"Advanced Guides","items":[{"type":"category","label":"Scheduling Ingestion","items":[{"type":"link","label":"Introduction to Scheduling Metadata Ingestion","href":"/docs/metadata-ingestion/schedule_docs/intro","docId":"metadata-ingestion/schedule_docs/intro"},{"type":"link","label":"Using Cron","href":"/docs/metadata-ingestion/schedule_docs/cron","docId":"metadata-ingestion/schedule_docs/cron"},{"type":"link","label":"Using Airflow","href":"/docs/metadata-ingestion/schedule_docs/airflow","docId":"metadata-ingestion/schedule_docs/airflow"},{"type":"link","label":"Using Kubernetes","href":"/docs/metadata-ingestion/schedule_docs/kubernetes","docId":"metadata-ingestion/schedule_docs/kubernetes"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Working With Platform Instances","href":"/docs/platform-instances","docId":"docs/platform-instances"},{"type":"link","label":"SQL Parsing","href":"/docs/lineage/sql_parsing","docId":"docs/lineage/sql_parsing"},{"type":"link","label":"Stateful Ingestion","href":"/docs/metadata-ingestion/docs/dev_guides/stateful","docId":"metadata-ingestion/docs/dev_guides/stateful"},{"type":"link","label":"Classification","href":"/docs/metadata-ingestion/docs/dev_guides/classification","docId":"metadata-ingestion/docs/dev_guides/classification"},{"type":"link","label":"Adding Stateful Ingestion to a Source","href":"/docs/metadata-ingestion/docs/dev_guides/add_stateful_ingestion_to_source","docId":"metadata-ingestion/docs/dev_guides/add_stateful_ingestion_to_source"},{"type":"link","label":"SQL Profiling","href":"/docs/metadata-ingestion/docs/dev_guides/sql_profiles","docId":"metadata-ingestion/docs/dev_guides/sql_profiles"},{"type":"link","label":"Profiling ingestions","href":"/docs/metadata-ingestion/docs/dev_guides/profiling_ingestions","docId":"metadata-ingestion/docs/dev_guides/profiling_ingestions"}],"collapsed":true,"collapsible":true},{"type":"html","value":"<div>Deployment</div>","defaultStyle":true},{"type":"category","label":"Deployment Guides","items":[{"type":"link","label":"Deploying to AWS","href":"/docs/deploy/aws","docId":"docs/deploy/aws"},{"type":"link","label":"Deploying to GCP","href":"/docs/deploy/gcp","docId":"docs/deploy/gcp"},{"type":"link","label":"Deploying to Azure","href":"/docs/deploy/azure","docId":"docs/deploy/azure"},{"type":"link","label":"Deploying with Docker","href":"/docs/docker","docId":"docker/README"},{"type":"link","label":"Deploying with Kubernetes","href":"/docs/deploy/kubernetes","docId":"docs/deploy/kubernetes"}],"collapsed":true,"collapsible":true,"href":"/docs/category/deployment-guides"},{"type":"category","label":"Advanced Guides","items":[{"type":"link","label":"Integrating with Confluent Cloud","href":"/docs/deploy/confluent-cloud","docId":"docs/deploy/confluent-cloud"},{"type":"link","label":"Deployment Environment Variables","href":"/docs/deploy/environment-vars","docId":"docs/deploy/environment-vars"},{"type":"link","label":"How to Extract Logs from DataHub Containers","href":"/docs/how/extract-container-logs","docId":"docs/how/extract-container-logs"}],"collapsed":true,"collapsible":true},{"type":"html","value":"<div>Admin</div>","defaultStyle":true},{"type":"category","label":"Authentication","items":[{"type":"link","label":"Overview","href":"/docs/authentication","docId":"docs/authentication/README"},{"type":"link","label":"Concepts & Key Components","href":"/docs/authentication/concepts","docId":"docs/authentication/concepts"},{"type":"link","label":"Changing the default user credentials","href":"/docs/authentication/changing-default-credentials","docId":"docs/authentication/changing-default-credentials"},{"type":"link","label":"Onboarding Users to DataHub","href":"/docs/authentication/guides/add-users","docId":"docs/authentication/guides/add-users"},{"type":"category","label":"Frontend Authentication","items":[{"type":"link","label":"JaaS Authentication","href":"/docs/authentication/guides/jaas","docId":"docs/authentication/guides/jaas"},{"type":"link","label":"Prerequisites for OIDC Authentication","href":"/docs/authentication/guides/sso/initialize-oidc","docId":"docs/authentication/guides/sso/initialize-oidc"},{"type":"link","label":"Configuring OIDC Authentication","href":"/docs/authentication/guides/sso/configure-oidc-react","docId":"docs/authentication/guides/sso/configure-oidc-react"},{"type":"link","label":"OIDC Proxy Configuration","href":"/docs/authentication/guides/sso/configure-oidc-behind-proxy","docId":"docs/authentication/guides/sso/configure-oidc-behind-proxy"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Metadata Service Authentication","href":"/docs/authentication/introducing-metadata-service-authentication","docId":"docs/authentication/introducing-metadata-service-authentication"},{"type":"link","label":"Personal Access Tokens","href":"/docs/authentication/personal-access-tokens","docId":"docs/authentication/personal-access-tokens"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Authorization","items":[{"type":"link","label":"Overview","href":"/docs/authorization","docId":"docs/authorization/README"},{"type":"link","label":"Roles","href":"/docs/authorization/roles","docId":"docs/authorization/roles"},{"type":"link","label":"Policies Guide","href":"/docs/authorization/policies","docId":"docs/authorization/policies"},{"type":"link","label":"Authorization using Groups","href":"/docs/authorization/groups","docId":"docs/authorization/groups"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Advanced Guides","items":[{"type":"link","label":"Removing Metadata from DataHub","href":"/docs/how/delete-metadata","docId":"docs/how/delete-metadata"},{"type":"link","label":"Configuring Authorization with Apache Ranger","href":"/docs/how/configuring-authorization-with-apache-ranger","docId":"docs/how/configuring-authorization-with-apache-ranger"},{"type":"category","label":"SCIM Provisioning","items":[{"type":"link","label":"SCIM Integration: MS Entra and DataHub","href":"/docs/managed-datahub/configuring-identity-provisioning-with-ms-entra","docId":"docs/managed-datahub/configuring-identity-provisioning-with-ms-entra"},{"type":"link","label":"SCIM Integration: Okta and DataHub","href":"/docs/managed-datahub/configuring-identity-provisioning-with-okta","docId":"docs/managed-datahub/configuring-identity-provisioning-with-okta"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Taking backup of DataHub","href":"/docs/how/backup-datahub","docId":"docs/how/backup-datahub"},{"type":"link","label":"Restoring Search and Graph Indices from Local Database","href":"/docs/how/restore-indices","docId":"docs/how/restore-indices"},{"type":"link","label":"Configuring Database Retention","href":"/docs/advanced/db-retention","docId":"docs/advanced/db-retention"},{"type":"link","label":"Monitoring DataHub","href":"/docs/advanced/monitoring","docId":"docs/advanced/monitoring"},{"type":"link","label":"Telemetry","href":"/docs/deploy/telemetry","docId":"docs/deploy/telemetry"},{"type":"link","label":"Configuring Kafka","href":"/docs/how/kafka-config","docId":"docs/how/kafka-config"},{"type":"link","label":"No Code Upgrade (In-Place Migration Guide)","href":"/docs/advanced/no-code-upgrade","docId":"docs/advanced/no-code-upgrade"},{"type":"link","label":"Debugging by Jattach","href":"/docs/how/jattach-guide","docId":"docs/how/jattach-guide"}],"collapsed":true,"collapsible":true},{"type":"html","value":"<div>Developers</div>","defaultStyle":true},{"type":"category","label":"Architecture","items":[{"type":"link","label":"Overview","href":"/docs/architecture/architecture","docId":"docs/architecture/architecture"},{"type":"link","label":"Components","href":"/docs/components","docId":"docs/components"},{"type":"link","label":"Ingestion Framework","href":"/docs/architecture/metadata-ingestion","docId":"docs/architecture/metadata-ingestion"},{"type":"link","label":"Serving Tier","href":"/docs/architecture/metadata-serving","docId":"docs/architecture/metadata-serving"},{"type":"link","label":"Docker Container Architecture","href":"/docs/architecture/docker-containers","docId":"docs/architecture/docker-containers"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Metadata Model","items":[{"type":"link","label":"The Metadata Model","href":"/docs/metadata-modeling/metadata-model","docId":"docs/modeling/metadata-model"},{"type":"link","label":"Extending the Metadata Model","href":"/docs/metadata-modeling/extending-the-metadata-model","docId":"docs/modeling/extending-the-metadata-model"},{"type":"link","label":"Metadata Events","href":"/docs/what/mxe","docId":"docs/what/mxe"},{"type":"category","label":"Entities","items":[{"type":"link","label":"Data Platform","href":"/docs/generated/metamodel/entities/dataplatform","docId":"docs/generated/metamodel/entities/dataPlatform"},{"type":"link","label":"Role","href":"/docs/generated/metamodel/entities/role","docId":"docs/generated/metamodel/entities/role"},{"type":"link","label":"Dataset","href":"/docs/generated/metamodel/entities/dataset","docId":"docs/generated/metamodel/entities/dataset"},{"type":"link","label":"DataJob","href":"/docs/generated/metamodel/entities/datajob","docId":"docs/generated/metamodel/entities/dataJob"},{"type":"link","label":"DataFlow","href":"/docs/generated/metamodel/entities/dataflow","docId":"docs/generated/metamodel/entities/dataFlow"},{"type":"link","label":"DataProcess","href":"/docs/generated/metamodel/entities/dataprocess","docId":"docs/generated/metamodel/entities/dataProcess"},{"type":"link","label":"DataProcessInstance","href":"/docs/generated/metamodel/entities/dataprocessinstance","docId":"docs/generated/metamodel/entities/dataProcessInstance"},{"type":"link","label":"Chart","href":"/docs/generated/metamodel/entities/chart","docId":"docs/generated/metamodel/entities/chart"},{"type":"link","label":"Dashboard","href":"/docs/generated/metamodel/entities/dashboard","docId":"docs/generated/metamodel/entities/dashboard"},{"type":"link","label":"Notebook","href":"/docs/generated/metamodel/entities/notebook","docId":"docs/generated/metamodel/entities/notebook"},{"type":"link","label":"Corpuser","href":"/docs/generated/metamodel/entities/corpuser","docId":"docs/generated/metamodel/entities/corpuser"},{"type":"link","label":"CorpGroup","href":"/docs/generated/metamodel/entities/corpgroup","docId":"docs/generated/metamodel/entities/corpGroup"},{"type":"link","label":"Domain","href":"/docs/generated/metamodel/entities/domain","docId":"docs/generated/metamodel/entities/domain"},{"type":"link","label":"Container","href":"/docs/generated/metamodel/entities/container","docId":"docs/generated/metamodel/entities/container"},{"type":"link","label":"Tag","href":"/docs/generated/metamodel/entities/tag","docId":"docs/generated/metamodel/entities/tag"},{"type":"link","label":"GlossaryTerm","href":"/docs/generated/metamodel/entities/glossaryterm","docId":"docs/generated/metamodel/entities/glossaryTerm"},{"type":"link","label":"GlossaryNode","href":"/docs/generated/metamodel/entities/glossarynode","docId":"docs/generated/metamodel/entities/glossaryNode"},{"type":"link","label":"Assertion","href":"/docs/generated/metamodel/entities/assertion","docId":"docs/generated/metamodel/entities/assertion"},{"type":"link","label":"MlModel","href":"/docs/generated/metamodel/entities/mlmodel","docId":"docs/generated/metamodel/entities/mlModel"},{"type":"link","label":"MlModelGroup","href":"/docs/generated/metamodel/entities/mlmodelgroup","docId":"docs/generated/metamodel/entities/mlModelGroup"},{"type":"link","label":"MlModelDeployment","href":"/docs/generated/metamodel/entities/mlmodeldeployment","docId":"docs/generated/metamodel/entities/mlModelDeployment"},{"type":"link","label":"MlFeatureTable","href":"/docs/generated/metamodel/entities/mlfeaturetable","docId":"docs/generated/metamodel/entities/mlFeatureTable"},{"type":"link","label":"MlFeature","href":"/docs/generated/metamodel/entities/mlfeature","docId":"docs/generated/metamodel/entities/mlFeature"},{"type":"link","label":"MlPrimaryKey","href":"/docs/generated/metamodel/entities/mlprimarykey","docId":"docs/generated/metamodel/entities/mlPrimaryKey"},{"type":"link","label":"Test","href":"/docs/generated/metamodel/entities/test","docId":"docs/generated/metamodel/entities/test"},{"type":"link","label":"SchemaField","href":"/docs/generated/metamodel/entities/schemafield","docId":"docs/generated/metamodel/entities/schemaField"},{"type":"link","label":"VersionSet","href":"/docs/generated/metamodel/entities/versionset","docId":"docs/generated/metamodel/entities/versionSet"},{"type":"link","label":"Incident","href":"/docs/generated/metamodel/entities/incident","docId":"docs/generated/metamodel/entities/incident"},{"type":"link","label":"DataHubRole","href":"/docs/generated/metamodel/entities/datahubrole","docId":"docs/generated/metamodel/entities/dataHubRole"},{"type":"link","label":"Post","href":"/docs/generated/metamodel/entities/post","docId":"docs/generated/metamodel/entities/post"},{"type":"link","label":"DataHubView","href":"/docs/generated/metamodel/entities/datahubview","docId":"docs/generated/metamodel/entities/dataHubView"},{"type":"link","label":"ErModelRelationship","href":"/docs/generated/metamodel/entities/ermodelrelationship","docId":"docs/generated/metamodel/entities/erModelRelationship"},{"type":"link","label":"Query","href":"/docs/generated/metamodel/entities/query","docId":"docs/generated/metamodel/entities/query"},{"type":"link","label":"DataProduct","href":"/docs/generated/metamodel/entities/dataproduct","docId":"docs/generated/metamodel/entities/dataProduct"},{"type":"link","label":"OwnershipType","href":"/docs/generated/metamodel/entities/ownershiptype","docId":"docs/generated/metamodel/entities/ownershipType"},{"type":"link","label":"BusinessAttribute","href":"/docs/generated/metamodel/entities/businessattribute","docId":"docs/generated/metamodel/entities/businessAttribute"},{"type":"link","label":"DataContract","href":"/docs/generated/metamodel/entities/datacontract","docId":"docs/generated/metamodel/entities/dataContract"},{"type":"link","label":"EntityType","href":"/docs/generated/metamodel/entities/entitytype","docId":"docs/generated/metamodel/entities/entityType"},{"type":"link","label":"DataType","href":"/docs/generated/metamodel/entities/datatype","docId":"docs/generated/metamodel/entities/dataType"},{"type":"link","label":"StructuredProperty","href":"/docs/generated/metamodel/entities/structuredproperty","docId":"docs/generated/metamodel/entities/structuredProperty"},{"type":"link","label":"Form","href":"/docs/generated/metamodel/entities/form","docId":"docs/generated/metamodel/entities/form"},{"type":"link","label":"PlatformResource","href":"/docs/generated/metamodel/entities/platformresource","docId":"docs/generated/metamodel/entities/platformResource"},{"type":"link","label":"DataHubPolicy","href":"/docs/generated/metamodel/entities/datahubpolicy","docId":"docs/generated/metamodel/entities/dataHubPolicy"},{"type":"link","label":"DataHubIngestionSource","href":"/docs/generated/metamodel/entities/datahubingestionsource","docId":"docs/generated/metamodel/entities/dataHubIngestionSource"},{"type":"link","label":"DataHubSecret","href":"/docs/generated/metamodel/entities/datahubsecret","docId":"docs/generated/metamodel/entities/dataHubSecret"},{"type":"link","label":"DataHubExecutionRequest","href":"/docs/generated/metamodel/entities/datahubexecutionrequest","docId":"docs/generated/metamodel/entities/dataHubExecutionRequest"},{"type":"link","label":"DataHubRetention","href":"/docs/generated/metamodel/entities/datahubretention","docId":"docs/generated/metamodel/entities/dataHubRetention"},{"type":"link","label":"DataPlatformInstance","href":"/docs/generated/metamodel/entities/dataplatforminstance","docId":"docs/generated/metamodel/entities/dataPlatformInstance"},{"type":"link","label":"Telemetry","href":"/docs/generated/metamodel/entities/telemetry","docId":"docs/generated/metamodel/entities/telemetry"},{"type":"link","label":"DataHubAccessToken","href":"/docs/generated/metamodel/entities/datahubaccesstoken","docId":"docs/generated/metamodel/entities/dataHubAccessToken"},{"type":"link","label":"DataHubUpgrade","href":"/docs/generated/metamodel/entities/datahubupgrade","docId":"docs/generated/metamodel/entities/dataHubUpgrade"},{"type":"link","label":"InviteToken","href":"/docs/generated/metamodel/entities/invitetoken","docId":"docs/generated/metamodel/entities/inviteToken"},{"type":"link","label":"GlobalSettings","href":"/docs/generated/metamodel/entities/globalsettings","docId":"docs/generated/metamodel/entities/globalSettings"},{"type":"link","label":"DataHubStepState","href":"/docs/generated/metamodel/entities/datahubstepstate","docId":"docs/generated/metamodel/entities/dataHubStepState"},{"type":"link","label":"DataHubPersona","href":"/docs/generated/metamodel/entities/datahubpersona","docId":"docs/generated/metamodel/entities/dataHubPersona"},{"type":"link","label":"DataHubConnection","href":"/docs/generated/metamodel/entities/datahubconnection","docId":"docs/generated/metamodel/entities/dataHubConnection"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Developing on DataHub","items":[{"type":"link","label":"Local Development","href":"/docs/developers","docId":"docs/developers"},{"type":"link","label":"Using Docker Images During Development","href":"/docs/docker/development","docId":"docs/docker/development"},{"type":"link","label":"Developing on Metadata Ingestion","href":"/docs/metadata-ingestion/developing","docId":"metadata-ingestion/developing"},{"type":"link","label":"Creating a New GraphQL Endpoint in GMS","href":"/docs/api/graphql/graphql-endpoint-development","docId":"docs/api/graphql/graphql-endpoint-development"},{"type":"category","label":"Modules","items":[{"type":"link","label":"datahub-web-react","href":"/docs/datahub-web-react","docId":"datahub-web-react/README"},{"type":"link","label":"datahub-frontend","href":"/docs/datahub-frontend","docId":"datahub-frontend/README"},{"type":"link","label":"datahub-graphql-core","href":"/docs/datahub-graphql-core","docId":"datahub-graphql-core/README"},{"type":"link","label":"metadata-service","href":"/docs/metadata-service","docId":"metadata-service/README"},{"type":"link","label":"metadata-jobs:mae-consumer-job","href":"/docs/metadata-jobs/mae-consumer-job","docId":"metadata-jobs/mae-consumer-job/README"},{"type":"link","label":"metadata-jobs:mce-consumer-job","href":"/docs/metadata-jobs/mce-consumer-job","docId":"metadata-jobs/mce-consumer-job/README"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Troubleshooting","items":[{"type":"link","label":"Quickstart Debugging Guide","href":"/docs/troubleshooting/quickstart","docId":"docs/troubleshooting/quickstart"},{"type":"link","label":"Build Debugging Guide","href":"/docs/troubleshooting/build","docId":"docs/troubleshooting/build"},{"type":"link","label":"General Debugging Guide","href":"/docs/troubleshooting/general","docId":"docs/troubleshooting/general"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Advanced Guides","items":[{"type":"link","label":"Datahub\'s Reporting Framework for Ingestion Job Telemetry","href":"/docs/metadata-ingestion/docs/dev_guides/reporting_telemetry","docId":"metadata-ingestion/docs/dev_guides/reporting_telemetry"},{"type":"link","label":"MetadataChangeProposal & MetadataChangeLog Events","href":"/docs/advanced/mcp-mcl","docId":"docs/advanced/mcp-mcl"},{"type":"link","label":"Upgrade Docker Image","href":"/docs/docker/datahub-upgrade","docId":"docker/datahub-upgrade/README"},{"type":"link","label":"No Code Metadata","href":"/docs/advanced/no-code-modeling","docId":"docs/advanced/no-code-modeling"},{"type":"link","label":"React Analytics","href":"/docs/datahub-web-react/src/app/analytics","docId":"datahub-web-react/src/app/analytics/README"},{"type":"link","label":"Migrate Graph Service Implementation to Elasticsearch","href":"/docs/how/migrating-graph-service-implementation","docId":"docs/how/migrating-graph-service-implementation"},{"type":"link","label":"SchemaFieldPath Specification (Version 2)","href":"/docs/advanced/field-path-spec-v2","docId":"docs/advanced/field-path-spec-v2"},{"type":"link","label":"Adding a Metadata Ingestion Source","href":"/docs/metadata-ingestion/adding-source","docId":"metadata-ingestion/adding-source"},{"type":"link","label":"Using a Custom Ingestion Source","href":"/docs/how/add-custom-ingestion-source","docId":"docs/how/add-custom-ingestion-source"},{"type":"link","label":"Adding a custom Dataset Data Platform","href":"/docs/how/add-custom-data-platform","docId":"docs/how/add-custom-data-platform"},{"type":"link","label":"Browse Paths Upgrade (August 2022)","href":"/docs/advanced/browse-paths-upgrade","docId":"docs/advanced/browse-paths-upgrade"},{"type":"link","label":"Generating Browse Paths (V2)","href":"/docs/browsev2/browse-paths-v2","docId":"docs/browseV2/browse-paths-v2"},{"type":"link","label":"Plugins Guide","href":"/docs/plugins","docId":"docs/plugins"},{"type":"link","label":"Bootstrap MetadataChangeProposals (MCPs)","href":"/docs/advanced/bootstrap-mcps","docId":"docs/advanced/bootstrap-mcps"},{"type":"link","label":"API Tracing","href":"/docs/advanced/api-tracing","docId":"docs/advanced/api-tracing"}],"collapsed":true,"collapsible":true},{"type":"html","value":"<div>API & SDKs</div>","defaultStyle":true},{"type":"link","label":"APIs","href":"/docs/api/datahub-apis","docId":"docs/api/datahub-apis"},{"type":"category","label":"API","items":[{"type":"category","label":"GraphQL API","items":[{"type":"link","label":"Overview","href":"/docs/api/graphql/overview","docId":"docs/api/graphql/overview"},{"type":"category","label":"Reference","items":[{"type":"link","label":"Queries","href":"/docs/graphql/queries","docId":"graphql/queries"},{"type":"link","label":"Mutations","href":"/docs/graphql/mutations","docId":"graphql/mutations"},{"type":"link","label":"Objects","href":"/docs/graphql/objects","docId":"graphql/objects"},{"type":"link","label":"Inputs","href":"/docs/graphql/inputObjects","docId":"graphql/inputObjects"},{"type":"link","label":"Interfaces","href":"/docs/graphql/interfaces","docId":"graphql/interfaces"},{"type":"link","label":"Unions","href":"/docs/graphql/unions","docId":"graphql/unions"},{"type":"link","label":"Enums","href":"/docs/graphql/enums","docId":"graphql/enums"},{"type":"link","label":"Scalars","href":"/docs/graphql/scalars","docId":"graphql/scalars"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Guides","items":[{"type":"link","label":"How To Set Up GraphQL","href":"/docs/api/graphql/how-to-set-up-graphql","docId":"docs/api/graphql/how-to-set-up-graphql"},{"type":"link","label":"Getting Started With GraphQL","href":"/docs/api/graphql/getting-started","docId":"docs/api/graphql/getting-started"},{"type":"link","label":"GraphQL Best Practices","href":"/docs/api/graphql/graphql-best-practices","docId":"docs/api/graphql/graphql-best-practices"},{"type":"link","label":"Access Token Management","href":"/docs/api/graphql/token-management","docId":"docs/api/graphql/token-management"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"OpenAPI","items":[{"type":"link","label":"OpenAPI Guide","href":"/docs/api/openapi/openapi-usage-guide","docId":"docs/api/openapi/openapi-usage-guide"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Timeline API","href":"/docs/dev-guides/timeline","docId":"docs/dev-guides/timeline"},{"type":"category","label":"Rest.li API","items":[{"type":"link","label":"Rest.li API Guide","href":"/docs/api/restli/restli-overview","docId":"docs/api/restli/restli-overview"},{"type":"link","label":"Restore Indices","href":"/docs/api/restli/restore-indices","docId":"docs/api/restli/restore-indices"},{"type":"link","label":"Get Index Sizes","href":"/docs/api/restli/get-index-sizes","docId":"docs/api/restli/get-index-sizes"},{"type":"link","label":"Truncate Timeseries Aspect","href":"/docs/api/restli/truncate-time-series-aspect","docId":"docs/api/restli/truncate-time-series-aspect"},{"type":"link","label":"Get ElasticSearch Task Status Endpoint","href":"/docs/api/restli/get-elastic-task-status","docId":"docs/api/restli/get-elastic-task-status"},{"type":"link","label":"Evaluate Tests","href":"/docs/api/restli/evaluate-tests","docId":"docs/api/restli/evaluate-tests"},{"type":"link","label":"Aspect Versioning and Rest.li Modeling","href":"/docs/advanced/aspect-versioning","docId":"docs/advanced/aspect-versioning"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"SDK","items":[{"type":"category","label":"Python SDK","items":[{"type":"link","label":"Python Emitter","href":"/docs/metadata-ingestion/as-a-library","docId":"metadata-ingestion/as-a-library"},{"type":"category","label":"Python SDK Reference","items":[{"type":"link","label":"Builder","href":"/docs/python-sdk/builder","docId":"python-sdk/builder"},{"type":"link","label":"Client","href":"/docs/python-sdk/clients","docId":"python-sdk/clients"},{"type":"link","label":"Models","href":"/docs/python-sdk/models","docId":"python-sdk/models"},{"type":"link","label":"URNs","href":"/docs/python-sdk/urns","docId":"python-sdk/urns"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"link","label":"Java SDK","href":"/docs/metadata-integration/java/as-a-library","docId":"metadata-integration/java/as-a-library"}],"collapsed":true,"collapsible":true},{"type":"category","label":"DataHub CLI","items":[{"type":"link","label":"Lite (Experimental)","href":"/docs/datahub_lite","docId":"docs/datahub_lite"}],"collapsed":true,"collapsible":true,"href":"/docs/cli"},{"type":"category","label":"DataHub Actions","items":[{"type":"link","label":"Introduction","href":"/docs/actions","docId":"docs/actions/README"},{"type":"link","label":"Quickstart","href":"/docs/actions/quickstart","docId":"docs/actions/quickstart"},{"type":"link","label":"Concepts","href":"/docs/actions/concepts","docId":"docs/actions/concepts"},{"type":"category","label":"Sources","items":[{"type":"link","label":"Cloud Event Source","href":"/docs/actions/sources/datahub-cloud-event-source","docId":"docs/actions/sources/datahub-cloud-event-source"},{"type":"link","label":"Kafka Event Source","href":"/docs/actions/sources/kafka-event-source","docId":"docs/actions/sources/kafka-event-source"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Events","items":[{"type":"link","label":"Entity Change Event V1","href":"/docs/actions/events/entity-change-event","docId":"docs/actions/events/entity-change-event"},{"type":"link","label":"Metadata Change Log Event V1","href":"/docs/actions/events/metadata-change-log-event","docId":"docs/actions/events/metadata-change-log-event"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Actions","items":[{"type":"link","label":"Ingestion Executor","href":"/docs/actions/actions/executor","docId":"docs/actions/actions/executor"},{"type":"link","label":"Hello World","href":"/docs/actions/actions/hello_world","docId":"docs/actions/actions/hello_world"},{"type":"link","label":"Slack","href":"/docs/actions/actions/slack","docId":"docs/actions/actions/slack"},{"type":"link","label":"Microsoft Teams","href":"/docs/actions/actions/teams","docId":"docs/actions/actions/teams"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Guides","items":[{"type":"link","label":"Developing a Transformer","href":"/docs/actions/guides/developing-a-transformer","docId":"docs/actions/guides/developing-a-transformer"},{"type":"link","label":"Developing an Action","href":"/docs/actions/guides/developing-an-action","docId":"docs/actions/guides/developing-an-action"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true,"href":"/docs/act-on-metadata"},{"type":"link","label":"Iceberg Catalog","href":"/docs/iceberg-catalog","docId":"docs/iceberg-catalog"},{"type":"category","label":"API & SDK Guides","items":[{"type":"link","label":"Dataset","href":"/docs/api/tutorials/datasets","docId":"docs/api/tutorials/datasets"},{"type":"link","label":"Deprecation","href":"/docs/api/tutorials/deprecation","docId":"docs/api/tutorials/deprecation"},{"type":"link","label":"Description","href":"/docs/api/tutorials/descriptions","docId":"docs/api/tutorials/descriptions"},{"type":"link","label":"Custom Properties","href":"/docs/api/tutorials/custom-properties","docId":"docs/api/tutorials/custom-properties"},{"type":"link","label":"Assertions","href":"/docs/api/tutorials/assertions","docId":"docs/api/tutorials/assertions"},{"type":"link","label":"Custom Assertions","href":"/docs/api/tutorials/custom-assertions","docId":"docs/api/tutorials/custom-assertions"},{"type":"link","label":"Incidents","href":"/docs/api/tutorials/incidents","docId":"docs/api/tutorials/incidents"},{"type":"link","label":"Operations","href":"/docs/api/tutorials/operations","docId":"docs/api/tutorials/operations"},{"type":"link","label":"Data Contracts","href":"/docs/api/tutorials/data-contracts","docId":"docs/api/tutorials/data-contracts"},{"type":"link","label":"Domains","href":"/docs/api/tutorials/domains","docId":"docs/api/tutorials/domains"},{"type":"link","label":"Compliance Forms","href":"/docs/api/tutorials/forms","docId":"docs/api/tutorials/forms"},{"type":"link","label":"Data Lineage","href":"/docs/api/tutorials/lineage","docId":"docs/api/tutorials/lineage"},{"type":"link","label":"AI/ML Integration","href":"/docs/api/tutorials/ml","docId":"docs/api/tutorials/ml"},{"type":"link","label":"Feature Store","href":"/docs/api/tutorials/ml_feature_store","docId":"docs/api/tutorials/ml_feature_store"},{"type":"link","label":"Ownership","href":"/docs/api/tutorials/owners","docId":"docs/api/tutorials/owners"},{"type":"link","label":"Structured Properties","href":"/docs/api/tutorials/structured-properties","docId":"docs/api/tutorials/structured-properties"},{"type":"link","label":"Tags","href":"/docs/api/tutorials/tags","docId":"docs/api/tutorials/tags"},{"type":"link","label":"Terms","href":"/docs/api/tutorials/terms","docId":"docs/api/tutorials/terms"},{"type":"link","label":"Patch","href":"/docs/advanced/patch","docId":"docs/advanced/patch"}],"collapsed":true,"collapsible":true},{"type":"html","value":"<div>Community</div>","defaultStyle":true},{"label":"Community","type":"category","collapsed":true,"items":[{"type":"link","label":"Slack","href":"/docs/slack","docId":"docs/slack"},{"type":"link","label":"Town Halls","href":"/docs/townhalls","docId":"docs/townhalls"},{"type":"link","label":"Code of Conduct","href":"/docs/code_of_conduct","docId":"docs/CODE_OF_CONDUCT"},{"type":"link","label":"Contributing","href":"/docs/contributing","docId":"docs/CONTRIBUTING"},{"type":"link","label":"Articles & Talks","href":"/docs/links","docId":"docs/links"},{"type":"link","label":"RFC Process","href":"/docs/rfc","docId":"docs/rfc"},{"type":"link","label":"Reporting Security Issues","href":"/docs/security","docId":"SECURITY"}],"collapsible":true,"href":"/docs/category/community"},{"type":"category","label":"Release History","items":[{"type":"link","label":"Releases","href":"/docs/releases","docId":"releases"},{"type":"link","label":"Updating DataHub","href":"/docs/how/updating-datahub","docId":"docs/how/updating-datahub"}],"collapsed":true,"collapsible":true}]},"docs":{"datahub-frontend/README":{"id":"datahub-frontend/README","title":"datahub-frontend","description":"DataHub frontend is a Play service written in Java. It is served as a mid-tier","sidebar":"overviewSidebar"},"datahub-graphql-core/README":{"id":"datahub-graphql-core/README","title":"datahub-graphql-core","description":"DataHub GraphQL API is a shared lib module containing a GraphQL API on top of the GMS service layer. It exposes a graph-based representation","sidebar":"overviewSidebar"},"datahub-web-react/README":{"id":"datahub-web-react/README","title":"datahub-web-react","description":"About","sidebar":"overviewSidebar"},"datahub-web-react/src/app/analytics/README":{"id":"datahub-web-react/src/app/analytics/README","title":"DataHub React Analytics","description":"About","sidebar":"overviewSidebar"},"docker/airflow/local_airflow":{"id":"docker/airflow/local_airflow","title":"Running Airflow locally with DataHub","description":"This guide is currently unmaintained. As of 0.10.0 the container described is not published alongside the DataHub CLI. If you\'d like to use it, please reach out to us on the community slack."},"docker/datahub-upgrade/README":{"id":"docker/datahub-upgrade/README","title":"DataHub Upgrade Docker Image","description":"This container is used to automatically apply upgrades from one version of DataHub to another.","sidebar":"overviewSidebar"},"docker/README":{"id":"docker/README","title":"Deploying with Docker","description":"Prerequisites","sidebar":"overviewSidebar"},"docs/act-on-metadata":{"id":"docs/act-on-metadata","title":"Act on Metadata Overview","description":"DataHub\'s metadata infrastructure is stream-oriented, meaning that all changes in metadata are communicated and reflected within the platform within seconds.","sidebar":"overviewSidebar"},"docs/act-on-metadata/impact-analysis":{"id":"docs/act-on-metadata/impact-analysis","title":"Lineage Impact Analysis","description":"Lineage Impact Analysis is a powerful workflow for understanding the complete set of upstream and downstream dependencies of a Dataset, Dashboard, Chart, and many other DataHub Entities.","sidebar":"overviewSidebar"},"docs/actions/actions/executor":{"id":"docs/actions/actions/executor","title":"Ingestion Executor","description":"Certified","sidebar":"overviewSidebar"},"docs/actions/actions/hello_world":{"id":"docs/actions/actions/hello_world","title":"Hello World","description":"Certified","sidebar":"overviewSidebar"},"docs/actions/actions/slack":{"id":"docs/actions/actions/slack","title":"Slack","description":"|  |  |","sidebar":"overviewSidebar"},"docs/actions/actions/teams":{"id":"docs/actions/actions/teams","title":"Microsoft Teams","description":"|  |  |","sidebar":"overviewSidebar"},"docs/actions/concepts":{"id":"docs/actions/concepts","title":"Concepts","description":"The Actions framework includes pluggable components for filtering, transforming, and reacting to important DataHub, such as","sidebar":"overviewSidebar"},"docs/actions/events/entity-change-event":{"id":"docs/actions/events/entity-change-event","title":"Entity Change Event V1","description":"Event Type","sidebar":"overviewSidebar"},"docs/actions/events/metadata-change-log-event":{"id":"docs/actions/events/metadata-change-log-event","title":"Metadata Change Log Event V1","description":"Event Type","sidebar":"overviewSidebar"},"docs/actions/guides/developing-a-transformer":{"id":"docs/actions/guides/developing-a-transformer","title":"Developing a Transformer","description":"In this guide, we will outline each step to developing a custom Transformer for the DataHub Actions Framework.","sidebar":"overviewSidebar"},"docs/actions/guides/developing-an-action":{"id":"docs/actions/guides/developing-an-action","title":"Developing an Action","description":"In this guide, we will outline each step to developing a Action for the DataHub Actions Framework.","sidebar":"overviewSidebar"},"docs/actions/quickstart":{"id":"docs/actions/quickstart","title":"Quickstart","description":"Prerequisites","sidebar":"overviewSidebar"},"docs/actions/README":{"id":"docs/actions/README","title":"Introduction","description":"Welcome to DataHub Actions! The Actions framework makes responding to realtime changes in your Metadata Graph easy, enabling you to seamlessly integrate DataHub into a broader events-based architecture.","sidebar":"overviewSidebar"},"docs/actions/sources/datahub-cloud-event-source":{"id":"docs/actions/sources/datahub-cloud-event-source","title":"DataHub Cloud Event Source","description":"Prerequisites","sidebar":"overviewSidebar"},"docs/actions/sources/kafka-event-source":{"id":"docs/actions/sources/kafka-event-source","title":"Kafka Event Source","description":"Overview","sidebar":"overviewSidebar"},"docs/advanced/api-tracing":{"id":"docs/advanced/api-tracing","title":"API Tracing","description":"Introduction","sidebar":"overviewSidebar"},"docs/advanced/aspect-versioning":{"id":"docs/advanced/aspect-versioning","title":"Aspect Versioning","description":"As each version of metadata aspect is immutable, any update to an existing aspect results in the creation of a new version. Typically one would expect the version number increases sequentially with the largest version number being the latest version, i.e. v1 (oldest), v2 (second oldest), ..., vN (latest). However, this approach results in major challenges in both rest.li modeling & transaction isolation and therefore requires a rethinking.","sidebar":"overviewSidebar"},"docs/advanced/backfilling":{"id":"docs/advanced/backfilling","title":"Backfilling Search Index & Graph DB","description":"WIP"},"docs/advanced/bootstrap-mcps":{"id":"docs/advanced/bootstrap-mcps","title":"Bootstrap MetadataChangeProposals (MCPs)","description":"Bootstrap MCPs are templated MCPs which are loaded when the system-update job runs. This allows adding","sidebar":"overviewSidebar"},"docs/advanced/browse-paths-upgrade":{"id":"docs/advanced/browse-paths-upgrade","title":"Browse Paths Upgrade (August 2022)","description":"Background","sidebar":"overviewSidebar"},"docs/advanced/db-retention":{"id":"docs/advanced/db-retention","title":"Configuring Database Retention","description":"Goal","sidebar":"overviewSidebar"},"docs/advanced/derived-aspects":{"id":"docs/advanced/derived-aspects","title":"Derived Aspects","description":"WIP"},"docs/advanced/entity-hierarchy":{"id":"docs/advanced/entity-hierarchy","title":"Entity Hierarchy","description":"WIP"},"docs/advanced/field-path-spec-v2":{"id":"docs/advanced/field-path-spec-v2","title":"SchemaFieldPath Specification (Version 2)","description":"This document outlines the formal specification for the fieldPath member of","sidebar":"overviewSidebar"},"docs/advanced/high-cardinality":{"id":"docs/advanced/high-cardinality","title":"High Cardinality Relationships","description":"As explained in What is a Relationship, the raw metadata for forming relationships is captured directly inside of a Metadata Aspect. The most natural way to model this is using an array, e.g. a group membership aspect contains an array of user URNs. However, this poses some challenges when the cardinality of the relationship is expected to be large (say, greater than 10,000). The aspect becomes large in size, which leads to slow update and retrieval. It may even exceed the underlying limit of the document store, which is often in the range of a few MBs. Furthermore, sending large messages (> 1MB) over Kafka requires special tuning and is generally discouraged."},"docs/advanced/mcp-mcl":{"id":"docs/advanced/mcp-mcl","title":"MetadataChangeProposal & MetadataChangeLog Events","description":"Overview & Vision","sidebar":"overviewSidebar"},"docs/advanced/monitoring":{"id":"docs/advanced/monitoring","title":"Monitoring DataHub","description":"Monitoring DataHub\'s system components is critical for operating and improving DataHub. This doc explains how to add","sidebar":"overviewSidebar"},"docs/advanced/no-code-modeling":{"id":"docs/advanced/no-code-modeling","title":"No Code Metadata","description":"Summary of changes","sidebar":"overviewSidebar"},"docs/advanced/no-code-upgrade":{"id":"docs/advanced/no-code-upgrade","title":"No Code Upgrade (In-Place Migration Guide)","description":"Summary of changes","sidebar":"overviewSidebar"},"docs/advanced/partial-update":{"id":"docs/advanced/partial-update","title":"Supporting Partial Aspect Update","description":"WIP"},"docs/advanced/patch":{"id":"docs/advanced/patch","title":"Emitting Patch Updates to DataHub","description":"Why Would You Use Patch","sidebar":"overviewSidebar"},"docs/advanced/pdl-best-practices":{"id":"docs/advanced/pdl-best-practices","title":"PDL Best Practices","description":"WIP"},"docs/api/datahub-apis":{"id":"docs/api/datahub-apis","title":"DataHub APIs","description":"DataHub has several APIs to manipulate metadata on the platform. Here\'s the list of APIs and their pros and cons to help you choose the right one for your use case.","sidebar":"overviewSidebar"},"docs/api/graphql/getting-started":{"id":"docs/api/graphql/getting-started","title":"Getting Started With GraphQL","description":"Reading an Entity: Queries","sidebar":"overviewSidebar"},"docs/api/graphql/graphql-best-practices":{"id":"docs/api/graphql/graphql-best-practices","title":"GraphQL Best Practices","description":"Introduction:","sidebar":"overviewSidebar"},"docs/api/graphql/graphql-endpoint-development":{"id":"docs/api/graphql/graphql-endpoint-development","title":"Creating a New GraphQL Endpoint in GMS","description":"This guide will walk you through how to add a new GraphQL endpoint in GMS.","sidebar":"overviewSidebar"},"docs/api/graphql/how-to-set-up-graphql":{"id":"docs/api/graphql/how-to-set-up-graphql","title":"How To Set Up GraphQL","description":"Preparing Local Datahub Deployment","sidebar":"overviewSidebar"},"docs/api/graphql/overview":{"id":"docs/api/graphql/overview","title":"DataHub GraphQL API","description":"DataHub provides a rich graphql API for programmatically interacting with the Entities & Relationships comprising your organization\'s Metadata Graph.","sidebar":"overviewSidebar"},"docs/api/graphql/token-management":{"id":"docs/api/graphql/token-management","title":"Access Token Management","description":"DataHub provides the following graphql endpoints for managing Access Tokens. In this page you will see examples as well","sidebar":"overviewSidebar"},"docs/api/openapi/openapi-usage-guide":{"id":"docs/api/openapi/openapi-usage-guide","title":"DataHub OpenAPI Guide","description":"Why OpenAPI","sidebar":"overviewSidebar"},"docs/api/restli/evaluate-tests":{"id":"docs/api/restli/evaluate-tests","title":"Evaluate Tests Endpoint","description":"You can do a HTTP POST request to /gms/test?action=evaluate endpoint with the urn as part of JSON Payload to run metadata tests for the particular URN.","sidebar":"overviewSidebar"},"docs/api/restli/get-elastic-task-status":{"id":"docs/api/restli/get-elastic-task-status","title":"Get ElasticSearch Task Status Endpoint","description":"You can do a HTTP POST request to /gms/operations?action=getEsTaskStatus endpoint to see the status of the input task running in ElasticSearch. For example, the task ID given by the truncateTimeseriesAspect endpoint. The task ID can be passed in as a string with node name and task ID separated by a colon (as is output by the previous API), or the node name and task ID parameters separately.","sidebar":"overviewSidebar"},"docs/api/restli/get-index-sizes":{"id":"docs/api/restli/get-index-sizes","title":"Get Index Sizes Endpoint","description":"You can do a HTTP POST request to /gms/operations?action=getIndexSizes endpoint with no parameters to see the size of indices in ElasticSearch. For now, only timeseries indices are supported, as they can grow indefinitely, and the truncateTimeseriesAspect endpoint is provided to clean up old entries. This endpoint can be used in conjunction with the cleanup endpoint to see which indices are the largest before truncation.","sidebar":"overviewSidebar"},"docs/api/restli/restli-overview":{"id":"docs/api/restli/restli-overview","title":"Rest.li API","description":"You can access basic documentation on the API endpoints by opening the /restli/docs endpoint in the browser.","sidebar":"overviewSidebar"},"docs/api/restli/restore-indices":{"id":"docs/api/restli/restore-indices","title":"Restore Indices Endpoint","description":"You can do a HTTP POST request to /gms/operations?action=restoreIndices endpoint with the urn as part of JSON Payload to restore indices for the particular URN, or with the urnLike regex to restore for batchSize URNs matching the pattern starting from start.","sidebar":"overviewSidebar"},"docs/api/restli/truncate-time-series-aspect":{"id":"docs/api/restli/truncate-time-series-aspect","title":"Truncate Timeseries Index Endpoint","description":"You can do a HTTP POST request to /gms/operations?action=truncateTimeseriesAspect endpoint to manage the size of a time series index by removing entries older than a certain timestamp, thereby truncating the table to only the entries needed, to save space. The getIndexSizes endpoint can be used to identify the largest indices. The output includes the index parameters needed for this function.","sidebar":"overviewSidebar"},"docs/api/tutorials/assertions":{"id":"docs/api/tutorials/assertions","title":"Assertions","description":"This guide specifically covers how to use the Assertion APIs for DataHub Cloud native assertions, including:","sidebar":"overviewSidebar"},"docs/api/tutorials/custom-assertions":{"id":"docs/api/tutorials/custom-assertions","title":"Custom Assertions","description":"This guide specifically covers how to create and report results for custom assertions in DataHub.","sidebar":"overviewSidebar"},"docs/api/tutorials/custom-properties":{"id":"docs/api/tutorials/custom-properties","title":"Custom Properties","description":"Why Would You Use Custom Properties on Datasets?","sidebar":"overviewSidebar"},"docs/api/tutorials/data-contracts":{"id":"docs/api/tutorials/data-contracts","title":"Data Contracts","description":"This guide specifically covers how to use the Data Contract APIs with DataHub Cloud.","sidebar":"overviewSidebar"},"docs/api/tutorials/datasets":{"id":"docs/api/tutorials/datasets","title":"Dataset","description":"Why Would You Use Datasets?","sidebar":"overviewSidebar"},"docs/api/tutorials/deprecation":{"id":"docs/api/tutorials/deprecation","title":"Deprecation","description":"Why Would You Deprecate Datasets?","sidebar":"overviewSidebar"},"docs/api/tutorials/descriptions":{"id":"docs/api/tutorials/descriptions","title":"Description","description":"Why Would You Use Description on Dataset?","sidebar":"overviewSidebar"},"docs/api/tutorials/domains":{"id":"docs/api/tutorials/domains","title":"Domains","description":"Why Would You Use Domains?","sidebar":"overviewSidebar"},"docs/api/tutorials/forms":{"id":"docs/api/tutorials/forms","title":"Compliance Forms","description":"Why Would You Use Compliance Forms?","sidebar":"overviewSidebar"},"docs/api/tutorials/incidents":{"id":"docs/api/tutorials/incidents","title":"Incidents","description":"Why Would You Use Incidents APIs?","sidebar":"overviewSidebar"},"docs/api/tutorials/lineage":{"id":"docs/api/tutorials/lineage","title":"Data Lineage","description":"Why Would You Use Lineage?","sidebar":"overviewSidebar"},"docs/api/tutorials/ml":{"id":"docs/api/tutorials/ml","title":"AI/ML Framework Integration with DataHub","description":"Why Integrate Your AI/ML System with DataHub?","sidebar":"overviewSidebar"},"docs/api/tutorials/ml_feature_store":{"id":"docs/api/tutorials/ml_feature_store","title":"Feature Store Integration With DataHub","description":"Why Would You Integrate Feature Store with DataHub?","sidebar":"overviewSidebar"},"docs/api/tutorials/operations":{"id":"docs/api/tutorials/operations","title":"Operations","description":"Why Would You Use Operations APIs?","sidebar":"overviewSidebar"},"docs/api/tutorials/owners":{"id":"docs/api/tutorials/owners","title":"Ownership","description":"Why Would You Use Users and Groups?","sidebar":"overviewSidebar"},"docs/api/tutorials/structured-properties":{"id":"docs/api/tutorials/structured-properties","title":"Structured Properties","description":"Why Would You Use Structured Properties?","sidebar":"overviewSidebar"},"docs/api/tutorials/tags":{"id":"docs/api/tutorials/tags","title":"Tags","description":"Why Would You Use Tags on Datasets?","sidebar":"overviewSidebar"},"docs/api/tutorials/terms":{"id":"docs/api/tutorials/terms","title":"Terms","description":"Why Would You Use Terms on Datasets?","sidebar":"overviewSidebar"},"docs/architecture/architecture":{"id":"docs/architecture/architecture","title":"Overview","description":"DataHub is a 3rd generation data catalog that enables Data Discovery, Collaboration, Governance, and end-to-end Observability","sidebar":"overviewSidebar"},"docs/architecture/docker-containers":{"id":"docs/architecture/docker-containers","title":"Docker Container Architecture","description":"When running DataHub via docker-compose. or helm, the following is a diagram of the containers involved","sidebar":"overviewSidebar"},"docs/architecture/metadata-ingestion":{"id":"docs/architecture/metadata-ingestion","title":"Ingestion Framework","description":"DataHub supports an extremely flexible ingestion architecture that can support push, pull, asynchronous and synchronous models.","sidebar":"overviewSidebar"},"docs/architecture/metadata-serving":{"id":"docs/architecture/metadata-serving","title":"Serving Tier","description":"The figure below shows the high-level system diagram for DataHub\'s Serving Tier.","sidebar":"overviewSidebar"},"docs/assertions/open-assertions-spec":{"id":"docs/assertions/open-assertions-spec","title":"DataHub Open Data Quality Assertions Specification","description":"DataHub is developing an open-source Data Quality Assertions Specification & Compiler that will allow you to declare data quality checks / expectations / assertions using a simple, universal","sidebar":"overviewSidebar"},"docs/assertions/snowflake/snowflake_dmfs":{"id":"docs/assertions/snowflake/snowflake_dmfs","title":"Snowflake DMF Assertions [BETA]","description":"The DataHub Open Assertion Compiler allows you to define your Data Quality assertions in a simple YAML format, and then compile them to be executed by Snowflake Data Metric Functions.","sidebar":"overviewSidebar"},"docs/authentication/changing-default-credentials":{"id":"docs/authentication/changing-default-credentials","title":"Changing the default user credentials","description":"Default User Credential","sidebar":"overviewSidebar"},"docs/authentication/concepts":{"id":"docs/authentication/concepts","title":"Concepts & Key Components","description":"We introduced a few important concepts to the Metadata Service to make authentication work:","sidebar":"overviewSidebar"},"docs/authentication/guides/add-users":{"id":"docs/authentication/guides/add-users","title":"Onboarding Users to DataHub","description":"New user accounts can be provisioned on DataHub in 3 ways:","sidebar":"overviewSidebar"},"docs/authentication/guides/jaas":{"id":"docs/authentication/guides/jaas","title":"JaaS Authentication","description":"Overview","sidebar":"overviewSidebar"},"docs/authentication/guides/sso/configure-oidc-behind-proxy":{"id":"docs/authentication/guides/sso/configure-oidc-behind-proxy","title":"OIDC Proxy Configuration","description":"Authored on 22/08/2023","sidebar":"overviewSidebar"},"docs/authentication/guides/sso/configure-oidc-react":{"id":"docs/authentication/guides/sso/configure-oidc-react","title":"Configuring OIDC Authentication","description":"The DataHub React application supports OIDC authentication built on top of the Pac4j Play library.","sidebar":"overviewSidebar"},"docs/authentication/guides/sso/initialize-oidc":{"id":"docs/authentication/guides/sso/initialize-oidc","title":"Prerequisites for OIDC Authentication","description":"This guide will walk you through the following steps with your identity provider:","sidebar":"overviewSidebar"},"docs/authentication/introducing-metadata-service-authentication":{"id":"docs/authentication/introducing-metadata-service-authentication","title":"Metadata Service Authentication","description":"Introduction","sidebar":"overviewSidebar"},"docs/authentication/personal-access-tokens":{"id":"docs/authentication/personal-access-tokens","title":"Personal Access Tokens","description":"Personal Access Tokens, or PATs for short, allow users to represent themselves in code and programmatically use DataHub\'s APIs in deployments where security is a concern.","sidebar":"overviewSidebar"},"docs/authentication/README":{"id":"docs/authentication/README","title":"Overview","description":"Authentication is the process of verifying the identity of a user or service. There are two","sidebar":"overviewSidebar"},"docs/authorization/access-policies-guide":{"id":"docs/authorization/access-policies-guide","title":"Access Policies","description":"Access Policies define who can do what to which resources. In conjunction with Roles, Access Policies determine what users are allowed to do on DataHub.","sidebar":"overviewSidebar"},"docs/authorization/groups":{"id":"docs/authorization/groups","title":"Authorization using Groups","description":"Introduction","sidebar":"overviewSidebar"},"docs/authorization/policies":{"id":"docs/authorization/policies","title":"Policies Guide","description":"Introduction","sidebar":"overviewSidebar"},"docs/authorization/README":{"id":"docs/authorization/README","title":"Overview","description":"Authorization specifies what accesses an authenticated user has within a system.","sidebar":"overviewSidebar"},"docs/authorization/roles":{"id":"docs/authorization/roles","title":"Roles","description":"DataHub provides the ability to use Roles to manage permissions.","sidebar":"overviewSidebar"},"docs/automations/ai-docs":{"id":"docs/automations/ai-docs","title":"AI Documentation","description":"This feature is currently in closed beta. Reach out to your Acryl representative to get access.","sidebar":"overviewSidebar"},"docs/automations/ai-term-suggestion":{"id":"docs/automations/ai-term-suggestion","title":"AI Glossary Term Suggestions","description":"This feature is currently in closed beta. Reach out to your Acryl representative to get access.","sidebar":"overviewSidebar"},"docs/automations/bigquery-metadata-sync":{"id":"docs/automations/bigquery-metadata-sync","title":"BigQuery Metadata Sync Automation","description":"This feature is currently in open beta in Acryl Cloud. Reach out to your Acryl representative to get access.","sidebar":"overviewSidebar"},"docs/automations/docs-propagation":{"id":"docs/automations/docs-propagation","title":"Documentation Propagation Automation","description":"This feature is currently in open beta in Acryl Cloud. Reach out to your Acryl representative to get access.","sidebar":"overviewSidebar"},"docs/automations/glossary-term-propagation":{"id":"docs/automations/glossary-term-propagation","title":"Glossary Term Propagation Automation","description":"This feature is currently in open beta in Acryl Cloud. Reach out to your Acryl representative to get access.","sidebar":"overviewSidebar"},"docs/automations/snowflake-tag-propagation":{"id":"docs/automations/snowflake-tag-propagation","title":"Snowflake Tag Propagation Automation","description":"This feature is currently in open beta in Acryl Cloud. Reach out to your Acryl representative to get access.","sidebar":"overviewSidebar"},"docs/browseV2/browse-paths-v2":{"id":"docs/browseV2/browse-paths-v2","title":"Generating Browse Paths (V2)","description":"Introduction","sidebar":"overviewSidebar"},"docs/businessattributes":{"id":"docs/businessattributes","title":"Business Attributes","description":"Note: This is BETA feature","sidebar":"overviewSidebar"},"docs/cli":{"id":"docs/cli","title":"DataHub CLI","description":"DataHub comes with a friendly cli called datahub that allows you to perform a lot of common operations using just the command line. Acryl Data maintains the pypi package for datahub.","sidebar":"overviewSidebar"},"docs/CODE_OF_CONDUCT":{"id":"docs/CODE_OF_CONDUCT","title":"Code of Conduct","description":"Our Pledge","sidebar":"overviewSidebar"},"docs/components":{"id":"docs/components","title":"Components","description":"The DataHub platform consists of the components shown in the following diagram.","sidebar":"overviewSidebar"},"docs/CONTRIBUTING":{"id":"docs/CONTRIBUTING","title":"Contributing","description":"We always welcome contributions to help make DataHub better. Take a moment to read this document if you would like to contribute.","sidebar":"overviewSidebar"},"docs/datahub_lite":{"id":"docs/datahub_lite","title":"DataHub Lite (Experimental)","description":"What is it?","sidebar":"overviewSidebar"},"docs/dataproducts":{"id":"docs/dataproducts","title":"Data Products","description":"\ud83e\udd1d Version compatibility","sidebar":"overviewSidebar"},"docs/deploy/aws":{"id":"docs/deploy/aws","title":"Deploying to AWS","description":"The following is a set of instructions to quickstart DataHub on AWS Elastic Kubernetes Service (EKS). Note, the guide","sidebar":"overviewSidebar"},"docs/deploy/azure":{"id":"docs/deploy/azure","title":"Deploying to Azure","description":"The following is a set of instructions to quickstart DataHub on Azure Kubernetes Service (AKS). Note, the guide","sidebar":"overviewSidebar"},"docs/deploy/confluent-cloud":{"id":"docs/deploy/confluent-cloud","title":"Integrating with Confluent Cloud","description":"DataHub provides the ability to easily leverage Confluent Cloud as your Kafka provider. To do so, you\'ll need to configure DataHub to talk to a broker and schema registry hosted by Confluent.","sidebar":"overviewSidebar"},"docs/deploy/environment-vars":{"id":"docs/deploy/environment-vars","title":"Deployment Environment Variables","description":"The following is a summary of a few important environment variables which expose various levers which control how","sidebar":"overviewSidebar"},"docs/deploy/gcp":{"id":"docs/deploy/gcp","title":"Deploying to GCP","description":"The following is a set of instructions to quickstart DataHub on GCP Google Kubernetes Engine (GKE). Note, the guide","sidebar":"overviewSidebar"},"docs/deploy/kubernetes":{"id":"docs/deploy/kubernetes","title":"Deploying with Kubernetes","description":"Introduction","sidebar":"overviewSidebar"},"docs/deploy/telemetry":{"id":"docs/deploy/telemetry","title":"DataHub Telemetry","description":"Overview of DataHub Telemetry","sidebar":"overviewSidebar"},"docs/dev-guides/timeline":{"id":"docs/dev-guides/timeline","title":"Timeline API","description":"The Timeline API supports viewing version history of schemas, documentation, tags, glossary terms, and other updates","sidebar":"overviewSidebar"},"docs/developers":{"id":"docs/developers","title":"Local Development","description":"Requirements","sidebar":"overviewSidebar"},"docs/docker/development":{"id":"docs/docker/development","title":"Using Docker Images During Development","description":"We\'ve created a special docker-compose.dev.yml override file that should configure docker images to be easier to use","sidebar":"overviewSidebar"},"docs/domains":{"id":"docs/domains","title":"Domains","description":"Starting in version 0.8.25, DataHub supports grouping data assets into logical collections called Domains. Domains are curated, top-level folders or categories where related assets can be explicitly grouped. Management of Domains can be centralized, or distributed out to Domain owners Currently, an asset can belong to only one Domain at a time.","sidebar":"overviewSidebar"},"docs/features":{"id":"docs/features","title":"What is DataHub?","description":"DataHub is a modern data catalog designed to streamline metadata management, data discovery, and data governance. It enables users to efficiently explore and understand their data, track data lineage, profile datasets, and establish data contracts.","sidebar":"overviewSidebar"},"docs/features/dataset-usage-and-query-history":{"id":"docs/features/dataset-usage-and-query-history","title":"Dataset Usage & Query History","description":"Dataset Usage & Query History can give dataset-level information about the top queries which referenced a dataset.","sidebar":"overviewSidebar"},"docs/features/feature-guides/compliance-forms/complete-a-form":{"id":"docs/features/feature-guides/compliance-forms/complete-a-form","title":"Complete a Form","description":"Once a Compliance Form has been published (see Create a Compliance Form), Assignees will receive notifications in their Task Center prompting them to complete the Form for each Asset they are responsible for.","sidebar":"overviewSidebar"},"docs/features/feature-guides/compliance-forms/create-a-form":{"id":"docs/features/feature-guides/compliance-forms/create-a-form","title":"Create a Form","description":"This guide will walk you through creating and assigning Compliance Forms, including:","sidebar":"overviewSidebar"},"docs/features/feature-guides/compliance-forms/overview":{"id":"docs/features/feature-guides/compliance-forms/overview","title":"Overview","description":"DataHub Compliance Forms streamline the process of documenting, annotating, and classifying your most critical Data Assets through a collaborative, crowdsourced approach.","sidebar":"overviewSidebar"},"docs/features/feature-guides/properties/create-a-property":{"id":"docs/features/feature-guides/properties/create-a-property","title":"Create and Add a Structured Property","description":"This guide walks you through creating a Structured Property via the DataHub UI, including:","sidebar":"overviewSidebar"},"docs/features/feature-guides/properties/overview":{"id":"docs/features/feature-guides/properties/overview","title":"Overview","description":"DataHub Structured Properties allow you to add custom, validated properties to any Entity type in DataHub. Using Structured Properties, you can enable data discovery and governance based on attributes unique to your organization.","sidebar":"overviewSidebar"},"docs/features/feature-guides/ui-lineage":{"id":"docs/features/feature-guides/ui-lineage","title":"Managing Data Lineage via UI","description":"Viewing Data Lineage","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/abs":{"id":"docs/generated/ingestion/sources/abs","title":"ABS Data Lake","description":"This connector ingests Azure Blob Storage (abbreviated to abs) datasets into DataHub. It allows mapping an individual","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/athena":{"id":"docs/generated/ingestion/sources/athena","title":"Athena","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/azure-ad":{"id":"docs/generated/ingestion/sources/azure-ad","title":"Azure AD","description":"Extracting DataHub Users","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/bigquery":{"id":"docs/generated/ingestion/sources/bigquery","title":"BigQuery","description":"Ingesting metadata from BigQuery requires using the bigquery module.","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/business-glossary":{"id":"docs/generated/ingestion/sources/business-glossary","title":"Business Glossary","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/cassandra":{"id":"docs/generated/ingestion/sources/cassandra","title":"Cassandra","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/clickhouse":{"id":"docs/generated/ingestion/sources/clickhouse","title":"ClickHouse","description":"There are 2 sources that provide integration with ClickHouse","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/cockroachdb":{"id":"docs/generated/ingestion/sources/cockroachdb","title":"CockroachDB","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/csv-enricher":{"id":"docs/generated/ingestion/sources/csv-enricher","title":"CSV Enricher","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/databricks":{"id":"docs/generated/ingestion/sources/databricks","title":"Databricks","description":"DataHub supports integration with Databricks ecosystem using a multitude of connectors, depending on your exact setup.","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/datahub":{"id":"docs/generated/ingestion/sources/datahub","title":"DataHub","description":"Migrate data from one DataHub instance to another.","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/datahubapply":{"id":"docs/generated/ingestion/sources/datahubapply","title":"DataHubApply","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/datahubgc":{"id":"docs/generated/ingestion/sources/datahubgc","title":"DataHubGc","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/dbt":{"id":"docs/generated/ingestion/sources/dbt","title":"dbt","description":"There are 2 sources that provide integration with dbt","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/delta-lake":{"id":"docs/generated/ingestion/sources/delta-lake","title":"Delta Lake","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/demo-data":{"id":"docs/generated/ingestion/sources/demo-data","title":"Demo Data","description":"This source loads sample data into DataHub. It is intended for demo and testing purposes only.","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/dremio":{"id":"docs/generated/ingestion/sources/dremio","title":"Dremio","description":"Concept Mapping","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/druid":{"id":"docs/generated/ingestion/sources/druid","title":"Druid","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/dynamodb":{"id":"docs/generated/ingestion/sources/dynamodb","title":"DynamoDB","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/elasticsearch":{"id":"docs/generated/ingestion/sources/elasticsearch","title":"Elasticsearch","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/feast":{"id":"docs/generated/ingestion/sources/feast","title":"Feast","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/file-based-lineage":{"id":"docs/generated/ingestion/sources/file-based-lineage","title":"File Based Lineage","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/fivetran":{"id":"docs/generated/ingestion/sources/fivetran","title":"Fivetran","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/gcs":{"id":"docs/generated/ingestion/sources/gcs","title":"Google Cloud Storage","description":"This connector ingests Google Cloud Storage datasets into DataHub. It allows mapping an individual file or a folder of files to a dataset in DataHub.","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/glue":{"id":"docs/generated/ingestion/sources/glue","title":"Glue","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/grafana":{"id":"docs/generated/ingestion/sources/grafana","title":"Grafana","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/hana":{"id":"docs/generated/ingestion/sources/hana","title":"SAP HANA","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/hive":{"id":"docs/generated/ingestion/sources/hive","title":"Hive","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/hive-metastore":{"id":"docs/generated/ingestion/sources/hive-metastore","title":"Hive Metastore","description":"There are 2 sources that provide integration with Hive Metastore","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/iceberg":{"id":"docs/generated/ingestion/sources/iceberg","title":"Iceberg","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/json-schema":{"id":"docs/generated/ingestion/sources/json-schema","title":"JSON Schemas","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/kafka":{"id":"docs/generated/ingestion/sources/kafka","title":"Kafka","description":"Extract Topics & Schemas from Apache Kafka or Confluent Cloud.","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/kafka-connect":{"id":"docs/generated/ingestion/sources/kafka-connect","title":"Kafka Connect","description":"Integration Details","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/ldap":{"id":"docs/generated/ingestion/sources/ldap","title":"LDAP","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/looker":{"id":"docs/generated/ingestion/sources/looker","title":"Looker","description":"There are 2 sources that provide integration with Looker","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/mariadb":{"id":"docs/generated/ingestion/sources/mariadb","title":"MariaDB","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/metabase":{"id":"docs/generated/ingestion/sources/metabase","title":"Metabase","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/metadata-file":{"id":"docs/generated/ingestion/sources/metadata-file","title":"Metadata File","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/mlflow":{"id":"docs/generated/ingestion/sources/mlflow","title":"MLflow","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/mode":{"id":"docs/generated/ingestion/sources/mode","title":"Mode","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/mongodb":{"id":"docs/generated/ingestion/sources/mongodb","title":"MongoDB","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/mssql":{"id":"docs/generated/ingestion/sources/mssql","title":"Microsoft SQL Server","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/mysql":{"id":"docs/generated/ingestion/sources/mysql","title":"MySQL","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/neo4j":{"id":"docs/generated/ingestion/sources/neo4j","title":"Neo4j","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/nifi":{"id":"docs/generated/ingestion/sources/nifi","title":"NiFi","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/okta":{"id":"docs/generated/ingestion/sources/okta","title":"Okta","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/openapi":{"id":"docs/generated/ingestion/sources/openapi","title":"OpenAPI","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/oracle":{"id":"docs/generated/ingestion/sources/oracle","title":"Oracle","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/postgres":{"id":"docs/generated/ingestion/sources/postgres","title":"Postgres","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/powerbi":{"id":"docs/generated/ingestion/sources/powerbi","title":"PowerBI","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/powerbi-report-server":{"id":"docs/generated/ingestion/sources/powerbi-report-server","title":"PowerBI Report Server","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/preset":{"id":"docs/generated/ingestion/sources/preset","title":"Preset","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/presto":{"id":"docs/generated/ingestion/sources/presto","title":"Presto","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/pulsar":{"id":"docs/generated/ingestion/sources/pulsar","title":"Pulsar","description":"Integration Details","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/qlik-sense":{"id":"docs/generated/ingestion/sources/qlik-sense","title":"Qlik Sense","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/redash":{"id":"docs/generated/ingestion/sources/redash","title":"Redash","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/redshift":{"id":"docs/generated/ingestion/sources/redshift","title":"Redshift","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/s3":{"id":"docs/generated/ingestion/sources/s3","title":"S3 / Local Files","description":"This connector ingests AWS S3 datasets into DataHub. It allows mapping an individual file or a folder of files to a dataset in DataHub.","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/sac":{"id":"docs/generated/ingestion/sources/sac","title":"SAP Analytics Cloud","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/sagemaker":{"id":"docs/generated/ingestion/sources/sagemaker","title":"SageMaker","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/salesforce":{"id":"docs/generated/ingestion/sources/salesforce","title":"Salesforce","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/sigma":{"id":"docs/generated/ingestion/sources/sigma","title":"Sigma","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/slack":{"id":"docs/generated/ingestion/sources/slack","title":"Slack","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/snowflake":{"id":"docs/generated/ingestion/sources/snowflake","title":"Snowflake","description":"Snowflake Ingestion through the UI","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/sql-queries":{"id":"docs/generated/ingestion/sources/sql-queries","title":"SQL Queries","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/sqlalchemy":{"id":"docs/generated/ingestion/sources/sqlalchemy","title":"SQLAlchemy","description":"Incubating","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/superset":{"id":"docs/generated/ingestion/sources/superset","title":"Superset","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/tableau":{"id":"docs/generated/ingestion/sources/tableau","title":"Tableau","description":"Certified","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/teradata":{"id":"docs/generated/ingestion/sources/teradata","title":"Teradata","description":"Testing","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/trino":{"id":"docs/generated/ingestion/sources/trino","title":"Trino","description":"There are 2 sources that provide integration with Trino","sidebar":"overviewSidebar"},"docs/generated/ingestion/sources/vertica":{"id":"docs/generated/ingestion/sources/vertica","title":"Vertica","description":"Integration Details","sidebar":"overviewSidebar"},"docs/generated/lineage/lineage-feature-guide":{"id":"docs/generated/lineage/lineage-feature-guide","title":"About DataHub Lineage","description":"Data lineage is a map that shows how data flows through your organization. It details where your data originates, how it travels, and where it ultimately ends up.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/assertion":{"id":"docs/generated/metamodel/entities/assertion","title":"Assertion","description":"Assertion entity represents a data quality rule applied on dataset.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/businessAttribute":{"id":"docs/generated/metamodel/entities/businessAttribute","title":"BusinessAttribute","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/chart":{"id":"docs/generated/metamodel/entities/chart","title":"Chart","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/container":{"id":"docs/generated/metamodel/entities/container","title":"Container","description":"A container of related data assets.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/corpGroup":{"id":"docs/generated/metamodel/entities/corpGroup","title":"CorpGroup","description":"CorpGroup represents an identity of a group of users in the enterprise.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/corpuser":{"id":"docs/generated/metamodel/entities/corpuser","title":"Corpuser","description":"CorpUser represents an identity of a person (or an account) in the enterprise.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dashboard":{"id":"docs/generated/metamodel/entities/dashboard","title":"Dashboard","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataContract":{"id":"docs/generated/metamodel/entities/dataContract","title":"DataContract","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataFlow":{"id":"docs/generated/metamodel/entities/dataFlow","title":"DataFlow","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubAccessToken":{"id":"docs/generated/metamodel/entities/dataHubAccessToken","title":"DataHubAccessToken","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubConnection":{"id":"docs/generated/metamodel/entities/dataHubConnection","title":"DataHubConnection","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubExecutionRequest":{"id":"docs/generated/metamodel/entities/dataHubExecutionRequest","title":"DataHubExecutionRequest","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubIngestionSource":{"id":"docs/generated/metamodel/entities/dataHubIngestionSource","title":"DataHubIngestionSource","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubPersona":{"id":"docs/generated/metamodel/entities/dataHubPersona","title":"DataHubPersona","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubPolicy":{"id":"docs/generated/metamodel/entities/dataHubPolicy","title":"DataHubPolicy","description":"DataHub Policies represent access policies granted to users or groups on metadata operations like edit, view etc.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubRetention":{"id":"docs/generated/metamodel/entities/dataHubRetention","title":"DataHubRetention","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubRole":{"id":"docs/generated/metamodel/entities/dataHubRole","title":"DataHubRole","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubSecret":{"id":"docs/generated/metamodel/entities/dataHubSecret","title":"DataHubSecret","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubStepState":{"id":"docs/generated/metamodel/entities/dataHubStepState","title":"DataHubStepState","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubUpgrade":{"id":"docs/generated/metamodel/entities/dataHubUpgrade","title":"DataHubUpgrade","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataHubView":{"id":"docs/generated/metamodel/entities/dataHubView","title":"DataHubView","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataJob":{"id":"docs/generated/metamodel/entities/dataJob","title":"DataJob","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataPlatform":{"id":"docs/generated/metamodel/entities/dataPlatform","title":"Data Platform","description":"Data Platforms are systems or tools that contain Datasets, Dashboards, Charts, and all other kinds of data assets modeled in the metadata graph.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataPlatformInstance":{"id":"docs/generated/metamodel/entities/dataPlatformInstance","title":"DataPlatformInstance","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataProcess":{"id":"docs/generated/metamodel/entities/dataProcess","title":"DataProcess","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataProcessInstance":{"id":"docs/generated/metamodel/entities/dataProcessInstance","title":"DataProcessInstance","description":"DataProcessInstance represents an instance of a datajob/jobflow run","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataProduct":{"id":"docs/generated/metamodel/entities/dataProduct","title":"DataProduct","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataset":{"id":"docs/generated/metamodel/entities/dataset","title":"Dataset","description":"The dataset entity is one the most important entities in the metadata model. They represent collections of data that are typically represented as Tables or Views in a database (e.g. BigQuery, Snowflake, Redshift etc.), Streams in a stream-processing environment (Kafka, Pulsar etc.), bundles of data found as Files or Folders in data lake systems (S3, ADLS, etc.).","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/dataType":{"id":"docs/generated/metamodel/entities/dataType","title":"DataType","description":"A type of data element stored within DataHub.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/domain":{"id":"docs/generated/metamodel/entities/domain","title":"Domain","description":"A data domain within an organization.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/entityType":{"id":"docs/generated/metamodel/entities/entityType","title":"EntityType","description":"A type of entity in the DataHub Metadata Model.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/erModelRelationship":{"id":"docs/generated/metamodel/entities/erModelRelationship","title":"ErModelRelationship","description":"ER Model Relationship of  Dataset Fields","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/form":{"id":"docs/generated/metamodel/entities/form","title":"Form","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/globalSettings":{"id":"docs/generated/metamodel/entities/globalSettings","title":"GlobalSettings","description":"Global settings for an the platform","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/glossaryNode":{"id":"docs/generated/metamodel/entities/glossaryNode","title":"GlossaryNode","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/glossaryTerm":{"id":"docs/generated/metamodel/entities/glossaryTerm","title":"GlossaryTerm","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/incident":{"id":"docs/generated/metamodel/entities/incident","title":"Incident","description":"An incident for an asset.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/inviteToken":{"id":"docs/generated/metamodel/entities/inviteToken","title":"InviteToken","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/mlFeature":{"id":"docs/generated/metamodel/entities/mlFeature","title":"MlFeature","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/mlFeatureTable":{"id":"docs/generated/metamodel/entities/mlFeatureTable","title":"MlFeatureTable","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/mlModel":{"id":"docs/generated/metamodel/entities/mlModel","title":"MlModel","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/mlModelDeployment":{"id":"docs/generated/metamodel/entities/mlModelDeployment","title":"MlModelDeployment","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/mlModelGroup":{"id":"docs/generated/metamodel/entities/mlModelGroup","title":"MlModelGroup","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/mlPrimaryKey":{"id":"docs/generated/metamodel/entities/mlPrimaryKey","title":"MlPrimaryKey","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/notebook":{"id":"docs/generated/metamodel/entities/notebook","title":"Notebook","description":"\u26a0\ufe0f Notice: The Notebook entity is under active community development and IS NOT YET fully supported on the DataHub web application.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/ownershipType":{"id":"docs/generated/metamodel/entities/ownershipType","title":"OwnershipType","description":"Ownership Type represents a user-created ownership category for a person or group who is responsible for an asset.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/platformResource":{"id":"docs/generated/metamodel/entities/platformResource","title":"PlatformResource","description":"Platform Resources are assets that are unmodeled and stored outside of the core data model. They are stored in DataHub primarily to help with application-specific use-cases that are not sufficiently generalized to move into the core data model.","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/post":{"id":"docs/generated/metamodel/entities/post","title":"Post","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/query":{"id":"docs/generated/metamodel/entities/query","title":"Query","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/role":{"id":"docs/generated/metamodel/entities/role","title":"Role","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/schemaField":{"id":"docs/generated/metamodel/entities/schemaField","title":"SchemaField","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/structuredProperty":{"id":"docs/generated/metamodel/entities/structuredProperty","title":"StructuredProperty","description":"Structured Property represents a property meant for extending the core model of a logical entity","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/tag":{"id":"docs/generated/metamodel/entities/tag","title":"Tag","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/telemetry":{"id":"docs/generated/metamodel/entities/telemetry","title":"Telemetry","description":"Aspects","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/test":{"id":"docs/generated/metamodel/entities/test","title":"Test","description":"A DataHub test","sidebar":"overviewSidebar"},"docs/generated/metamodel/entities/versionSet":{"id":"docs/generated/metamodel/entities/versionSet","title":"VersionSet","description":"Aspects","sidebar":"overviewSidebar"},"docs/glossary/business-glossary":{"id":"docs/glossary/business-glossary","title":"Business Glossary","description":"Introduction","sidebar":"overviewSidebar"},"docs/how/add-custom-data-platform":{"id":"docs/how/add-custom-data-platform","title":"Adding a custom Dataset Data Platform","description":"A Data Platform represents a 3rd party system from which Metadata Entities are ingested from. Each Dataset that is ingested is associated with a single platform, for example MySQL, Snowflake, Redshift, or BigQuery.","sidebar":"overviewSidebar"},"docs/how/add-custom-ingestion-source":{"id":"docs/how/add-custom-ingestion-source","title":"Using a Custom Ingestion Source","description":"Adding a custom ingestion source is the easiest way to extend Datahubs ingestion framework to support source systems","sidebar":"overviewSidebar"},"docs/how/add-new-aspect":{"id":"docs/how/add-new-aspect","title":"How to add a new metadata aspect?","description":"Adding a new metadata aspect is one of the most common ways to extend an existing entity."},"docs/how/add-user-data":{"id":"docs/how/add-user-data","title":"Adding user metadata in DataHub","description":"This guide shares how you can add user metadata in DataHub. Usually you would want to use one of our sources for ingesting user metadata. But if there is no connector for your use case then you would want to use this guide."},"docs/how/backup-datahub":{"id":"docs/how/backup-datahub","title":"Taking backup of DataHub","description":"Production","sidebar":"overviewSidebar"},"docs/how/configuring-authorization-with-apache-ranger":{"id":"docs/how/configuring-authorization-with-apache-ranger","title":"Configuring Authorization with Apache Ranger","description":"DataHub integration with Apache Ranger allows DataHub Authorization policies to be controlled inside Apache Ranger.","sidebar":"overviewSidebar"},"docs/how/delete-metadata":{"id":"docs/how/delete-metadata","title":"Removing Metadata from DataHub","description":"To follow this guide, you\'ll need the DataHub CLI.","sidebar":"overviewSidebar"},"docs/how/extract-container-logs":{"id":"docs/how/extract-container-logs","title":"How to Extract Logs from DataHub Containers","description":"DataHub containers, datahub GMS (backend server) and datahub frontend (UI server), write log files to the local container filesystem. To extract these logs, you\'ll need to get them from inside the container where the services are running.","sidebar":"overviewSidebar"},"docs/how/jattach-guide":{"id":"docs/how/jattach-guide","title":"Debugging by Jattach","description":"We have installed jattach in Docker image of datahub-gms, datahub-mae-consumer, datahub-mce-consumer","sidebar":"overviewSidebar"},"docs/how/kafka-config":{"id":"docs/how/kafka-config","title":"Configuring Kafka","description":"DataHub requires Kafka to operate. Kafka is used as a durable log that can be used to store inbound","sidebar":"overviewSidebar"},"docs/how/migrating-graph-service-implementation":{"id":"docs/how/migrating-graph-service-implementation","title":"Migrate Graph Service Implementation to Elasticsearch","description":"We currently support either Elasticsearch or Neo4j as backend implementations for the graph service. We recommend","sidebar":"overviewSidebar"},"docs/how/restore-indices":{"id":"docs/how/restore-indices","title":"Restoring Search and Graph Indices from Local Database","description":"If search or graph services go down or you have made changes to them that require reindexing, you can restore them from","sidebar":"overviewSidebar"},"docs/how/search":{"id":"docs/how/search","title":"Search","description":"The search bar is an important mechanism for discovering data assets in DataHub. From the search bar, you can find Datasets, Columns, Dashboards, Charts, Data Pipelines, and more. Simply type in a term and press \'enter\'.","sidebar":"overviewSidebar"},"docs/how/ui-tabs-guide":{"id":"docs/how/ui-tabs-guide","title":"UI Tabs Guide","description":"Some of the tabs in the UI might not be enabled by default. This guide is supposed to tell Admins of DataHub how to enable those UI tabs."},"docs/how/updating-datahub":{"id":"docs/how/updating-datahub","title":"Updating DataHub","description":"\x3c!--","sidebar":"overviewSidebar"},"docs/iceberg-catalog":{"id":"docs/iceberg-catalog","title":"DataHub Iceberg Catalog","description":"Note that this feature is currently in open Beta. With any questions or issues, please reach out to your Acryl","sidebar":"overviewSidebar"},"docs/incidents/incidents":{"id":"docs/incidents/incidents","title":"Incidents","description":"This page provides an overview of working with the DataHub Incidents API.","sidebar":"overviewSidebar"},"docs/lineage/airflow":{"id":"docs/lineage/airflow","title":"Airflow Integration","description":"If you\'re looking to schedule DataHub ingestion using Airflow, see the guide on scheduling ingestion with Airflow.","sidebar":"overviewSidebar"},"docs/lineage/dagster":{"id":"docs/lineage/dagster","title":"Dagster Integration","description":"This connector supports extracting:","sidebar":"overviewSidebar"},"docs/lineage/openlineage":{"id":"docs/lineage/openlineage","title":"OpenLineage","description":"DataHub, now supports OpenLineage integration. With this support, DataHub can ingest and display lineage information from various data processing frameworks, providing users with a comprehensive understanding of their data pipelines.","sidebar":"overviewSidebar"},"docs/lineage/prefect":{"id":"docs/lineage/prefect","title":"Prefect Integration with DataHub","description":"Overview","sidebar":"overviewSidebar"},"docs/lineage/sql_parsing":{"id":"docs/lineage/sql_parsing","title":"SQL Parsing","description":"Many data platforms are built on top of SQL, which means deeply understanding SQL queries is critical for understanding column-level lineage, usage, and more.","sidebar":"overviewSidebar"},"docs/links":{"id":"docs/links","title":"Articles & Talks","description":"Overviews","sidebar":"overviewSidebar"},"docs/managed-datahub/approval-workflows":{"id":"docs/managed-datahub/approval-workflows","title":"Approval Workflows","description":"Overview","sidebar":"overviewSidebar"},"docs/managed-datahub/chrome-extension":{"id":"docs/managed-datahub/chrome-extension","title":"DataHub Cloud Chrome Extension","description":"Learn how to upload and use the DataHub Cloud Chrome extension (beta) locally before it\'s available on the Chrome store.","sidebar":"overviewSidebar"},"docs/managed-datahub/configuring-identity-provisioning-with-ms-entra":{"id":"docs/managed-datahub/configuring-identity-provisioning-with-ms-entra","title":"SCIM Integration: MS Entra and DataHub","description":"SCIM Integration: MS Entra and DataHub","sidebar":"overviewSidebar"},"docs/managed-datahub/configuring-identity-provisioning-with-okta":{"id":"docs/managed-datahub/configuring-identity-provisioning-with-okta","title":"SCIM Integration: Okta and DataHub","description":"SCIM Integration: Okta and DataHub","sidebar":"overviewSidebar"},"docs/managed-datahub/datahub-api/entity-events-api":{"id":"docs/managed-datahub/datahub-api/entity-events-api","title":"Entity Events API","description":"This guide details the Entity Events API, which allows you to take action when things change on DataHub.","sidebar":"overviewSidebar"},"docs/managed-datahub/datahub-api/graphql-api/getting-started":{"id":"docs/managed-datahub/datahub-api/graphql-api/getting-started","title":"Getting Started","description":"Getting started with the DataHub GraphQL API.","sidebar":"overviewSidebar"},"docs/managed-datahub/integrations/aws-privatelink":{"id":"docs/managed-datahub/integrations/aws-privatelink","title":"AWS PrivateLink","description":"If you require a private connection between the provisioned DataHub instance and your own existing AWS account, Acryl supports using AWS PrivateLink in order to complete this private connection.","sidebar":"overviewSidebar"},"docs/managed-datahub/integrations/oidc-sso-integration":{"id":"docs/managed-datahub/integrations/oidc-sso-integration","title":"Enable OIDC SSO","description":"This page will help you set up OIDC SSO with your identity provider to log into Acryl Data","sidebar":"overviewSidebar"},"docs/managed-datahub/managed-datahub-overview":{"id":"docs/managed-datahub/managed-datahub-overview","title":"How DataHub Cloud compares to DataHub","description":"DataHub is the #1 open source data catalog for developers.","sidebar":"overviewSidebar"},"docs/managed-datahub/observe/assertions":{"id":"docs/managed-datahub/observe/assertions","title":"Assertions","description":"Currently we support Snowflake, Redshift, BigQuery, and Databricks for out-of-the-box contract monitoring as part of Acryl Observe.","sidebar":"overviewSidebar"},"docs/managed-datahub/observe/column-assertions":{"id":"docs/managed-datahub/observe/column-assertions","title":"Column Assertions","description":"This page provides an overview of working with DataHub Column Assertions","sidebar":"overviewSidebar"},"docs/managed-datahub/observe/custom-sql-assertions":{"id":"docs/managed-datahub/observe/custom-sql-assertions","title":"Custom SQL Assertions","description":"This page provides an overview of working with DataHub SQL Assertions","sidebar":"overviewSidebar"},"docs/managed-datahub/observe/data-contract":{"id":"docs/managed-datahub/observe/data-contract","title":"Data Contracts","description":"What Is a Data Contract","sidebar":"overviewSidebar"},"docs/managed-datahub/observe/freshness-assertions":{"id":"docs/managed-datahub/observe/freshness-assertions","title":"Freshness Assertions","description":"This page provides an overview of working with DataHub Freshness Assertions","sidebar":"overviewSidebar"},"docs/managed-datahub/observe/schema-assertions":{"id":"docs/managed-datahub/observe/schema-assertions","title":"Schema Assertions","description":"This page provides an overview of working with DataHub Schema Assertions","sidebar":"overviewSidebar"},"docs/managed-datahub/observe/volume-assertions":{"id":"docs/managed-datahub/observe/volume-assertions","title":"Volume Assertions","description":"This page provides an overview of working with DataHub Volume Assertions","sidebar":"overviewSidebar"},"docs/managed-datahub/operator-guide/setting-up-events-api-on-aws-eventbridge":{"id":"docs/managed-datahub/operator-guide/setting-up-events-api-on-aws-eventbridge","title":"Setting up Events API on AWS EventBridge","description":"This guide will walk through the configuration required to start receiving DataHub Cloud events via AWS EventBridge.","sidebar":"overviewSidebar"},"docs/managed-datahub/operator-guide/setting-up-remote-ingestion-executor":{"id":"docs/managed-datahub/operator-guide/setting-up-remote-ingestion-executor","title":"Setting up Remote Ingestion Executor","description":"This page describes the steps required to configure a remote executor, which allows you to ingest metadata from private metadata sources using private credentials via the DataHub UI.","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_1_69":{"id":"docs/managed-datahub/release-notes/v_0_1_69","title":"v0.1.69","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_1_70":{"id":"docs/managed-datahub/release-notes/v_0_1_70","title":"v0.1.70","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_1_72":{"id":"docs/managed-datahub/release-notes/v_0_1_72","title":"v0.1.72","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_1_73":{"id":"docs/managed-datahub/release-notes/v_0_1_73","title":"v0.1.73","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_0":{"id":"docs/managed-datahub/release-notes/v_0_2_0","title":"v0.2.0","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_1":{"id":"docs/managed-datahub/release-notes/v_0_2_1","title":"v0.2.1","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_10":{"id":"docs/managed-datahub/release-notes/v_0_2_10","title":"v0.2.10","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_11":{"id":"docs/managed-datahub/release-notes/v_0_2_11","title":"v0.2.11","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_12":{"id":"docs/managed-datahub/release-notes/v_0_2_12","title":"v0.2.12","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_13":{"id":"docs/managed-datahub/release-notes/v_0_2_13","title":"v0.2.13","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_14":{"id":"docs/managed-datahub/release-notes/v_0_2_14","title":"v0.2.14.1","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_15":{"id":"docs/managed-datahub/release-notes/v_0_2_15","title":"v0.2.15.1","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_16":{"id":"docs/managed-datahub/release-notes/v_0_2_16","title":"v0.2.16","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_2":{"id":"docs/managed-datahub/release-notes/v_0_2_2","title":"v0.2.2","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_3":{"id":"docs/managed-datahub/release-notes/v_0_2_3","title":"v0.2.3","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_4":{"id":"docs/managed-datahub/release-notes/v_0_2_4","title":"v0.2.4","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_5":{"id":"docs/managed-datahub/release-notes/v_0_2_5","title":"v0.2.5","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_6":{"id":"docs/managed-datahub/release-notes/v_0_2_6","title":"v0.2.6","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_7":{"id":"docs/managed-datahub/release-notes/v_0_2_7","title":"v0.2.7","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_8":{"id":"docs/managed-datahub/release-notes/v_0_2_8","title":"v0.2.8","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_2_9":{"id":"docs/managed-datahub/release-notes/v_0_2_9","title":"v0.2.9","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_3_1":{"id":"docs/managed-datahub/release-notes/v_0_3_1","title":"v0.3.1","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_3_2":{"id":"docs/managed-datahub/release-notes/v_0_3_2","title":"v0.3.2","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_3_3":{"id":"docs/managed-datahub/release-notes/v_0_3_3","title":"v0.3.3","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_3_4":{"id":"docs/managed-datahub/release-notes/v_0_3_4","title":"v0.3.4","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_3_5":{"id":"docs/managed-datahub/release-notes/v_0_3_5","title":"v0.3.5","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_3_6":{"id":"docs/managed-datahub/release-notes/v_0_3_6","title":"v0.3.6","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_3_7":{"id":"docs/managed-datahub/release-notes/v_0_3_7","title":"v0.3.7","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/release-notes/v_0_3_8":{"id":"docs/managed-datahub/release-notes/v_0_3_8","title":"v0.3.8","description":"---","sidebar":"overviewSidebar"},"docs/managed-datahub/slack/saas-slack-app":{"id":"docs/managed-datahub/slack/saas-slack-app","title":"Slack App Features","description":"Overview","sidebar":"overviewSidebar"},"docs/managed-datahub/slack/saas-slack-setup":{"id":"docs/managed-datahub/slack/saas-slack-setup","title":"Configure Slack For Notifications","description":"Install the DataHub Slack App into your Slack workspace","sidebar":"overviewSidebar"},"docs/managed-datahub/slack/saas-slack-troubleshoot":{"id":"docs/managed-datahub/slack/saas-slack-troubleshoot","title":"Troubleshoot Slack Issues","description":"This document provides troubleshooting guidance for the Slack integration. For more details on setting up the Slack integration, click here.","sidebar":"overviewSidebar"},"docs/managed-datahub/subscription-and-notification":{"id":"docs/managed-datahub/subscription-and-notification","title":"Subscriptions & Notifications","description":"DataHub\'s Subscriptions and Notifications feature gives you real-time change alerts on data assets of your choice.","sidebar":"overviewSidebar"},"docs/managed-datahub/welcome-acryl":{"id":"docs/managed-datahub/welcome-acryl","title":"Getting Started with DataHub Cloud","description":"Welcome to the DataHub Cloud! We at Acryl are on a mission to make data reliable by bringing clarity to the who, what, when, & how of your data ecosystem. We\'re thrilled to be on this journey with you; and cannot wait to see what we build together!","sidebar":"overviewSidebar"},"docs/modeling/extending-the-metadata-model":{"id":"docs/modeling/extending-the-metadata-model","title":"Extending the Metadata Model","description":"You can extend the metadata model by either creating a new Entity or extending an existing one. Unsure if you need to","sidebar":"overviewSidebar"},"docs/modeling/metadata-model":{"id":"docs/modeling/metadata-model","title":"The Metadata Model","description":"DataHub takes a schema-first approach to modeling metadata. We use the open-source Pegasus schema language (PDL) extended with a custom set of annotations to model metadata. The DataHub storage, serving, indexing and ingestion layer operates directly on top of the metadata model and supports strong types all the way from the client to the storage layer.","sidebar":"overviewSidebar"},"docs/ownership/ownership-types":{"id":"docs/ownership/ownership-types","title":"Custom Ownership Types","description":"\ud83e\udd1d Version compatibility","sidebar":"overviewSidebar"},"docs/platform-instances":{"id":"docs/platform-instances","title":"Working With Platform Instances","description":"DataHub\'s metadata model for Datasets supports a three-part key currently:","sidebar":"overviewSidebar"},"docs/plugins":{"id":"docs/plugins","title":"Plugins Guide","description":"Plugins are way to enhance the basic DataHub functionality in a custom manner.","sidebar":"overviewSidebar"},"docs/posts":{"id":"docs/posts","title":"Posts","description":"DataHub allows users to make Posts that can be displayed on the app. Currently, Posts are only supported on the Home Page, but may be extended to other surfaces of the app in the future. Posts can be used to accomplish the following:","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/bigquery/configuration":{"id":"docs/quick-ingestion-guides/bigquery/configuration","title":"Configuration","description":"Now that you have created a Service Account and Service Account Key in BigQuery in the prior step, it\'s now time to set up a connection via the DataHub UI.","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/bigquery/overview":{"id":"docs/quick-ingestion-guides/bigquery/overview","title":"Overview","description":"What You Will Get Out of This Guide","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/bigquery/setup":{"id":"docs/quick-ingestion-guides/bigquery/setup","title":"Setup","description":"To configure ingestion from BigQuery, you\'ll need a Service Account configured with the proper permission sets and an associated Service Account Key.","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/looker/configuration":{"id":"docs/quick-ingestion-guides/looker/configuration","title":"Configuration","description":"Now that you have created a DataHub-specific API key with the relevant access in the prior step, it\'s time to set up a connection via the DataHub UI.","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/looker/overview":{"id":"docs/quick-ingestion-guides/looker/overview","title":"Overview","description":"What You Will Get Out of This Guide","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/looker/setup":{"id":"docs/quick-ingestion-guides/looker/setup","title":"Setup","description":"Looker Prerequisites","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/powerbi/configuration":{"id":"docs/quick-ingestion-guides/powerbi/configuration","title":"Configuration","description":"Now that you have created a DataHub specific Azure AD app with the relevant access in the prior step, it\'s now time to set up a connection via the DataHub UI.","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/powerbi/overview":{"id":"docs/quick-ingestion-guides/powerbi/overview","title":"Overview","description":"What You Will Get Out of This Guide","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/powerbi/setup":{"id":"docs/quick-ingestion-guides/powerbi/setup","title":"Setup","description":"In order to configure ingestion from PowerBI, you\'ll first have to ensure you have an Azure AD app with permission to access the PowerBI resources.","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/redshift/configuration":{"id":"docs/quick-ingestion-guides/redshift/configuration","title":"Configuration","description":"Now that you have created a DataHub user in Redshift in the prior step, it\'s time to set up a connection via the DataHub UI.","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/redshift/overview":{"id":"docs/quick-ingestion-guides/redshift/overview","title":"Overview","description":"What You Will Get Out of This Guide","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/redshift/setup":{"id":"docs/quick-ingestion-guides/redshift/setup","title":"Setup","description":"To configure ingestion from Redshift, you\'ll need a User configured with the proper permission sets, and an associated.","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/snowflake/configuration":{"id":"docs/quick-ingestion-guides/snowflake/configuration","title":"Configuration","description":"Now that you have created a DataHub-specific user with the relevant roles in Snowflake in the prior step, it\'s now time to set up a connection via the DataHub UI.","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/snowflake/overview":{"id":"docs/quick-ingestion-guides/snowflake/overview","title":"Overview","description":"What You Will Get Out of This Guide","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/snowflake/setup":{"id":"docs/quick-ingestion-guides/snowflake/setup","title":"Setup","description":"In order to configure ingestion from Snowflake, you\'ll first have to ensure you have a Snowflake user with the ACCOUNTADMIN role or MANAGE GRANTS privilege.","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/tableau/configuration":{"id":"docs/quick-ingestion-guides/tableau/configuration","title":"Configuration","description":"Now that you have created a DataHub-specific user with the relevant access in Tableau in the prior step, it\'s now time to set up a connection via the DataHub UI.","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/tableau/overview":{"id":"docs/quick-ingestion-guides/tableau/overview","title":"Overview","description":"What You Will Get Out of This Guide","sidebar":"overviewSidebar"},"docs/quick-ingestion-guides/tableau/setup":{"id":"docs/quick-ingestion-guides/tableau/setup","title":"Setup","description":"In order to configure ingestion from Tableau, you\'ll first have to enable Tableau Metadata API and you should have a user with Site Administrator Explorer permissions.","sidebar":"overviewSidebar"},"docs/quickstart":{"id":"docs/quickstart","title":"DataHub Quickstart Guide","description":"This guide provides instructions on deploying the open source DataHub locally.","sidebar":"overviewSidebar"},"docs/rfc":{"id":"docs/rfc","title":"DataHub RFC Process","description":"What is an RFC?","sidebar":"overviewSidebar"},"docs/roadmap":{"id":"docs/roadmap","title":"DataHub Roadmap","description":"The DataHub Roadmap has a new home!"},"docs/schema-history":{"id":"docs/schema-history","title":"Schema History","description":"Schema History is a valuable tool for understanding how a Dataset changes over time and gives insight into the following cases,","sidebar":"overviewSidebar"},"docs/SECURITY_STANCE":{"id":"docs/SECURITY_STANCE","title":"DataHub\'s Commitment to Security","description":"Introduction"},"docs/slack":{"id":"docs/slack","title":"Slack","description":"The DataHub Slack is a thriving and rapidly growing community - we can\'t wait for you to join us!","sidebar":"overviewSidebar"},"docs/sync-status":{"id":"docs/sync-status","title":"Sync Status","description":"When looking at metadata in DataHub, it\'s useful to know if the information you\'re looking at is relevant.","sidebar":"overviewSidebar"},"docs/tags":{"id":"docs/tags","title":"Tags","description":"Tags are informal, loosely controlled labels that help in search & discovery. They can be added to datasets, dataset schemas, or containers, for an easy way to label or categorize entities \u2013 without having to associate them to a broader business glossary or vocabulary.","sidebar":"overviewSidebar"},"docs/tests/metadata-tests":{"id":"docs/tests/metadata-tests","title":"Metadata Tests","description":"DataHub includes a highly configurable, no-code framework that allows you to configure broad-spanning monitors & continuous actions","sidebar":"overviewSidebar"},"docs/townhall-history":{"id":"docs/townhall-history","title":"Town Hall History","description":"For the Town Hall meetings after June 2023, please refer to our LinkedIn Live event history."},"docs/townhalls":{"id":"docs/townhalls","title":"DataHub Town Halls","description":"We hold virtual Town Hall meetings with the DataHub Community on the last Thursday of every month (with some exceptions due to holidays).","sidebar":"overviewSidebar"},"docs/troubleshooting/build":{"id":"docs/troubleshooting/build","title":"Build Debugging Guide","description":"For when Local Development did not work out smoothly.","sidebar":"overviewSidebar"},"docs/troubleshooting/general":{"id":"docs/troubleshooting/general","title":"General Debugging Guide","description":"Logo for my platform is not appearing on the Home Page or search results","sidebar":"overviewSidebar"},"docs/troubleshooting/quickstart":{"id":"docs/troubleshooting/quickstart","title":"Quickstart Debugging Guide","description":"For when Quickstart did not work out smoothly.","sidebar":"overviewSidebar"},"docs/ui-ingestion":{"id":"docs/ui-ingestion","title":"UI Based Ingestion / Managed Ingestion","description":"Introduction","sidebar":"overviewSidebar"},"docs/what-is-datahub/datahub-concepts":{"id":"docs/what-is-datahub/datahub-concepts","title":"DataHub Concepts","description":"Explore key concepts of DataHub to take full advantage of its capabilities in managing your data.","sidebar":"overviewSidebar"},"docs/what/aspect":{"id":"docs/what/aspect","title":"What is a metadata aspect?","description":"A metadata aspect is a structured document, or more precisely a record in PDL,"},"docs/what/delta":{"id":"docs/what/delta","title":"What is a metadata delta?","description":"Rest.li supports partial update natively without needing explicitly defined models."},"docs/what/entity":{"id":"docs/what/entity","title":"Entities","description":"This page has been moved. Please refer to The Metadata Model for details on"},"docs/what/gma":{"id":"docs/what/gma","title":"What is Generalized Metadata Architecture (GMA)?","description":"GMA is the backend infrastructure for DataHub. Unlike existing architectures, GMA leverages multiple storage technologies to efficiently service the four most commonly used query patterns"},"docs/what/gms":{"id":"docs/what/gms","title":"What is Generalized Metadata Service (GMS)?","description":"Metadata for entities onboarded to GMA is served through microservices known as Generalized Metadata Service (GMS). GMS typically provides a Rest.li API and must access the metadata using GMA DAOs."},"docs/what/graph":{"id":"docs/what/graph","title":"What is GMA graph?","description":"All the entities and relationships are stored in a graph database, Neo4j."},"docs/what/mxe":{"id":"docs/what/mxe","title":"Metadata Events","description":"DataHub makes use a few important Kafka events for operation. The most notable of these include","sidebar":"overviewSidebar"},"docs/what/relationship":{"id":"docs/what/relationship","title":"What is a relationship?","description":"A relationship is a named associate between exactly two entities, a source and a destination."},"docs/what/search-document":{"id":"docs/what/search-document","title":"What is a search document?","description":"Search documents are also modeled using PDL explicitly."},"docs/what/search-index":{"id":"docs/what/search-index","title":"What is GMA search index?","description":"Each search document type (or entity type) will be mapped to an independent search index in Elasticsearch."},"docs/what/snapshot":{"id":"docs/what/snapshot","title":"What is a snapshot?","description":"A metadata snapshot models the current state of one or multiple metadata aspects associated with a particular entity."},"docs/what/urn":{"id":"docs/what/urn","title":"What is URN?","description":"URN (Uniform Resource Name) is the chosen scheme of URI to uniquely define any resource in DataHub. It has the following form"},"graphql/enums":{"id":"graphql/enums","title":"Enums","description":"AccessLevel","sidebar":"overviewSidebar"},"graphql/inputObjects":{"id":"graphql/inputObjects","title":"Input objects","description":"AcceptRoleInput","sidebar":"overviewSidebar"},"graphql/interfaces":{"id":"graphql/interfaces","title":"Interfaces","description":"Aspect","sidebar":"overviewSidebar"},"graphql/mutations":{"id":"graphql/mutations","title":"Mutations","description":"acceptRole","sidebar":"overviewSidebar"},"graphql/objects":{"id":"graphql/objects","title":"Objects","description":"Access","sidebar":"overviewSidebar"},"graphql/queries":{"id":"graphql/queries","title":"Queries","description":"aggregateAcrossEntities","sidebar":"overviewSidebar"},"graphql/scalars":{"id":"graphql/scalars","title":"Scalars","description":"Boolean","sidebar":"overviewSidebar"},"graphql/unions":{"id":"graphql/unions","title":"Unions","description":"AnalyticsChart","sidebar":"overviewSidebar"},"metadata-ingestion-modules/airflow-plugin/README":{"id":"metadata-ingestion-modules/airflow-plugin/README","title":"Datahub Airflow Plugin","description":"See the DataHub Airflow docs for details."},"metadata-ingestion-modules/dagster-plugin/README":{"id":"metadata-ingestion-modules/dagster-plugin/README","title":"Datahub Dagster Plugin","description":"See the DataHub Dagster docs for details."},"metadata-ingestion-modules/gx-plugin/README":{"id":"metadata-ingestion-modules/gx-plugin/README","title":"Datahub GX Plugin","description":"See the DataHub GX docs for details."},"metadata-ingestion-modules/prefect-plugin/README":{"id":"metadata-ingestion-modules/prefect-plugin/README","title":"prefect-datahub","description":"Emit flows & tasks metadata to DataHub REST API with prefect-datahub"},"metadata-ingestion/adding-source":{"id":"metadata-ingestion/adding-source","title":"Adding a Metadata Ingestion Source","description":"There are two ways of adding a metadata ingestion source.","sidebar":"overviewSidebar"},"metadata-ingestion/as-a-library":{"id":"metadata-ingestion/as-a-library","title":"Python Emitter","description":"In some cases, you might want to construct Metadata events directly and use programmatic ways to emit that metadata to DataHub. Use-cases are typically push-based and include emitting metadata events from CI/CD pipelines, custom orchestrators etc.","sidebar":"overviewSidebar"},"metadata-ingestion/cli-ingestion":{"id":"metadata-ingestion/cli-ingestion","title":"CLI Ingestion","description":"Batch ingestion involves extracting metadata from a source system in bulk. Typically, this happens on a predefined schedule using the Metadata Ingestion framework.","sidebar":"overviewSidebar"},"metadata-ingestion/developing":{"id":"metadata-ingestion/developing","title":"Developing on Metadata Ingestion","description":"If you just want to use metadata ingestion, check the user-centric guide.","sidebar":"overviewSidebar"},"metadata-ingestion/docs/dev_guides/add_stateful_ingestion_to_source":{"id":"metadata-ingestion/docs/dev_guides/add_stateful_ingestion_to_source","title":"Adding Stateful Ingestion to a Source","description":"Currently, datahub supports the Stale Metadata Removal and","sidebar":"overviewSidebar"},"metadata-ingestion/docs/dev_guides/classification":{"id":"metadata-ingestion/docs/dev_guides/classification","title":"Classification","description":"The classification feature enables sources to be configured to automatically predict info types for columns and use them as glossary terms. This is an explicit opt-in feature and is not enabled by default.","sidebar":"overviewSidebar"},"metadata-ingestion/docs/dev_guides/profiling_ingestions":{"id":"metadata-ingestion/docs/dev_guides/profiling_ingestions","title":"Profiling ingestions","description":"\ud83e\udd1d Version compatibility","sidebar":"overviewSidebar"},"metadata-ingestion/docs/dev_guides/reporting_telemetry":{"id":"metadata-ingestion/docs/dev_guides/reporting_telemetry","title":"Datahub\'s Reporting Framework for Ingestion Job Telemetry","description":"The Datahub\'s reporting framework allows for configuring reporting providers with the ingestion pipelines to send","sidebar":"overviewSidebar"},"metadata-ingestion/docs/dev_guides/sql_profiles":{"id":"metadata-ingestion/docs/dev_guides/sql_profiles","title":"SQL Profiling","description":"SQL Profiling collects table level and column level statistics.","sidebar":"overviewSidebar"},"metadata-ingestion/docs/dev_guides/stateful":{"id":"metadata-ingestion/docs/dev_guides/stateful","title":"Stateful Ingestion","description":"The stateful ingestion feature enables sources to be configured to save custom checkpoint states from their","sidebar":"overviewSidebar"},"metadata-ingestion/docs/transformer/dataset_transformer":{"id":"metadata-ingestion/docs/transformer/dataset_transformer","title":"Dataset","description":"The below table shows transformer which can transform aspects of entity Dataset.","sidebar":"overviewSidebar"},"metadata-ingestion/docs/transformer/intro":{"id":"metadata-ingestion/docs/transformer/intro","title":"Introduction","description":"What\u2019s a transformer?","sidebar":"overviewSidebar"},"metadata-ingestion/examples/structured_properties/README":{"id":"metadata-ingestion/examples/structured_properties/README","title":"Extended Properties","description":"Expected Capabilities"},"metadata-ingestion/examples/transforms/README":{"id":"metadata-ingestion/examples/transforms/README","title":"Custom transformer script","description":"This script sets up a transformer that reads in a list of owner URNs from a JSON file specified via owners_json and appends these owners to every MCE."},"metadata-ingestion/integration_docs/great-expectations":{"id":"metadata-ingestion/integration_docs/great-expectations","title":"Great Expectations","description":"This guide helps to setup and configure DataHubValidationAction in Great Expectations to send assertions(expectations) and their results to DataHub using DataHub\'s Python Rest emitter.","sidebar":"overviewSidebar"},"metadata-ingestion/README":{"id":"metadata-ingestion/README","title":"Introduction to Metadata Ingestion","description":"Please see our Integrations page to browse our ingestion sources and filter on their features.","sidebar":"overviewSidebar"},"metadata-ingestion/recipe_overview":{"id":"metadata-ingestion/recipe_overview","title":"Recipes","description":"A recipe is the main configuration file for metadata ingestion. It tells our ingestion scripts where to pull data from (source) and where to put it (sink).","sidebar":"overviewSidebar"},"metadata-ingestion/schedule_docs/airflow":{"id":"metadata-ingestion/schedule_docs/airflow","title":"Using Airflow","description":"If you are using Apache Airflow for your scheduling then you might want to also use it for scheduling your ingestion recipes. For any Airflow specific questions you can go through Airflow docs for more details.","sidebar":"overviewSidebar"},"metadata-ingestion/schedule_docs/cron":{"id":"metadata-ingestion/schedule_docs/cron","title":"Using Cron","description":"Assume you have a recipe file /home/ubuntu/datahubingest/mysqlto_datahub.yml on your machine","sidebar":"overviewSidebar"},"metadata-ingestion/schedule_docs/datahub":{"id":"metadata-ingestion/schedule_docs/datahub","title":"Using DataHub","description":"UI Ingestion can be used to schedule metadata ingestion through DataHub."},"metadata-ingestion/schedule_docs/intro":{"id":"metadata-ingestion/schedule_docs/intro","title":"Introduction to Scheduling Metadata Ingestion","description":"Given a recipe file /home/ubuntu/datahubingest/mysqlto_datahub.yml.","sidebar":"overviewSidebar"},"metadata-ingestion/schedule_docs/kubernetes":{"id":"metadata-ingestion/schedule_docs/kubernetes","title":"Using Kubernetes","description":"If you have deployed DataHub using our official helm charts you can use the","sidebar":"overviewSidebar"},"metadata-ingestion/sink_docs/console":{"id":"metadata-ingestion/sink_docs/console","title":"Console","description":"For context on getting started with ingestion, check out our metadata ingestion guide.","sidebar":"overviewSidebar"},"metadata-ingestion/sink_docs/datahub":{"id":"metadata-ingestion/sink_docs/datahub","title":"DataHub","description":"DataHub Rest","sidebar":"overviewSidebar"},"metadata-ingestion/sink_docs/metadata-file":{"id":"metadata-ingestion/sink_docs/metadata-file","title":"Metadata File","description":"For context on getting started with ingestion, check out our metadata ingestion guide.","sidebar":"overviewSidebar"},"metadata-ingestion/sink_overview":{"id":"metadata-ingestion/sink_overview","title":"Sinks","description":"Sinks are destinations for metadata.","sidebar":"overviewSidebar"},"metadata-ingestion/source_overview":{"id":"metadata-ingestion/source_overview","title":"Sources","description":"Sources are the data systems that we are extracting metadata from.","sidebar":"overviewSidebar"},"metadata-ingestion/source-docs-template":{"id":"metadata-ingestion/source-docs-template","title":"Source Name","description":"Certified"},"metadata-integration/java/acryl-spark-lineage/README":{"id":"metadata-integration/java/acryl-spark-lineage/README","title":"Spark","description":"To integrate Spark with DataHub, we provide a lightweight Java agent that listens for Spark application and job events","sidebar":"overviewSidebar"},"metadata-integration/java/as-a-library":{"id":"metadata-integration/java/as-a-library","title":"Java Emitter","description":"In some cases, you might want to construct Metadata events directly and use programmatic ways to emit that metadata to DataHub. Use-cases are typically push-based and include emitting metadata events from CI/CD pipelines, custom orchestrators etc.","sidebar":"overviewSidebar"},"metadata-integration/java/datahub-protobuf/README":{"id":"metadata-integration/java/datahub-protobuf/README","title":"Protobuf Schemas","description":"The datahub-protobuf module is designed to be used with the Java Emitter, the input is a compiled protobuf binary .protoc files and optionally the corresponding .proto source code. You can supply a file with multiple nested messages to be processed. If you have a file with multiple non-nested messages, you will need to separate them out into different files or supply the root message, as otherwise we will only process the first one.","sidebar":"overviewSidebar"},"metadata-integration/java/datahub-schematron/README":{"id":"metadata-integration/java/datahub-schematron/README","title":"SchemaTron (Incubating)","description":"\u26a0\ufe0f This is an incubating project in draft status. APIs and functionality may change significantly between releases."},"metadata-integration/java/openlineage-converter/README":{"id":"metadata-integration/java/openlineage-converter/README","title":"Openlineage Converter","description":"Overview"},"metadata-integration/java/spark-lineage-legacy/README":{"id":"metadata-integration/java/spark-lineage-legacy/README","title":"Spark (Legacy)","description":"This is our legacy Spark Integration which is replaced by Acryl Spark Lineage"},"metadata-jobs/mae-consumer-job/README":{"id":"metadata-jobs/mae-consumer-job/README","title":"metadata-jobs:mae-consumer-job","description":"The Metadata Audit Event Consumer is a Spring job which can be deployed by itself, or as part of the Metadata Service.","sidebar":"overviewSidebar"},"metadata-jobs/mce-consumer-job/README":{"id":"metadata-jobs/mce-consumer-job/README","title":"metadata-jobs:mce-consumer-job","description":"The Metadata Change Event Consumer is a Spring job which can be deployed by itself, or as part of the Metadata Service.","sidebar":"overviewSidebar"},"metadata-jobs/README":{"id":"metadata-jobs/README","title":"MXE Processing Jobs","description":"DataHub uses Kafka as the pub-sub message queue in the backend. There are 2 Kafka topics used by DataHub which are"},"metadata-models-custom/README":{"id":"metadata-models-custom/README","title":"A Custom Metadata Model","description":"This module hosts a gradle project where you can store your custom metadata model. It contains an example extension for you to follow."},"metadata-service/README":{"id":"metadata-service/README","title":"metadata-service","description":"DataHub Metadata Service is a service written in Java consisting of multiple servlets:","sidebar":"overviewSidebar"},"metadata-service/services/README":{"id":"metadata-service/services/README","title":"Service Layer","description":"Module to abstract away business logic from implementation specific libraries to make them lighter weight from a"},"perf-test/README":{"id":"perf-test/README","title":"Load testing with Locust","description":"Locust is an open-source, python-based, easy-to-use load testing tool. It provides an interface to"},"python-sdk/builder":{"id":"python-sdk/builder","title":"Builder","description":"\\\\n\\\\n\\\\nThese classes and methods make it easier to construct MetadataChangeProposals and MetadataChangeEvents.\\\\n\\\\n\\\\nclass datahub.emitter.mcp.MetadataChangeProposalWrapper(entityType=\'ENTITYTYPEUNSET\', changeType=\'UPSERT\', entityUrn=None, entityKeyAspect=None, auditHeader=None, aspectName=None, aspect=None, systemMetadata=None)\\\\nBases\\\\n\\\\nentityType (str)\\\\nchangeType (Unionstr, ChangeTypeClass])\\\\nentityUrn (Optional[str])\\\\nentityKeyAspect (Optional[Aspect])\\\\nauditHeader (Optional[KafkaAuditHeaderClass])\\\\naspectName (Optional[str])\\\\naspect (Optional[Aspect])\\\\nsystemMetadata (Optional[SystemMetadataClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nentityType Union[str, ChangeTypeClass] = \'UPSERT\'\\\\n\\\\n\\\\n\\\\nentityUrn Optional[Aspect] = None\\\\n\\\\n\\\\n\\\\nauditHeader Optional[str] = None\\\\n\\\\n\\\\n\\\\naspect Optional[SystemMetadataClass] = None\\\\n\\\\n\\\\n\\\\nclassmethod constructmany(entityUrn, aspects)\\\\n\\\\nParameters\\\\nList[MetadataChangeProposalWrapper]\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nmakemcp()\\\\n\\\\nReturn type\\\\nbool\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntoobj(tuples=False, simplifiedstructure=False)\\\\n\\\\nParameters\\\\ndict\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromobj(obj, tuples=False)\\\\nAttempt to deserialize into an MCPW, but fall back\\\\nto a standard MCP if we\\\\u2019re missing codegen\\\\u2019d classes for the\\\\nentity key or aspect.\\\\n\\\\nParameters\\\\nUnion[MetadataChangeProposalWrapper, MetadataChangeProposalClass]\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod tryfrommcpc(mcpc)\\\\nAttempts to create a MetadataChangeProposalWrapper from a MetadataChangeProposalClass.\\\\nNeatly handles unsupported, expected cases, such as unknown aspect types or non-json content type.\\\\n\\\\nRaises\\\\nmcpc (MetadataChangeProposalClass)\\\\n\\\\nReturn type\\\\nmcl (MetadataChangeLogClass)\\\\n\\\\nReturn type\\\\n\\\\nobj (dict)\\\\ntuples (bool)\\\\n\\\\n\\\\nReturn type\\\\n\\\\ntreaterrorsaswarnings (bool)\\\\nisprimarysource (bool)\\\\n\\\\n\\\\nReturn type\\\\nvalue (bool)\\\\n\\\\nReturn type Enum\\\\nAn enumeration.\\\\n\\\\n\\\\nUSER = \'corpuser\'\\\\n\\\\n\\\\n\\\\nGROUP = \'corpGroup\'\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcebuilder.getsystime()\\\\n\\\\nReturn type\\\\nts (Optional[datetime])\\\\n\\\\nReturn type\\\\nts (Optional[float])\\\\n\\\\nReturn type\\\\nplatform (str)\\\\n\\\\nReturn type\\\\n\\\\nplatform (str)\\\\nname (str)\\\\nenv (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nplatform (str)\\\\ninstance (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nplatform (str)\\\\nname (str)\\\\nplatforminstance (Optional[str])\\\\nenv (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nparenturn (str)\\\\nfieldpath (str)\\\\n\\\\n\\\\nReturn type\\\\nschemafieldurn (str)\\\\n\\\\nReturn type\\\\ndataseturn (str)\\\\n\\\\nReturn type\\\\nkey (DatasetKeyClass)\\\\n\\\\nReturn type\\\\nguid (Union[str, DatahubKey])\\\\n\\\\nReturn type\\\\nguid (str)\\\\n\\\\nReturn type\\\\nobj (dict)\\\\n\\\\nReturn type\\\\nassertionid (str)\\\\n\\\\nReturn type\\\\nassertionurn (str)\\\\n\\\\nReturn type\\\\nusername (str)\\\\n\\\\nReturn type\\\\ngroupname (str)\\\\n\\\\nReturn type\\\\ntag (str)\\\\n\\\\nReturn type\\\\n\\\\nowner (str)\\\\nownertype (OwnerType)\\\\n\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nterm (str)\\\\n\\\\nReturn type\\\\n\\\\norchestrator (str)\\\\nflowid (str)\\\\ncluster (str)\\\\nplatforminstance (Optional[str])\\\\n\\\\n\\\\nReturn type\\\\n\\\\nflowurn (str)\\\\njobid (str)\\\\n\\\\n\\\\nReturn type\\\\ndataProcessInstanceId (str)\\\\n\\\\nReturn type\\\\n\\\\norchestrator (str)\\\\nflowid (str)\\\\njobid (str)\\\\ncluster (str)\\\\nplatforminstance (Optional[str])\\\\n\\\\n\\\\nReturn type\\\\n\\\\nplatform (str)\\\\nname (str)\\\\nplatforminstance (Optional[str])\\\\n\\\\n\\\\nReturn type\\\\ndashboardurn (str)\\\\n\\\\nReturn type\\\\n\\\\nplatform (str)\\\\nname (str)\\\\nplatforminstance (Optional[str])\\\\n\\\\n\\\\nReturn type\\\\ncharturn (str)\\\\n\\\\nReturn type\\\\ndomain (str)\\\\n\\\\nReturn type\\\\n\\\\nfeaturetablename (str)\\\\nprimarykeyname (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nfeaturetablename (str)\\\\nfeaturename (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nplatform (str)\\\\nfeaturetablename (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nplatform (str)\\\\nmodelname (str)\\\\nenv (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nplatform (str)\\\\ndeploymentname (str)\\\\nenv (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nplatform (str)\\\\ngroupname (str)\\\\nenv (str)\\\\n\\\\n\\\\nReturn type\\\\nownershiptype (str)\\\\n\\\\nReturn type this function only supports lineage for dataset aspects. It will not\\\\nupdate lineage for any other aspect types.\\\\n\\\\nParameters\\\\nMetadataChangeEventClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcebuilder.canaddaspecttosnapshot(SnapshotType, AspectType)\\\\n\\\\nParameters\\\\nbool\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcebuilder.canaddaspect(mce, AspectType)\\\\n\\\\nParameters\\\\nbool\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcebuilder.assertcanaddaspect(mce, AspectType)\\\\n\\\\nParameters\\\\nNone\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcebuilder.getaspectifavailable(mce, AspectType)\\\\n\\\\nParameters\\\\nOptional[TypeVar(Aspect, bound= Aspect)]\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcebuilder.removeaspectifavailable(mce, aspecttype)\\\\n\\\\nParameters\\\\nbool\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcebuilder.getoraddaspect(mce, default)\\\\n\\\\nParameters\\\\nTypeVar(Aspect, bound= Aspect)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcebuilder.makeglobaltagaspectwithtaglist(tags)\\\\n\\\\nParameters\\\\nGlobalTagsClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcebuilder.makeownershipaspectfromurnlist(ownerurns, sourcetype, ownertype=\'DATAOWNER\')\\\\n\\\\nParameters\\\\nOwnershipClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcebuilder.makeglossarytermsaspectfromurnlist(termurns)\\\\n\\\\nParameters\\\\nGlossaryTermsClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcebuilder.setaspect(mce, aspect, aspecttype)\\\\nSets the aspect to the provided aspect, overwriting any previous aspect value that might have existed before.\\\\nIf passed in aspect is None, then the existing aspect value will be removed\\\\n\\\\nParameters\\\\nNone\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcpbuilder.DatahubKey(data)\\\\nBases\\\\ndata (Any)\\\\n\\\\n\\\\n\\\\n\\\\nguid_dict()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nmodel_config DatahubKey\\\\nBase class for container guid keys. Most users should use one of the subclasses instead.\\\\n\\\\nParameters str\\\\n\\\\n\\\\n\\\\ninstance Optional[str]\\\\n\\\\n\\\\n\\\\nbackcompatenvasinstance\\\\nDict[str, str]\\\\n\\\\n\\\\n\\\\n\\\\n\\\\npropertydict()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nparentkey()\\\\n\\\\nReturn type ClassVar[ConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.emitter.mcpbuilder.PlatformKey\\\\nalias of ContainerKey\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcpbuilder.DatabaseKey(**data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nplatform (str)\\\\ninstance (str | None)\\\\nenv (str | None)\\\\nbackcompatenvasinstance (bool)\\\\ndatabase (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatabase ClassVarConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcpbuilder.SchemaKey(data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nplatform (str)\\\\ninstance (str | None)\\\\nenv (str | None)\\\\nbackcompat_env_as_instance (bool)\\\\ndatabase (str)\\\\nschema (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndb_schema ClassVarConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcp_builder.ProjectIdKey(data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nplatform (str)\\\\ninstance (str | None)\\\\nenv (str | None)\\\\nbackcompatenvasinstance (bool)\\\\nprojectid (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nprojectid ClassVarConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcpbuilder.MetastoreKey(**data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nplatform (str)\\\\ninstance (str | None)\\\\nenv (str | None)\\\\nbackcompatenvasinstance (bool)\\\\nmetastore (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nmetastore ClassVarConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcpbuilder.CatalogKeyWithMetastore(data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nplatform (str)\\\\ninstance (str | None)\\\\nenv (str | None)\\\\nbackcompat_env_as_instance (bool)\\\\nmetastore (str)\\\\ncatalog (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ncatalog ClassVarConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcp_builder.UnitySchemaKeyWithMetastore(data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nplatform (str)\\\\ninstance (str | None)\\\\nenv (str | None)\\\\nbackcompatenvasinstance (bool)\\\\nmetastore (str)\\\\ncatalog (str)\\\\nunityschema (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nunityschema ClassVarConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcpbuilder.CatalogKey(**data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nplatform (str)\\\\ninstance (str | None)\\\\nenv (str | None)\\\\nbackcompatenvasinstance (bool)\\\\ncatalog (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ncatalog ClassVarConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcpbuilder.UnitySchemaKey(data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nplatform (str)\\\\ninstance (str | None)\\\\nenv (str | None)\\\\nbackcompat_env_as_instance (bool)\\\\ncatalog (str)\\\\nunity_schema (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nunity_schema ClassVarConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcp_builder.BigQueryDatasetKey(data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nplatform (str)\\\\ninstance (str | None)\\\\nenv (str | None)\\\\nbackcompatenvasinstance (bool)\\\\nprojectid (str)\\\\ndatasetid (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndatasetid ClassVarConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcpbuilder.FolderKey(data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nplatform (str)\\\\ninstance (str | None)\\\\nenv (str | None)\\\\nbackcompat_env_as_instance (bool)\\\\nfolder_abs_path (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nfolder_abs_path ClassVarConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcp_builder.BucketKey(data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nplatform (str)\\\\ninstance (str | None)\\\\nenv (str | None)\\\\nbackcompatenvasinstance (bool)\\\\nbucketname (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nbucketname ClassVarConfigDict] = {}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.mcpbuilder.NotebookKey(**data)\\\\nBases\\\\n\\\\ndata (Any)\\\\nnotebookid (int)\\\\nplatform (str)\\\\ninstance (str | None)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nnotebookid str\\\\n\\\\n\\\\n\\\\ninstance\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nmodelconfig\\\\n\\\\nentityurn (str)\\\\ndomainurn (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nentitytype (str)\\\\nentityurn (str)\\\\nownerurn (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nentitytype (str)\\\\nentityurn (str)\\\\ntags (List[str])\\\\n\\\\n\\\\nReturn type\\\\n\\\\nentityurn (str)\\\\nstructuredproperties (Dict[StructuredPropertyUrn, str])\\\\n\\\\n\\\\nReturn type\\\\n\\\\ncontainerkey (TypeVar(KeyType, bound= ContainerKey))\\\\nname (str)\\\\nsubtypes (List[str])\\\\nparentcontainerkey (Optional[ContainerKey])\\\\nextraproperties (Optional[Dict[str, str]])\\\\nstructuredproperties (Optional[Dict[StructuredPropertyUrn, str]])\\\\ndomainurn (Optional[str])\\\\ndescription (Optional[str])\\\\nownerurn (Optional[str])\\\\nexternalurl (Optional[str])\\\\ntags (Optional[List[str]])\\\\nqualifiedname (Optional[str])\\\\ncreated (Optional[int])\\\\nlastmodified (Optional[int])\\\\n\\\\n\\\\nReturn type\\\\n\\\\ncontainerkey (TypeVar(KeyType, bound= ContainerKey))\\\\ndataseturn (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\ncontainerkey (TypeVar(KeyType, bound= ContainerKey))\\\\nentitytype (str)\\\\nentityurn (str)\\\\n\\\\n\\\\nReturn type\\\\nmce (MetadataChangeEventClass)\\\\n\\\\nReturn type\\\\n\\\\nurn (str)\\\\nembedurl (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nentitytype (str)\\\\naspecttype (Type[TypeVar(Aspect, bound= Aspect)])\\\\n\\\\n\\\\nReturn type:\\\\nbool\\\\n\\\\n\\\\n\\\\n\\\\n\\"}}>","sidebar":"overviewSidebar"},"python-sdk/clients":{"id":"python-sdk/clients","title":"Client","description":"\\\\n\\\\n\\\\nThe Kafka emitter or Rest emitter can be used to push metadata to DataHub.\\\\nThe DataHub graph client extends the Rest emitter with additional functionality.\\\\n\\\\n\\\\nclass datahub.emitter.restemitter.RequestsSessionConfig(**data)\\\\nBases\\\\n\\\\ndata (Any)\\\\ntimeout (float | Tuplefloat, float] | None)\\\\nretrystatuscodes (List[int])\\\\nretrymethods (List[str])\\\\nretrymaxtimes (int)\\\\nextraheaders (Dict[str, str])\\\\ncacertificatepath (str | None)\\\\nclientcertificatepath (str | None)\\\\ndisablesslverification (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntimeout List[int]\\\\n\\\\n\\\\n\\\\nretrymethods int\\\\n\\\\n\\\\n\\\\nextraheaders Optional[str]\\\\n\\\\n\\\\n\\\\nclientcertificatepath bool\\\\n\\\\n\\\\n\\\\nbuildsession()\\\\n\\\\nReturn type ClassVar[ConfigDict] = {\'schemaextra\' \'forbid\', \'ignoredtypes\' &lt;function ConfigModel.Config.schemaextra&gt;}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.restemitter.DataHubRestEmitter(gmsserver, token=None, timeoutsec=None, connecttimeoutsec=None, readtimeoutsec=None, retrystatuscodes=None, retrymethods=None, retrymaxtimes=None, extraheaders=None, cacertificatepath=None, clientcertificatepath=None, disablesslverification=False)\\\\nBases\\\\n\\\\ngmsserver (str)\\\\ntoken (Optionalstr])\\\\ntimeoutsec (Optional[float])\\\\nconnecttimeoutsec (Optional[float])\\\\nreadtimeoutsec (Optional[float])\\\\nretrystatuscodes (Optional[List[int]])\\\\nretrymethods (Optional[List[str]])\\\\nretrymaxtimes (Optional[int])\\\\nextraheaders (Optional[Dict[str, str]])\\\\ncacertificatepath (Optional[str])\\\\nclientcertificatepath (Optional[str])\\\\ndisablesslverification (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntestconnection()\\\\n\\\\nReturn type\\\\ndict\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntograph()\\\\n\\\\nReturn type\\\\n\\\\nitem (Union[MetadataChangeEventClass, MetadataChangeProposalClass, MetadataChangeProposalWrapper, UsageAggregationClass])\\\\ncallback (Optional[Callable[[Exception, str], None]])\\\\nasyncflag (Optional[bool])\\\\n\\\\n\\\\nReturn type\\\\nmce (MetadataChangeEventClass)\\\\n\\\\nReturn type\\\\n\\\\nmcp (Union[MetadataChangeProposalClass, MetadataChangeProposalWrapper])\\\\nasyncflag (Optional[bool])\\\\n\\\\n\\\\nReturn type\\\\n\\\\nmcps (Sequence[Union[MetadataChangeProposalClass, MetadataChangeProposalWrapper]])\\\\nasyncflag (Optional[bool])\\\\n\\\\n\\\\nReturn type\\\\nusageStats (UsageAggregationClass)\\\\n\\\\nReturn type\\\\nNone\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclose()\\\\n\\\\nReturn type ConfigModel\\\\n\\\\nParameters KafkaProducerConnectionConfig\\\\n\\\\n\\\\n\\\\ntopicroutes\\\\nv (Dict[str, str])\\\\n\\\\nReturn type ClassVar[ConfigDict] = {\'schemaextra\' \'forbid\', \'ignoredtypes\' &lt;function ConfigModel.Config.schemaextra&gt;}\\\\nConfiguration for the model, should be a dictionary conforming to [ConfigDict.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.emitter.kafkaemitter.DatahubKafkaEmitter(config)\\\\nBases\\\\nconfig (KafkaEmitterConfig)\\\\n\\\\n\\\\n\\\\n\\\\nemit(item, callback=None)\\\\n\\\\nParameters\\\\nNone\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nemitmceasync(mce, callback)\\\\n\\\\nParameters\\\\nNone\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nemitmcpasync(mcp, callback)\\\\n\\\\nParameters\\\\nNone\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nflush()\\\\n\\\\nReturn type\\\\nNone\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.ingestion.graph.client.RelatedEntity(urn, relationshiptype, via=None)\\\\nBases\\\\n\\\\nurn (str)\\\\nrelationshiptype (str)\\\\nvia (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn str\\\\n\\\\n\\\\n\\\\nvia DataHubRestEmitter, EntityVersioningAPI\\\\n\\\\nParameters\\\\nNone\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty frontendbaseurl Only supported with DataHub Cloud.\\\\n\\\\n\\\\n\\\\nclassmethod fromemitter(emitter)\\\\n\\\\nParameters\\\\nDataHubGraph\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nmakerestsink(runid=\'datahub-graph-client\', extra_sink_config=None)\\\\n\\\\nParameters\\\\nIterator[DatahubRestSink]\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nemit_all(items, run_id=\'datahub-graph-client\')\\\\nEmit all items in the iterable using multiple threads.\\\\n\\\\nParameters\\\\nNone\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetaspect(entityurn, aspecttype, version=0)\\\\nGet an aspect for an entity.\\\\n\\\\nParameters\\\\nOptional[TypeVar(Aspect, bound= Aspect)]\\\\n\\\\nReturns\\\\n\\\\nTypeError \\\\u2013 if the aspect type is a timeseries aspect\\\\nHttpError \\\\u2013 if the HTTP response is not a 200 or a 404\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetaspectv2(entityurn, aspecttype, aspect, aspecttypename=None, version=0)\\\\n\\\\nParameters\\\\nOptional[TypeVar(Aspect, bound= Aspect)]\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetconfig()\\\\n\\\\nReturn type\\\\nentityurn (str)\\\\n\\\\nReturn type\\\\nentityurn (str)\\\\n\\\\nReturn type\\\\nentityurn (str)\\\\n\\\\nReturn type\\\\nentityurn (str)\\\\n\\\\nReturn type\\\\nentityurn (str)\\\\n\\\\nReturn type\\\\nentityurn (str)\\\\n\\\\nReturn type\\\\nentityurn (str)\\\\n\\\\nReturn type\\\\nentityurn (str)\\\\n\\\\nReturn type\\\\n\\\\nentityurn (str)\\\\nstarttimestamp (int)\\\\nendtimestamp (int)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nentitytype (str)\\\\nstart (int)\\\\ncount (int)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nentityurn (str)\\\\naspecttype (Type[TypeVar(Aspect, bound= Aspect)])\\\\nfiltercriteriamap (Dict[str, str])\\\\n\\\\n\\\\nReturn type\\\\n\\\\nentityurn (str)\\\\naspecttype (Type[TypeVar(Aspect, bound= Aspect)])\\\\nfilter (Dict[str, Any])\\\\nlimit (int)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nentityurn (str)\\\\naspects (Optional[List[str]])\\\\n\\\\n\\\\nReturn type Do not use this method to determine if an entity exists!\\\\nThis method will always return an entity, even if it doesn\\\\u2019t exist. This is an issue with how DataHub server\\\\nresponds to these calls, and will be fixed automatically when the server-side issue is fixed.\\\\n\\\\nParameters\\\\nDict[str, Optional[TypeVar(Aspect, bound= Aspect)]]\\\\n\\\\nReturns\\\\nHttpError \\\\u2013 if the HTTP response is not a 200\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetentityasmcps(entityurn, aspects=None)\\\\nGet all non-timeseries aspects for an entity.\\\\nBy formatting the entity\\\\u2019s aspects as MCPWs, we can also include SystemMetadata.\\\\nWarning\\\\n\\\\nentityurn (str) \\\\u2013 The urn of the entity\\\\naspects (Optional[List[str]]) \\\\u2013 Optional list of aspect names being requested (e.g. [\\\\u201cschemaMetadata\\\\u201d, \\\\u201cdatasetProperties\\\\u201d])\\\\n\\\\n\\\\nReturn type\\\\nA list of MCPWs.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetentitysemityped(entityurn, aspects=None)\\\\nGet (all) non-timeseries aspects for an entity.\\\\nThis method is called \\\\u201csemityped\\\\u201d because it returns aspects as a dictionary of\\\\nproperly typed objects. While the returned dictionary is constrained using a TypedDict,\\\\nthe return type is still fairly loose.\\\\nWarning\\\\n\\\\nentityurn (str) \\\\u2013 The urn of the entity\\\\naspects (Optional[List[str]]) \\\\u2013 Optional list of aspect names being requested (e.g. [\\\\u201cschemaMetadata\\\\u201d, \\\\u201cdatasetProperties\\\\u201d])\\\\n\\\\n\\\\nReturn type\\\\nA dictionary of aspect name to aspect value. If an aspect is not found, it will\\\\nnot be present in the dictionary. The entity\\\\u2019s key aspect will always be present.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetdomainurnbyname(domainname)\\\\nRetrieve a domain urn based on its name. Returns None if there is no match found\\\\n\\\\nParameters\\\\nOptional[str]\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetconnectionjson(urn)\\\\nRetrieve a connection config.\\\\nThis is only supported with DataHub Cloud.\\\\n\\\\nParameters\\\\nOptional[dict]\\\\n\\\\nReturns\\\\n\\\\nurn (str) \\\\u2013 The urn of the connection.\\\\nplatformurn (str) \\\\u2013 The urn of the platform.\\\\nconfig (Union[ConfigModel, BaseModel, dict]) \\\\u2013 The connection config as a dictionary or a ConfigModel.\\\\nname (Optional[str]) \\\\u2013 The name of the connection.\\\\n\\\\n\\\\nReturn type\\\\n\\\\nenv (Optional[str])\\\\nsearch_query (str)\\\\n\\\\n\\\\nReturn type\\\\n\\\\nentitytypes (Optional[List[str]]) \\\\u2013 List of entity types to include. If None, all entity types will be returned.\\\\nplatform (Optional[str]) \\\\u2013 Platform to filter on. If None, all platforms will be returned.\\\\nplatforminstance (Optional[str]) \\\\u2013 Platform instance to filter on. If None, all platform instances will be returned.\\\\nenv (Optional[str]) \\\\u2013 Environment (e.g. PROD, DEV) to filter on. If None, all environments will be returned.\\\\nquery (Optional[str]) \\\\u2013 Query string to filter on. If None, all entities will be returned.\\\\ncontainer (Optional[str]) \\\\u2013 A container urn that entities must be within.\\\\nThis works recursively, so it will include entities within sub-containers as well.\\\\nIf None, all entities will be returned.\\\\nNote that this requires browsePathV2 aspects (added in 0.10.4+).\\\\nstatus (RemovedStatusFilter) \\\\u2013 Filter on the deletion status of the entity. The default is only return non-soft-deleted entities.\\\\nextraFilters (Optional[List[Dict[str, Any]]]) \\\\u2013 Additional filters to apply. If specified, the results will match all of the filters.\\\\nbatchsize (int)\\\\nextraorfilters (Optional[List[Dict[str, List[Dict[str, Any]]]]])\\\\n\\\\n\\\\nReturn type\\\\nAn iterable of urns that match the filters.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetresultsbyfilter(*, entitytypes=None, platform=None, platforminstance=None, env=None, query=None, container=None, status=RemovedStatusFilter.NOTSOFTDELETED, batchsize=10000, extraandfilters=None, extraorfilters=None, extrasourcefields=None, skipcache=False)\\\\nFetch all results that match all of the given filters.\\\\nNote\\\\n\\\\nentitytypes (Optional[List[str]]) \\\\u2013 List of entity types to include. If None, all entity types will be returned.\\\\nplatform (Optional[str]) \\\\u2013 Platform to filter on. If None, all platforms will be returned.\\\\nplatforminstance (Optional[str]) \\\\u2013 Platform instance to filter on. If None, all platform instances will be returned.\\\\nenv (Optional[str]) \\\\u2013 Environment (e.g. PROD, DEV) to filter on. If None, all environments will be returned.\\\\nquery (Optional[str]) \\\\u2013 Query string to filter on. If None, all entities will be returned.\\\\ncontainer (Optional[str]) \\\\u2013 A container urn that entities must be within.\\\\nThis works recursively, so it will include entities within sub-containers as well.\\\\nIf None, all entities will be returned.\\\\nNote that this requires browsePathV2 aspects (added in 0.10.4+).\\\\nstatus (RemovedStatusFilter) \\\\u2013 Filter on the deletion status of the entity. The default is only return non-soft-deleted entities.\\\\nextraandfilters (Optional[List[Dict[str, Any]]]) \\\\u2013 Additional filters to apply. If specified, the\\\\nresults will match all of the filters.\\\\nextraorfilters (Optional[List[Dict[str, List[Dict[str, Any]]]]]) \\\\u2013 Additional filters to apply. If specified, the\\\\nresults will match any of the filters.\\\\nbatchsize (int)\\\\nextrasourcefields (Optional[List[str]])\\\\nskipcache (bool)\\\\n\\\\n\\\\nReturn type\\\\nAn iterable of urns that match the filters.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetlatestpipelinecheckpoint(pipelinename, platform)\\\\n\\\\nParameters\\\\nOptional[Checkpoint[GenericCheckpointState]]\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetsearchresults(start=0, count=1, entity=\'dataset\')\\\\n\\\\nParameters\\\\nDict\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetaspectcounts(aspect, urnlike=None)\\\\n\\\\nParameters\\\\nint\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nexecutegraphql(query, variables=None, operationname=None, formatexception=True)\\\\n\\\\nParameters\\\\nDict\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass RelationshipDirection(value)\\\\nBases\\\\n\\\\nentityurn (str)\\\\nrelationshiptypes (List[str])\\\\ndirection (RelationshipDirection)\\\\n\\\\n\\\\nReturn type\\\\nentityurn (str)\\\\n\\\\nReturn type\\\\n\\\\nurn (str) \\\\u2013 The urn of the entity to soft-delete.\\\\nrun_id (str)\\\\ndeletion_timestamp (Optional[int])\\\\n\\\\n\\\\nReturn type\\\\n\\\\nurn (str) \\\\u2013 The urn of the entity to soft-delete.\\\\ndelete (bool)\\\\nrunid (str)\\\\ndeletiontimestamp (Optional[int])\\\\n\\\\n\\\\nReturn type\\\\nurn (str) \\\\u2013 The urn of the entity to hard delete.\\\\n\\\\nReturn type\\\\nA tuple of (rowsaffected, timeseriesrowsaffected).\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ndeleteentity(urn, hard=False)\\\\nDelete an entity by urn.\\\\n\\\\nParameters\\\\nNone\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nharddeletetimeseriesaspect(urn, aspectname, starttime, endtime)\\\\nHard delete timeseries aspects of an entity.\\\\n\\\\nParameters\\\\nint\\\\n\\\\nReturns\\\\n\\\\nurn (str) \\\\u2013 The urn of the entity to delete references to.\\\\ndryrun (bool) \\\\u2013 If True, do not actually delete the references, just return the count of\\\\nreferences and the list of related aspects.\\\\n\\\\n\\\\nReturn type\\\\nA tuple of (referencecount, sample of relatedaspects).\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ninitializeschemaresolverfromdatahub(platform, platforminstance, env, batchsize=100)\\\\n\\\\nParameters\\\\nSchemaResolver\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nparsesqllineage(sql, *, platform, platforminstance=None, env=\'PROD\', defaultdb=None, defaultschema=None, defaultdialect=None)\\\\n\\\\nParameters\\\\nSqlParsingResult\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ncreatetag(tagname)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nremovetag(tagurn, resourceurn)\\\\n\\\\nParameters\\\\nbool\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nrunassertion(urn, saveresult=True, parameters={}, asyncflag=False)\\\\n\\\\nParameters\\\\nDict\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nrunassertions(urns, saveresult=True, parameters={}, asyncflag=False)\\\\n\\\\nParameters\\\\nDict\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nrunassertionsforasset(urn, tagurns=[], parameters={}, asyncflag=False)\\\\n\\\\nParameters\\\\nDict\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetentitiesv2(entityname, urns, aspects=[], withsystemmetadata=False)\\\\n\\\\nParameters\\\\nDict[str, Any]\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nupsertcustomassertion(urn, entityurn, type, description, platformname=None, platformurn=None, fieldpath=None, externalurl=None, logic=None)\\\\n\\\\nParameters\\\\nDict\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nreportassertionresult(urn, timestampmillis, type, properties=None, externalurl=None, errortype=None, errormessage=None)\\\\n\\\\nParameters\\\\nbool\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclose()\\\\n\\\\nReturn type\\\\nDataHubGraph\\\\n\\\\n\\\\n\\\\n\\\\n\\"}}>","sidebar":"overviewSidebar"},"python-sdk/models":{"id":"python-sdk/models","title":"Models","description":"\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AccessClass(roles=None)\\\\nBases\\\\nroles (Optional[List[RoleAssociationClass]])\\\\n\\\\n\\\\n\\\\n\\\\nproperty roles object\\\\nThe various access levels\\\\n\\\\n\\\\nPRIVATE = \'PRIVATE\'\\\\n\\\\n\\\\n\\\\nPUBLIC = \'PUBLIC\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ActorsClass(users=None)\\\\nBases\\\\nusers (Optional[List[RoleUserClass]])\\\\n\\\\n\\\\n\\\\n\\\\nproperty users DictWrapper\\\\nArray field type.\\\\n\\\\nParameters None | List[str]\\\\nList of types this array holds.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AspectBag\\\\nBases AccessClass\\\\n\\\\n\\\\n\\\\nactors AssertionActionsClass\\\\n\\\\n\\\\n\\\\nassertionInfo AssertionKeyClass\\\\n\\\\n\\\\n\\\\nassertionRunEvent BrowsePathsClass\\\\n\\\\n\\\\n\\\\nbrowsePathsV2 BusinessAttributeInfoClass\\\\n\\\\n\\\\n\\\\nbusinessAttributeKey BusinessAttributesClass\\\\n\\\\n\\\\n\\\\nchartInfo ChartKeyClass\\\\n\\\\n\\\\n\\\\nchartQuery ChartUsageStatisticsClass\\\\n\\\\n\\\\n\\\\ncontainer ContainerKeyClass\\\\n\\\\n\\\\n\\\\ncontainerProperties CorpGroupEditableInfoClass\\\\n\\\\n\\\\n\\\\ncorpGroupInfo CorpGroupKeyClass\\\\n\\\\n\\\\n\\\\ncorpUserCredentials CorpUserEditableInfoClass\\\\n\\\\n\\\\n\\\\ncorpUserInfo CorpUserKeyClass\\\\n\\\\n\\\\n\\\\ncorpUserSettings CorpUserStatusClass\\\\n\\\\n\\\\n\\\\ncost DashboardInfoClass\\\\n\\\\n\\\\n\\\\ndashboardKey DashboardUsageStatisticsClass\\\\n\\\\n\\\\n\\\\ndataContractKey DataContractPropertiesClass\\\\n\\\\n\\\\n\\\\ndataContractStatus DataFlowInfoClass\\\\n\\\\n\\\\n\\\\ndataFlowKey DataHubAccessTokenInfoClass\\\\n\\\\n\\\\n\\\\ndataHubAccessTokenKey DataHubActionKeyClass\\\\n\\\\n\\\\n\\\\ndataHubConnectionDetails DataHubConnectionKeyClass\\\\n\\\\n\\\\n\\\\ndataHubExecutionRequestInput ExecutionRequestKeyClass\\\\n\\\\n\\\\n\\\\ndataHubExecutionRequestResult ExecutionRequestSignalClass\\\\n\\\\n\\\\n\\\\ndataHubIngestionSourceInfo DataHubIngestionSourceKeyClass\\\\n\\\\n\\\\n\\\\ndataHubPersonaInfo DataHubPersonaKeyClass\\\\n\\\\n\\\\n\\\\ndataHubPolicyInfo DataHubPolicyKeyClass\\\\n\\\\n\\\\n\\\\ndataHubRetentionConfig DataHubRetentionKeyClass\\\\n\\\\n\\\\n\\\\ndataHubRoleInfo DataHubRoleKeyClass\\\\n\\\\n\\\\n\\\\ndataHubSecretKey DataHubSecretValueClass\\\\n\\\\n\\\\n\\\\ndataHubStepStateKey DataHubStepStatePropertiesClass\\\\n\\\\n\\\\n\\\\ndataHubUpgradeKey DataHubUpgradeRequestClass\\\\n\\\\n\\\\n\\\\ndataHubUpgradeResult DataHubViewInfoClass\\\\n\\\\n\\\\n\\\\ndataHubViewKey DataJobInfoClass\\\\n\\\\n\\\\n\\\\ndataJobInputOutput DataJobKeyClass\\\\n\\\\n\\\\n\\\\ndataPlatformInfo DataPlatformInstanceClass\\\\n\\\\n\\\\n\\\\ndataPlatformInstanceKey DataPlatformInstancePropertiesClass\\\\n\\\\n\\\\n\\\\ndataPlatformKey DataProcessInfoClass\\\\n\\\\n\\\\n\\\\ndataProcessInstanceInput DataProcessInstanceKeyClass\\\\n\\\\n\\\\n\\\\ndataProcessInstanceOutput DataProcessInstancePropertiesClass\\\\n\\\\n\\\\n\\\\ndataProcessInstanceRelationships DataProcessInstanceRunEventClass\\\\n\\\\n\\\\n\\\\ndataProcessKey DataProductKeyClass\\\\n\\\\n\\\\n\\\\ndataProductProperties DataTransformLogicClass\\\\n\\\\n\\\\n\\\\ndataTypeInfo DataTypeKeyClass\\\\n\\\\n\\\\n\\\\ndatahubIngestionCheckpoint DatahubIngestionRunSummaryClass\\\\n\\\\n\\\\n\\\\ndatasetDeprecation DatasetKeyClass\\\\n\\\\n\\\\n\\\\ndatasetProfile DatasetPropertiesClass\\\\n\\\\n\\\\n\\\\ndatasetUpstreamLineage DatasetUsageStatisticsClass\\\\n\\\\n\\\\n\\\\ndeprecation DisplayPropertiesClass\\\\n\\\\n\\\\n\\\\ndocumentation DomainKeyClass\\\\n\\\\n\\\\n\\\\ndomainProperties DomainsClass\\\\n\\\\n\\\\n\\\\ndynamicFormAssignment EditableChartPropertiesClass\\\\n\\\\n\\\\n\\\\neditableContainerProperties EditableDashboardPropertiesClass\\\\n\\\\n\\\\n\\\\neditableDataFlowProperties EditableDataJobPropertiesClass\\\\n\\\\n\\\\n\\\\neditableDatasetProperties EditableERModelRelationshipPropertiesClass\\\\n\\\\n\\\\n\\\\neditableMlFeatureProperties EditableMLFeatureTablePropertiesClass\\\\n\\\\n\\\\n\\\\neditableMlModelGroupProperties EditableMLModelPropertiesClass\\\\n\\\\n\\\\n\\\\neditableMlPrimaryKeyProperties EditableNotebookPropertiesClass\\\\n\\\\n\\\\n\\\\neditableSchemaMetadata EmbedClass\\\\n\\\\n\\\\n\\\\nentityTypeInfo EntityTypeKeyClass\\\\n\\\\n\\\\n\\\\nerModelRelationshipKey ERModelRelationshipPropertiesClass\\\\n\\\\n\\\\n\\\\nformInfo FormKeyClass\\\\n\\\\n\\\\n\\\\nforms GlobalSettingsInfoClass\\\\n\\\\n\\\\n\\\\nglobalSettingsKey GlobalTagsClass\\\\n\\\\n\\\\n\\\\nglossaryNodeInfo GlossaryNodeKeyClass\\\\n\\\\n\\\\n\\\\nglossaryRelatedTerms GlossaryTermInfoClass\\\\n\\\\n\\\\n\\\\nglossaryTermKey GlossaryTermsClass\\\\n\\\\n\\\\n\\\\ngroupMembership IcebergCatalogInfoClass\\\\n\\\\n\\\\n\\\\nicebergWarehouseInfo IncidentInfoClass\\\\n\\\\n\\\\n\\\\nincidentKey IncidentSourceClass\\\\n\\\\n\\\\n\\\\nincidentsSummary InputFieldsClass\\\\n\\\\n\\\\n\\\\ninstitutionalMemory IntendedUseClass\\\\n\\\\n\\\\n\\\\ninviteToken InviteTokenKeyClass\\\\n\\\\n\\\\n\\\\nmlFeatureKey MLFeaturePropertiesClass\\\\n\\\\n\\\\n\\\\nmlFeatureTableKey MLFeatureTablePropertiesClass\\\\n\\\\n\\\\n\\\\nmlHyperParam MLMetricClass\\\\n\\\\n\\\\n\\\\nmlModelCaveatsAndRecommendations MLModelDeploymentKeyClass\\\\n\\\\n\\\\n\\\\nmlModelDeploymentProperties EthicalConsiderationsClass\\\\n\\\\n\\\\n\\\\nmlModelEvaluationData MLModelFactorPromptsClass\\\\n\\\\n\\\\n\\\\nmlModelGroupKey MLModelGroupPropertiesClass\\\\n\\\\n\\\\n\\\\nmlModelKey MetricsClass\\\\n\\\\n\\\\n\\\\nmlModelProperties QuantitativeAnalysesClass\\\\n\\\\n\\\\n\\\\nmlModelTrainingData MLPrimaryKeyKeyClass\\\\n\\\\n\\\\n\\\\nmlPrimaryKeyProperties MLTrainingRunPropertiesClass\\\\n\\\\n\\\\n\\\\nnativeGroupMembership NotebookContentClass\\\\n\\\\n\\\\n\\\\nnotebookInfo NotebookKeyClass\\\\n\\\\n\\\\n\\\\noperation OriginClass\\\\n\\\\n\\\\n\\\\nownership OwnershipTypeInfoClass\\\\n\\\\n\\\\n\\\\nownershipTypeKey PartitionsSummaryClass\\\\n\\\\n\\\\n\\\\nplatformResourceInfo PlatformResourceKeyClass\\\\n\\\\n\\\\n\\\\npostInfo PostKeyClass\\\\n\\\\n\\\\n\\\\npropertyDefinition QueryKeyClass\\\\n\\\\n\\\\n\\\\nqueryProperties QuerySubjectsClass\\\\n\\\\n\\\\n\\\\nqueryUsageStatistics RoleKeyClass\\\\n\\\\n\\\\n\\\\nroleMembership RolePropertiesClass\\\\n\\\\n\\\\n\\\\nschemaFieldAliases SchemaFieldKeyClass\\\\n\\\\n\\\\n\\\\nschemaMetadata SchemaFieldInfoClass\\\\n\\\\n\\\\n\\\\nsiblings SourceCodeClass\\\\n\\\\n\\\\n\\\\nstatus StructuredPropertiesClass\\\\n\\\\n\\\\n\\\\nstructuredPropertyKey StructuredPropertySettingsClass\\\\n\\\\n\\\\n\\\\nsubTypes TagKeyClass\\\\n\\\\n\\\\n\\\\ntagProperties TelemetryClientIdClass\\\\n\\\\n\\\\n\\\\ntelemetryKey TestInfoClass\\\\n\\\\n\\\\n\\\\ntestKey TestResultsClass\\\\n\\\\n\\\\n\\\\nupstreamLineage VersionInfoClass\\\\n\\\\n\\\\n\\\\nversionProperties VersionSetKeyClass\\\\n\\\\n\\\\n\\\\nversionSetProperties ViewPropertiesClass\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionActionClass(type)\\\\nBases\\\\ntype (Union[str, AssertionActionTypeClass])\\\\n\\\\n\\\\n\\\\n\\\\nproperty type object\\\\n\\\\n\\\\nRAISEINCIDENT = \'RAISEINCIDENT\'\\\\n\\\\n\\\\n\\\\nRESOLVEINCIDENT = \'RESOLVEINCIDENT\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionActionsClass(onSuccess=None, onFailure=None)\\\\nBases\\\\n\\\\nonSuccess (Optional[List[AssertionActionClass]])\\\\nonFailure (Optional[List[AssertionActionClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty onFailure List[AssertionActionClass]\\\\nActions to be executed on successful assertion run.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionInfoClass(type, customProperties=None, externalUrl=None, datasetAssertion=None, freshnessAssertion=None, volumeAssertion=None, sqlAssertion=None, fieldAssertion=None, schemaAssertion=None, customAssertion=None, source=None, lastUpdated=None, description=None)\\\\nBases\\\\n\\\\ntype (Union[str, AssertionTypeClass])\\\\ncustomProperties (Optional[Dict[str, str]])\\\\nexternalUrl (Optional[str])\\\\ndatasetAssertion (Optional[DatasetAssertionInfoClass])\\\\nfreshnessAssertion (Optional[FreshnessAssertionInfoClass])\\\\nvolumeAssertion (Optional[VolumeAssertionInfoClass])\\\\nsqlAssertion (Optional[SqlAssertionInfoClass])\\\\nfieldAssertion (Optional[FieldAssertionInfoClass])\\\\nschemaAssertion (Optional[SchemaAssertionInfoClass])\\\\ncustomAssertion (Optional[CustomAssertionInfoClass])\\\\nsource (Optional[AssertionSourceClass])\\\\nlastUpdated (Optional[AuditStampClass])\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty customAssertion Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty datasetAssertion None | str\\\\nAn optional human-readable description of the assertion\\\\n\\\\n\\\\n\\\\nproperty externalUrl None | FieldAssertionInfoClass\\\\nA Field Assertion definition. This field is populated when the type is FIELD.\\\\n\\\\n\\\\n\\\\nproperty freshnessAssertion None | AuditStampClass\\\\nThe time at which the assertion was last updated and the actor who updated it.\\\\nThis field is only present for Native assertions updated after this field was introduced.\\\\n\\\\n\\\\n\\\\nproperty schemaAssertion None | AssertionSourceClass\\\\nThe source or origin of the Assertion definition.\\\\nIf the source type of the Assertion is EXTERNAL, it is expected to have a corresponding dataPlatformInstance aspect detailing\\\\nthe platform where it was ingested from.\\\\n\\\\n\\\\n\\\\nproperty sqlAssertion str | AssertionTypeClass\\\\nType of assertion. Assertion types can evolve to span Datasets, Flows (Pipelines), Models, Features etc.\\\\n\\\\n\\\\n\\\\nproperty volumeAssertion Aspect\\\\nKey for a Assertion\\\\n\\\\nParameters str\\\\nUnique id for the assertion.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionResultClass(type, rowCount=None, missingCount=None, unexpectedCount=None, actualAggValue=None, nativeResults=None, externalUrl=None, error=None)\\\\nBases\\\\n\\\\ntype (Union[str, AssertionResultTypeClass])\\\\nrowCount (Optional[int])\\\\nmissingCount (Optional[int])\\\\nunexpectedCount (Optional[int])\\\\nactualAggValue (Optional[float])\\\\nnativeResults (Optional[Dict[str, str]])\\\\nexternalUrl (Optional[str])\\\\nerror (Optional[AssertionResultErrorClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty actualAggValue None | AssertionResultErrorClass\\\\nThe error object if AssertionResultType is an Error\\\\n\\\\n\\\\n\\\\nproperty externalUrl None | int\\\\nNumber of rows with missing value for evaluated batch\\\\n\\\\n\\\\n\\\\nproperty nativeResults None | int\\\\nNumber of rows for evaluated batch\\\\n\\\\n\\\\n\\\\nproperty type None | int\\\\nNumber of rows with unexpected value for evaluated batch\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionResultErrorClass(type, properties=None)\\\\nBases\\\\n\\\\ntype (Union[str, AssertionResultErrorTypeClass])\\\\nproperties (Optional[Dict[str, str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty properties str | AssertionResultErrorTypeClass\\\\nThe type of error encountered\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionResultErrorTypeClass\\\\nBases object\\\\nThe final result of evaluating an assertion, e.g. SUCCESS, FAILURE, or ERROR.\\\\n\\\\n\\\\nERROR = \'ERROR\'\\\\n\\\\n\\\\n\\\\nFAILURE = \'FAILURE\'\\\\n\\\\n\\\\n\\\\nINIT = \'INIT\'\\\\n\\\\n\\\\n\\\\nSUCCESS = \'SUCCESS\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionRunEventClass(timestampMillis, runId, asserteeUrn, status, assertionUrn, result=None, runtimeContext=None, batchSpec=None, eventGranularity=None, partitionSpec=None, messageId=None)\\\\nBases\\\\n\\\\ntimestampMillis (int)\\\\nrunId (str)\\\\nasserteeUrn (str)\\\\nstatus (Union[str, AssertionRunStatusClass])\\\\nassertionUrn (str)\\\\nresult (Optional[AssertionResultClass])\\\\nruntimeContext (Optional[Dict[str, str]])\\\\nbatchSpec (Optional[BatchSpecClass])\\\\neventGranularity (Optional[TimeWindowSizeClass])\\\\npartitionSpec (Optional[PartitionSpecClass])\\\\nmessageId (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nASPECTTYPE str\\\\n\\\\n\\\\n\\\\nproperty assertionUrn None | BatchSpecClass\\\\nSpecification of the batch which this run is evaluating\\\\n\\\\n\\\\n\\\\nproperty eventGranularity None | str\\\\nThe optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value.\\\\n\\\\n\\\\n\\\\nproperty partitionSpec None | AssertionResultClass\\\\nResults of assertion, present if the status is COMPLETE\\\\n\\\\n\\\\n\\\\nproperty runId None | Dict[str, str]\\\\nRuntime parameters of evaluation\\\\n\\\\n\\\\n\\\\nproperty status int\\\\nThe event timestamp field as epoch at UTC in milli seconds.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionRunStatusClass\\\\nBases DictWrapper\\\\nThe source of an assertion\\\\n\\\\nParameters None | AuditStampClass\\\\nThe time at which the assertion was initially created and the author who created it.\\\\nThis field is only present for Native assertions created after this field was introduced.\\\\n\\\\n\\\\n\\\\nproperty type object\\\\n\\\\n\\\\nEXTERNAL = \'EXTERNAL\'\\\\n\\\\n\\\\n\\\\nINFERRED = \'INFERRED\'\\\\n\\\\n\\\\n\\\\nNATIVE = \'NATIVE\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionStdAggregationClass\\\\nBases object\\\\nA boolean operator that is applied on the input to an assertion, after an aggregation function has been applied.\\\\n\\\\n\\\\nBETWEEN = \'BETWEEN\'\\\\n\\\\n\\\\n\\\\nCONTAIN = \'CONTAIN\'\\\\n\\\\n\\\\n\\\\nENDWITH = \'ENDWITH\'\\\\n\\\\n\\\\n\\\\nEQUALTO = \'EQUALTO\'\\\\n\\\\n\\\\n\\\\nGREATERTHAN = \'GREATERTHAN\'\\\\n\\\\n\\\\n\\\\nGREATERTHANOREQUALTO = \'GREATERTHANOREQUALTO\'\\\\n\\\\n\\\\n\\\\nIN = \'IN\'\\\\n\\\\n\\\\n\\\\nISFALSE = \'ISFALSE\'\\\\n\\\\n\\\\n\\\\nISTRUE = \'ISTRUE\'\\\\n\\\\n\\\\n\\\\nLESSTHAN = \'LESSTHAN\'\\\\n\\\\n\\\\n\\\\nLESSTHANOREQUALTO = \'LESSTHANOREQUALTO\'\\\\n\\\\n\\\\n\\\\nNOTEQUALTO = \'NOTEQUALTO\'\\\\n\\\\n\\\\n\\\\nNOTIN = \'NOTIN\'\\\\n\\\\n\\\\n\\\\nNOTNULL = \'NOTNULL\'\\\\n\\\\n\\\\n\\\\nNULL = \'NULL\'\\\\n\\\\n\\\\n\\\\nREGEXMATCH = \'REGEXMATCH\'\\\\n\\\\n\\\\n\\\\nSTARTWITH = \'STARTWITH\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionStdParameterClass(value, type)\\\\nBases\\\\n\\\\nvalue (str)\\\\ntype (Union[str, AssertionStdParameterTypeClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty type str\\\\nThe parameter value\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionStdParameterTypeClass\\\\nBases DictWrapper\\\\nParameters for AssertionStdOperators.\\\\n\\\\nParameters None | AssertionStdParameterClass\\\\nThe maxValue parameter of an assertion\\\\n\\\\n\\\\n\\\\nproperty minValue None | AssertionStdParameterClass\\\\nThe value parameter of an assertion\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AssertionTypeClass\\\\nBases object\\\\nAn enum to represent a type of change in an assertion value, metric, or measurement.\\\\n\\\\n\\\\nABSOLUTE = \'ABSOLUTE\'\\\\n\\\\n\\\\n\\\\nPERCENTAGE = \'PERCENTAGE\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.AuditStampClass(time, actor, impersonator=None, message=None)\\\\nBases\\\\n\\\\ntime (int)\\\\nactor (str)\\\\nimpersonator (Optional[str])\\\\nmessage (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty actor None | str\\\\nThe entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\\\\n\\\\n\\\\n\\\\nproperty message\\\\nAdditional context around how DataHub was informed of the particular change. For example\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty time object\\\\nThe various types of support azkaban jobs\\\\n\\\\n\\\\nCOMMAND = \'COMMAND\'\\\\n\\\\n\\\\n\\\\nGLUE = \'GLUE\'\\\\n\\\\n\\\\n\\\\nHADOOPJAVA = \'HADOOPJAVA\'\\\\n\\\\n\\\\n\\\\nHADOOPSHELL = \'HADOOPSHELL\'\\\\n\\\\n\\\\n\\\\nHIVE = \'HIVE\'\\\\n\\\\n\\\\n\\\\nPIG = \'PIG\'\\\\n\\\\n\\\\n\\\\nSQL = \'SQL\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.BaseDataClass(dataset, motivation=None, preProcessing=None)\\\\nBases\\\\n\\\\ndataset (str)\\\\nmotivation (Optional[str])\\\\npreProcessing (Optional[List[str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty dataset None | str\\\\nWhy was this dataset chosen?\\\\n\\\\n\\\\n\\\\nproperty preProcessing DictWrapper\\\\nA batch on which certain operations, e.g. data quality evaluation, is done.\\\\n\\\\nParameters Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty limit None | str\\\\nThe native identifier as specified by the system operating on the batch.\\\\n\\\\n\\\\n\\\\nproperty query DictWrapper\\\\nSchema text of binary JSON schema.\\\\n\\\\nParameters str\\\\nThe native schema text for binary JSON file format.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.BooleanTypeClass\\\\nBases DictWrapper\\\\nRepresents a single level in an entity\\\\u2019s browsePathV2\\\\n\\\\nParameters str\\\\nThe ID of the browse path entry. This is what gets stored in the index.\\\\nIf there\\\\u2019s an urn associated with this entry, id and urn will be the same\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nShared aspect containing Browse Paths to be indexed for an entity.\\\\n\\\\nParameters List[str]\\\\nA list of valid browse paths for the entity.\\\\nBrowse paths are expected to be forward slash-separated strings. For example Aspect\\\\nShared aspect containing a Browse Path to be indexed for an entity.\\\\n\\\\nParameters List[BrowsePathEntryClass]\\\\nA valid browse path for the entity. This field is provided by DataHub by default.\\\\nThis aspect is a newer version of browsePaths where we can encode more information in the path.\\\\nThis path is also based on containers for a given entity if it has containers.\\\\nThis is stored in elasticsearch as unit-separator delimited strings and only includes platform specific folders or containers.\\\\nThese paths should not include high level info captured elsewhere ie. Platform and Environment.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.BusinessAttributeAssociationClass(businessAttributeUrn)\\\\nBases\\\\nbusinessAttributeUrn (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty businessAttributeUrn Aspect\\\\nProperties associated with a BusinessAttribute\\\\n\\\\nParameters AuditStampClass\\\\nAn AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.\\\\n\\\\n\\\\n\\\\nproperty customProperties None | AuditStampClass\\\\nAn AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.\\\\n\\\\n\\\\n\\\\nproperty description str\\\\nFieldPath uniquely identifying the SchemaField this metadata is associated with\\\\n\\\\n\\\\n\\\\nproperty globalTags None | GlossaryTermsClass\\\\nGlossary terms associated with the field\\\\n\\\\n\\\\n\\\\nproperty lastModified str\\\\nDisplay name of the BusinessAttribute\\\\n\\\\n\\\\n\\\\nproperty type Aspect\\\\nKey for a Query\\\\n\\\\nParameters str\\\\nA unique id for the Business Attribute.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.BusinessAttributesClass(businessAttribute=None)\\\\nBases\\\\nbusinessAttribute (Optional[BusinessAttributeAssociationClass])\\\\n\\\\n\\\\n\\\\n\\\\nproperty businessAttribute DictWrapper\\\\nBytes field type.\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.CalendarIntervalClass\\\\nBases DictWrapper\\\\nThis section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?\\\\n\\\\nParameters None | str\\\\nCaveat Description\\\\nFor ex None | List[str]\\\\nRelevant groups that were not represented in the evaluation dataset?\\\\n\\\\n\\\\n\\\\nproperty needsFurtherTesting Aspect\\\\nThis section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?\\\\n\\\\nParameters None | CaveatDetailsClass\\\\nThis section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset?\\\\n\\\\n\\\\n\\\\nproperty idealDatasetCharacteristics None | str\\\\nRecommendations on where this MLModel should be used.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ChangeAuditStampsClass(created=None, lastModified=None, deleted=None)\\\\nBases\\\\n\\\\ncreated (Optional[AuditStampClass])\\\\nlastModified (Optional[AuditStampClass])\\\\ndeleted (Optional[AuditStampClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty created None | AuditStampClass\\\\nAn AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.\\\\n\\\\n\\\\n\\\\nproperty lastModified object\\\\nDescriptor for a change action\\\\n\\\\n\\\\nCREATE = \'CREATE\'\\\\n\\\\n\\\\n\\\\nCREATEENTITY = \'CREATEENTITY\'\\\\n\\\\n\\\\n\\\\nDELETE = \'DELETE\'\\\\n\\\\n\\\\n\\\\nPATCH = \'PATCH\'\\\\n\\\\n\\\\n\\\\nRESTATE = \'RESTATE\'\\\\n\\\\n\\\\n\\\\nUPDATE = \'UPDATE\'\\\\n\\\\n\\\\n\\\\nUPSERT = \'UPSERT\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ChartCellClass(cellId, changeAuditStamps, cellTitle=None)\\\\nBases\\\\n\\\\ncellId (str)\\\\nchangeAuditStamps (ChangeAuditStampsClass)\\\\ncellTitle (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty cellId None | str\\\\nTitle of the cell\\\\n\\\\n\\\\n\\\\nproperty changeAuditStamps Aspect\\\\nInformation about a chart\\\\n\\\\nParameters None | str | AccessLevelClass\\\\nAccess level for the chart\\\\n\\\\n\\\\n\\\\nproperty chartUrl Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty description None | str\\\\nURL where the reference exist\\\\n\\\\n\\\\n\\\\nproperty inputEdges None | List[str]\\\\nData sources for the chart\\\\nDeprecated! Use inputEdges instead.\\\\n\\\\n\\\\n\\\\nproperty lastModified None | int\\\\nThe time when this chart last refreshed\\\\n\\\\n\\\\n\\\\nproperty title None | str | ChartTypeClass\\\\nType of the chart\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ChartKeyClass(dashboardTool, chartId)\\\\nBases\\\\n\\\\ndashboardTool (str)\\\\nchartId (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty chartId str\\\\nThe name of the dashboard tool such as looker, redash etc.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ChartQueryClass(rawQuery, type)\\\\nBases\\\\n\\\\nrawQuery (str)\\\\ntype (Union[str, ChartQueryTypeClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty rawQuery str | ChartQueryTypeClass\\\\nChart query type\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ChartQueryTypeClass\\\\nBases DictWrapper\\\\nA metadata snapshot for a specific Chart entity.\\\\n\\\\nParameters List[ChartKeyClass | ChartInfoClass | ChartQueryClass | EditableChartPropertiesClass | OwnershipClass | StatusClass | GlobalTagsClass | BrowsePathsClass | GlossaryTermsClass | InstitutionalMemoryClass | DataPlatformInstanceClass | BrowsePathsV2Class]\\\\nThe list of metadata aspects associated with the chart. Depending on the use case, this can either be all, or a selection, of supported aspects.\\\\n\\\\n\\\\n\\\\nproperty urn object\\\\nThe various types of charts\\\\n\\\\n\\\\nAREA = \'AREA\'\\\\n\\\\n\\\\n\\\\nBAR = \'BAR\'\\\\n\\\\n\\\\n\\\\nBOXPLOT = \'BOXPLOT\'\\\\n\\\\n\\\\n\\\\nCOHORT = \'COHORT\'\\\\n\\\\n\\\\n\\\\nHISTOGRAM = \'HISTOGRAM\'\\\\n\\\\n\\\\n\\\\nLINE = \'LINE\'\\\\n\\\\n\\\\n\\\\nPIE = \'PIE\'\\\\n\\\\n\\\\n\\\\nSCATTER = \'SCATTER\'\\\\n\\\\n\\\\n\\\\nTABLE = \'TABLE\'\\\\n\\\\n\\\\n\\\\nTEXT = \'TEXT\'\\\\n\\\\n\\\\n\\\\nWORDCLOUD = \'WORDCLOUD\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ChartUsageStatisticsClass(timestampMillis, eventGranularity=None, partitionSpec=None, messageId=None, viewsCount=None, uniqueUserCount=None, userCounts=None)\\\\nBases\\\\n\\\\ntimestampMillis (int)\\\\neventGranularity (Optional[TimeWindowSizeClass])\\\\npartitionSpec (Optional[PartitionSpecClass])\\\\nmessageId (Optional[str])\\\\nviewsCount (Optional[int])\\\\nuniqueUserCount (Optional[int])\\\\nuserCounts (Optional[List[ChartUserUsageCountsClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nASPECTTYPE None | TimeWindowSizeClass\\\\nGranularity of the event if applicable\\\\n\\\\n\\\\n\\\\nproperty messageId PartitionSpecClass | None\\\\nThe optional partition specification.\\\\n\\\\n\\\\n\\\\nproperty timestampMillis None | int\\\\nUnique user count\\\\n\\\\n\\\\n\\\\nproperty userCounts None | int\\\\nThe total number of times chart has been viewed\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ChartUserUsageCountsClass(user, viewsCount=None)\\\\nBases\\\\n\\\\nuser (str)\\\\nviewsCount (Optional[int])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty user None | int\\\\nThe number of times the user has viewed the chart\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ConditionClass\\\\nBases DictWrapper\\\\nA list of criterion and\\\\u2019d together.\\\\n\\\\nParameters List[CriterionClass]\\\\nA list of and criteria the filter applies to the query\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ContainerClass(container)\\\\nBases\\\\ncontainer (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty container Aspect\\\\nKey for an Asset Container\\\\n\\\\nParameters None | str\\\\nUnique guid for container\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ContainerPropertiesClass(name, customProperties=None, externalUrl=None, qualifiedName=None, description=None, env=None, created=None, lastModified=None)\\\\nBases\\\\n\\\\nname (str)\\\\ncustomProperties (Optional[Dict[str, str]])\\\\nexternalUrl (Optional[str])\\\\nqualifiedName (Optional[str])\\\\ndescription (Optional[str])\\\\nenv (Union[None, str, FabricTypeClass])\\\\ncreated (Optional[TimeStampClass])\\\\nlastModified (Optional[TimeStampClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty created Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty description None | str | FabricTypeClass\\\\nEnvironment for this flow\\\\n\\\\n\\\\n\\\\nproperty externalUrl None | TimeStampClass\\\\nA timestamp documenting when the asset was last modified in the source Data Platform (not on DataHub)\\\\n\\\\n\\\\n\\\\nproperty name None | str\\\\nFully-qualified name of the Container\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.CorpGroupEditableInfoClass(description=None, pictureLink=None, slack=None, email=None)\\\\nBases\\\\n\\\\ndescription (Optional[str])\\\\npictureLink (Optional[str])\\\\nslack (Optional[str])\\\\nemail (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty description None | str\\\\nEmail address to contact the group\\\\n\\\\n\\\\n\\\\nproperty pictureLink None | str\\\\nSlack channel for the group\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.CorpGroupInfoClass(admins, members, groups, displayName=None, email=None, description=None, slack=None, created=None)\\\\nBases\\\\n\\\\nadmins (List[str])\\\\nmembers (List[str])\\\\ngroups (List[str])\\\\ndisplayName (Optional[str])\\\\nemail (Optional[str])\\\\ndescription (Optional[str])\\\\nslack (Optional[str])\\\\ncreated (Optional[AuditStampClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty admins None | AuditStampClass\\\\nCreated Audit stamp\\\\n\\\\n\\\\n\\\\nproperty description None | str\\\\nThe name of the group.\\\\n\\\\n\\\\n\\\\nproperty email List[str]\\\\nList of groups in this group.\\\\nDeprecated! This field is unused.\\\\n\\\\n\\\\n\\\\nproperty members None | str\\\\nSlack channel for the group\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.CorpGroupKeyClass(name)\\\\nBases\\\\nname (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty name DictWrapper\\\\nA metadata snapshot for a specific CorpGroup entity.\\\\n\\\\nParameters List[CorpGroupKeyClass | CorpGroupInfoClass | GlobalTagsClass | StatusClass]\\\\nThe list of metadata aspects associated with the LdapUser. Depending on the use case, this can either be all, or a selection, of supported aspects.\\\\n\\\\n\\\\n\\\\nproperty urn DictWrapper\\\\nSettings for a user around the appearance of their DataHub UI\\\\n\\\\nParameters None | bool\\\\nFlag whether the user should see a homepage with only datasets, charts and dashboards. Intended for users\\\\nwho have less operational use cases for the datahub tool.\\\\n\\\\n\\\\n\\\\nproperty showThemeV2 Aspect\\\\nCorp user credentials\\\\n\\\\nParameters str\\\\nHashed password generated by concatenating salt and password, then hashing\\\\n\\\\n\\\\n\\\\nproperty passwordResetToken None | int\\\\nWhen the password reset token expires.\\\\n\\\\n\\\\n\\\\nproperty salt Aspect\\\\nLinkedin corp user information that can be edited from UI\\\\n\\\\nParameters None | str\\\\nAbout me section of the user\\\\n\\\\n\\\\n\\\\nproperty displayName None | str\\\\nEmail address to contact the user\\\\n\\\\n\\\\n\\\\nproperty persona None | str\\\\nPhone number to contact the user\\\\n\\\\n\\\\n\\\\nproperty pictureLink None | List[str]\\\\nThe platforms that the user commonly works with\\\\n\\\\n\\\\n\\\\nproperty skills None | str\\\\nSlack handle for the user\\\\n\\\\n\\\\n\\\\nproperty teams None | str\\\\nDataHub-native Title, e.g. \\\\u2018Software Engineer\\\\u2019\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.CorpUserInfoClass(active, customProperties=None, displayName=None, email=None, title=None, managerUrn=None, departmentId=None, departmentName=None, firstName=None, lastName=None, fullName=None, countryCode=None)\\\\nBases\\\\n\\\\nactive (bool)\\\\ncustomProperties (Optional[Dict[str, str]])\\\\ndisplayName (Optional[str])\\\\nemail (Optional[str])\\\\ntitle (Optional[str])\\\\nmanagerUrn (Optional[str])\\\\ndepartmentId (Optional[int])\\\\ndepartmentName (Optional[str])\\\\nfirstName (Optional[str])\\\\nlastName (Optional[str])\\\\nfullName (Optional[str])\\\\ncountryCode (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty active\\\\nDeprecated! Use CorpUserStatus instead. Whether the corpUser is active, ref\\\\n\\\\nType None | str\\\\ntwo uppercase letters country code. e.g.  US\\\\n\\\\n\\\\n\\\\nproperty customProperties None | int\\\\ndepartment id this user belong to\\\\n\\\\n\\\\n\\\\nproperty departmentName None | str\\\\ndisplayName of this user ,  e.g.  Hang Zhang(DataHQ)\\\\n\\\\n\\\\n\\\\nproperty email None | str\\\\nfirst name of this user\\\\n\\\\n\\\\n\\\\nproperty fullName None | str\\\\nlast name of this user\\\\n\\\\n\\\\n\\\\nproperty managerUrn None | str\\\\ntitle of this user\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.CorpUserKeyClass(username)\\\\nBases\\\\nusername (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty username Aspect\\\\nSettings that a user can customize through the datahub ui\\\\n\\\\nParameters CorpUserAppearanceSettingsClass\\\\nSettings for a user around the appearance of their DataHub U\\\\n\\\\n\\\\n\\\\nproperty views DictWrapper\\\\nA metadata snapshot for a specific CorpUser entity.\\\\n\\\\nParameters List[CorpUserKeyClass | CorpUserInfoClass | CorpUserEditableInfoClass | CorpUserStatusClass | GroupMembershipClass | GlobalTagsClass | StatusClass]\\\\nThe list of metadata aspects associated with the CorpUser. Depending on the use case, this can either be all, or a selection, of supported aspects.\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nThe status of the user, e.g. provisioned, active, suspended, etc.\\\\n\\\\nParameters AuditStampClass\\\\nAudit stamp containing who last modified the status and when.\\\\n\\\\n\\\\n\\\\nproperty status DictWrapper\\\\nSettings related to the \\\\u2018Views\\\\u2019 feature.\\\\n\\\\nParameters None | str\\\\nThe default View which is selected for the user.\\\\nIf none is chosen, then this value will be left blank.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.CostClass(costType, cost)\\\\nBases\\\\n\\\\ncostType (Union[str, CostTypeClass])\\\\ncost (CostCostClass)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty cost str | CostTypeClass\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.CostCostClass(fieldDiscriminator, costId=None, costCode=None)\\\\nBases\\\\n\\\\nfieldDiscriminator (Union[str, CostCostDiscriminatorClass])\\\\ncostId (Optional[float])\\\\ncostCode (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty costCode None | float\\\\n\\\\n\\\\n\\\\nproperty fieldDiscriminator object\\\\n\\\\n\\\\ncostCode = \'costCode\'\\\\n\\\\n\\\\n\\\\ncostId = \'costId\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.CostTypeClass\\\\nBases DictWrapper\\\\nA criterion for matching a field with given value\\\\n\\\\nParameters str | ConditionClass\\\\nThe condition for the criterion, e.g. EQUAL, STARTWITH\\\\n\\\\n\\\\n\\\\nproperty field bool\\\\nWhether the condition should be negated\\\\n\\\\n\\\\n\\\\nproperty value List[str]\\\\nValues. one of which the intended field should match\\\\nNote, if values is set, the above \\\\u201cvalue\\\\u201d field will be ignored\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.CustomAssertionInfoClass(type, entity, field=None, logic=None)\\\\nBases\\\\n\\\\ntype (str)\\\\nentity (str)\\\\nfield (Optional[str])\\\\nlogic (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity None | str\\\\ndataset schema field targeted by this assertion.\\\\nThis field is expected to be provided if the assertion is on dataset field\\\\n\\\\n\\\\n\\\\nproperty logic str\\\\nThe type of custom assertion.\\\\nThis is how your assertion will appear categorized in DataHub UI.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DashboardInfoClass(title, description, lastModified, customProperties=None, externalUrl=None, charts=None, chartEdges=None, datasets=None, datasetEdges=None, dashboards=None, dashboardUrl=None, access=None, lastRefreshed=None)\\\\nBases\\\\n\\\\ntitle (str)\\\\ndescription (str)\\\\nlastModified (ChangeAuditStampsClass)\\\\ncustomProperties (Optional[Dict[str, str]])\\\\nexternalUrl (Optional[str])\\\\ncharts (Optional[List[str]])\\\\nchartEdges (Optional[List[EdgeClass]])\\\\ndatasets (Optional[List[str]])\\\\ndatasetEdges (Optional[List[EdgeClass]])\\\\ndashboards (Optional[List[EdgeClass]])\\\\ndashboardUrl (Optional[str])\\\\naccess (Union[None, str, AccessLevelClass])\\\\nlastRefreshed (Optional[int])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty access None | List[EdgeClass]\\\\nCharts in a dashboard\\\\n\\\\n\\\\n\\\\nproperty charts Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty dashboardUrl List[EdgeClass]\\\\nDashboards included by this dashboard.\\\\nSome dashboard entities (e.g. PowerBI Apps) can contain other dashboards.\\\\nThe Edge\\\\u2019s sourceUrn should never be set, as it will always be the base dashboard.\\\\n\\\\n\\\\n\\\\nproperty datasetEdges List[str]\\\\nDatasets consumed by a dashboard\\\\nDeprecated! Use datasetEdges instead.\\\\n\\\\n\\\\n\\\\nproperty description None | str\\\\nURL where the reference exist\\\\n\\\\n\\\\n\\\\nproperty lastModified None | int\\\\nThe time when this dashboard last refreshed\\\\n\\\\n\\\\n\\\\nproperty title Aspect\\\\nKey for a Dashboard\\\\n\\\\nParameters str\\\\nUnique id for the dashboard. This id should be globally unique for a dashboarding tool even when there are multiple deployments of it. As an example, dashboard URL could be used here for Looker such as \\\\u2018looker.linkedin.com/dashboards/1234\\\\u2019\\\\n\\\\n\\\\n\\\\nproperty dashboardTool DictWrapper\\\\nA metadata snapshot for a specific Dashboard entity.\\\\n\\\\nParameters List[DashboardKeyClass | DashboardInfoClass | EditableDashboardPropertiesClass | OwnershipClass | StatusClass | GlobalTagsClass | BrowsePathsClass | GlossaryTermsClass | InstitutionalMemoryClass | DataPlatformInstanceClass | BrowsePathsV2Class]\\\\nThe list of metadata aspects associated with the dashboard. Depending on the use case, this can either be all, or a selection, of supported aspects.\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nExperimental (Subject to breaking change) \\\\u2013 Stats corresponding to dashboard\\\\u2019s usage.\\\\nIf this aspect represents the latest snapshot of the statistics about a Dashboard, the eventGranularity field should be null.\\\\nIf this aspect represents a bucketed window of usage statistics (e.g. over a day), then the eventGranularity field should be set accordingly.\\\\n\\\\nParameters ClassVar[str] = \'timeseries\'\\\\n\\\\n\\\\n\\\\nproperty eventGranularity None | int\\\\nThe total number of dashboard executions (refreshes / syncs)\\\\n\\\\n\\\\n\\\\nproperty favoritesCount None | int\\\\nLast viewed at\\\\nThis should not be set in cases where statistics are windowed.\\\\n\\\\n\\\\n\\\\nproperty messageId PartitionSpecClass | None\\\\nThe optional partition specification.\\\\n\\\\n\\\\n\\\\nproperty timestampMillis None | int\\\\nUnique user count\\\\n\\\\n\\\\n\\\\nproperty userCounts None | int\\\\nThe total number of times dashboard has been viewed\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DashboardUserUsageCountsClass(user, viewsCount=None, executionsCount=None, usageCount=None, userEmail=None)\\\\nBases\\\\n\\\\nuser (str)\\\\nviewsCount (Optional[int])\\\\nexecutionsCount (Optional[int])\\\\nusageCount (Optional[int])\\\\nuserEmail (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty executionsCount None | int\\\\nNormalized numeric metric representing user\\\\u2019s dashboard usage \\\\u2013 the number of times the user executed or viewed the dashboard.\\\\n\\\\n\\\\n\\\\nproperty user None | str\\\\nIf useremail is set, we attempt to resolve the user\\\\u2019s urn upon ingest\\\\n\\\\n\\\\n\\\\nproperty viewsCount Aspect\\\\nKey for a Data Contract\\\\n\\\\nParameters str\\\\nUnique id for the contract\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataContractPropertiesClass(entity, schema=None, freshness=None, dataQuality=None, rawContract=None)\\\\nBases\\\\n\\\\nentity (str)\\\\nschema (Optional[List[SchemaContractClass]])\\\\nfreshness (Optional[List[FreshnessContractClass]])\\\\ndataQuality (Optional[List[DataQualityContractClass]])\\\\nrawContract (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty dataQuality str\\\\nThe entity that this contract is associated with. Currently, we only support Dataset contracts, but\\\\nin the future we may also support Data Product level contracts.\\\\n\\\\n\\\\n\\\\nproperty freshness None | str\\\\nYAML-formatted contract definition\\\\n\\\\n\\\\n\\\\nproperty schema object\\\\n\\\\n\\\\nACTIVE = \'ACTIVE\'\\\\n\\\\n\\\\n\\\\nPENDING = \'PENDING\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataContractStatusClass(state, customProperties=None)\\\\nBases\\\\n\\\\nstate (Union[str, DataContractStateClass])\\\\ncustomProperties (Optional[Dict[str, str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty customProperties str | DataContractStateClass\\\\nThe latest state of the data contract\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataFlowInfoClass(name, customProperties=None, externalUrl=None, description=None, project=None, created=None, lastModified=None, env=None)\\\\nBases\\\\n\\\\nname (str)\\\\ncustomProperties (Optional[Dict[str, str]])\\\\nexternalUrl (Optional[str])\\\\ndescription (Optional[str])\\\\nproject (Optional[str])\\\\ncreated (Optional[TimeStampClass])\\\\nlastModified (Optional[TimeStampClass])\\\\nenv (Union[None, str, FabricTypeClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty created Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty description None | str | FabricTypeClass\\\\nEnvironment for this flow\\\\n\\\\n\\\\n\\\\nproperty externalUrl None | TimeStampClass\\\\nA timestamp documenting when the asset was last modified in the source Data Platform (not on DataHub)\\\\n\\\\n\\\\n\\\\nproperty name None | str\\\\nOptional project/namespace associated with the flow\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataFlowKeyClass(orchestrator, flowId, cluster)\\\\nBases\\\\n\\\\norchestrator (str)\\\\nflowId (str)\\\\ncluster (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty cluster str\\\\nUnique Identifier of the data flow\\\\n\\\\n\\\\n\\\\nproperty orchestrator DictWrapper\\\\nA metadata snapshot for a specific DataFlow entity.\\\\n\\\\nParameters List[DataFlowKeyClass | DataFlowInfoClass | EditableDataFlowPropertiesClass | OwnershipClass | StatusClass | GlobalTagsClass | BrowsePathsClass | GlossaryTermsClass | InstitutionalMemoryClass | DataPlatformInstanceClass | BrowsePathsV2Class]\\\\nThe list of metadata aspects associated with the data flow. Depending on the use case, this can either be all, or a selection, of supported aspects.\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nInformation about a DataHub Access Token\\\\n\\\\nParameters str\\\\nUrn of the actor to which this access token belongs to.\\\\n\\\\n\\\\n\\\\nproperty createdAt None | str\\\\nDescription of the token if defined.\\\\n\\\\n\\\\n\\\\nproperty expiresAt str\\\\nUser defined name for the access token if defined.\\\\n\\\\n\\\\n\\\\nproperty ownerUrn Aspect\\\\nKey for a DataHub Access Token\\\\n\\\\nParameters str\\\\nAccess token\\\\u2019s SHA-256 hashed JWT signature\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubActionKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id DictWrapper\\\\nInformation used to filter DataHub actors.\\\\n\\\\nParameters bool\\\\nWhether the filter should apply to all groups.\\\\n\\\\n\\\\n\\\\nproperty allUsers None | List[str]\\\\nA specific set of groups to apply the policy to (disjunctive)\\\\n\\\\n\\\\n\\\\nproperty resourceOwners None | List[str]\\\\nDefine type of ownership for the policy\\\\n\\\\n\\\\n\\\\nproperty roles None | List[str]\\\\nA specific set of users to apply the policy to (disjunctive)\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubConnectionDetailsClass(type, name=None, json=None)\\\\nBases\\\\n\\\\ntype (Union[str, DataHubConnectionDetailsTypeClass])\\\\nname (Optional[str])\\\\njson (Optional[DataHubJsonConnectionClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty json None | str\\\\nDisplay name of the connection\\\\n\\\\n\\\\n\\\\nproperty type object\\\\n\\\\n\\\\nJSON = \'JSON\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubConnectionKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id DictWrapper\\\\n\\\\nParameters None | bool\\\\nWhether or not to run this ingestion source in debug mode\\\\n\\\\n\\\\n\\\\nproperty executorId None | Dict[str, str]\\\\nExtra arguments for the ingestion run.\\\\n\\\\n\\\\n\\\\nproperty recipe None | str\\\\nThe PyPI version of the datahub CLI to use when executing a recipe\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubIngestionSourceInfoClass(name, type, config, platform=None, schedule=None, source=None)\\\\nBases\\\\n\\\\nname (str)\\\\ntype (str)\\\\nconfig (DataHubIngestionSourceConfigClass)\\\\nplatform (Optional[str])\\\\nschedule (Optional[DataHubIngestionSourceScheduleClass])\\\\nsource (Optional[DataHubIngestionSourceSourceClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty config str\\\\nThe display name of the ingestion source\\\\n\\\\n\\\\n\\\\nproperty platform None | DataHubIngestionSourceScheduleClass\\\\nThe schedule on which the ingestion source is executed\\\\n\\\\n\\\\n\\\\nproperty source str\\\\nThe type of the source itself, e.g. mysql, bigquery, bigquery-usage. Should match the recipe.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubIngestionSourceKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id DictWrapper\\\\nThe schedule associated with an ingestion source.\\\\n\\\\nParameters str\\\\nA cron-formatted execution interval, as a cron string, e.g. * * * * *\\\\n\\\\n\\\\n\\\\nproperty timezone DictWrapper\\\\n\\\\nParameters str | DataHubIngestionSourceSourceTypeClass\\\\nThe source type of the ingestion source\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubIngestionSourceSourceTypeClass\\\\nBases DictWrapper\\\\nA set of connection details consisting of an encrypted JSON blob.\\\\n\\\\nParameters str\\\\nThe encrypted JSON connection details.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubPersonaInfoClass\\\\nBases Aspect\\\\nKey for a persona type\\\\n\\\\nParameters str\\\\nA unique id for the persona type\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubPolicyInfoClass(displayName, description, type, state, privileges, actors, resources=None, editable=None, lastUpdatedTimestamp=None)\\\\nBases\\\\n\\\\ndisplayName (str)\\\\ndescription (str)\\\\ntype (str)\\\\nstate (str)\\\\nprivileges (List[str])\\\\nactors (DataHubActorFilterClass)\\\\nresources (Optional[DataHubResourceFilterClass])\\\\neditable (Optional[bool])\\\\nlastUpdatedTimestamp (Optional[int])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty actors str\\\\nDescription of the Policy\\\\n\\\\n\\\\n\\\\nproperty displayName bool\\\\nWhether the policy should be editable via the UI\\\\n\\\\n\\\\n\\\\nproperty lastUpdatedTimestamp List[str]\\\\nThe privileges that the policy grants.\\\\n\\\\n\\\\n\\\\nproperty resources str\\\\nThe state of policy, ACTIVE or INACTIVE\\\\n\\\\n\\\\n\\\\nproperty type Aspect\\\\nKey for a DataHub Policy\\\\n\\\\nParameters str\\\\nA unique id for the DataHub access policy record. Generated on the server side at policy creation time.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubPolicySnapshotClass(urn, aspects)\\\\nBases\\\\n\\\\nurn (str)\\\\naspects (List[Union[DataHubPolicyKeyClass, DataHubPolicyInfoClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty aspects str\\\\nURN for the entity the metadata snapshot is associated with.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubResourceFilterClass(type=None, resources=None, allResources=None, filter=None)\\\\nBases\\\\n\\\\ntype (Optional[str])\\\\nresources (Optional[List[str]])\\\\nallResources (Optional[bool])\\\\nfilter (Optional[PolicyMatchFilterClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty allResources None | PolicyMatchFilterClass\\\\nFilter to apply privileges to\\\\n\\\\n\\\\n\\\\nproperty resources None | str\\\\nThe type of resource that the policy applies to. This will most often be a data asset entity name, for\\\\nexample \\\\u2018dataset\\\\u2019. It is not strictly required because in the future we will want to support filtering a resource\\\\nby domain, as well.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubRetentionConfigClass(retention)\\\\nBases\\\\nretention (RetentionClass)\\\\n\\\\n\\\\n\\\\n\\\\nproperty retention Aspect\\\\nKey for a DataHub Retention\\\\n\\\\nParameters str\\\\nAspect name to apply retention to.  (or empty) for applying defaults.\\\\n\\\\n\\\\n\\\\nproperty entityName DictWrapper\\\\nA metadata snapshot for DataHub Access Policy data.\\\\n\\\\nParameters List[DataHubRetentionKeyClass | DataHubRetentionConfigClass]\\\\nThe list of metadata aspects associated with the DataHub access policy.\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nInformation about a DataHub Role.\\\\n\\\\nParameters str\\\\nDescription of the Role\\\\n\\\\n\\\\n\\\\nproperty editable str\\\\nName of the Role\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubRoleKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id DictWrapper\\\\nConfiguration for how any given field should be indexed and matched in the DataHub search index.\\\\n\\\\nParameters bool\\\\nWhether or not to add the \\\\u201chas values\\\\u201d to filters.\\\\ncheck if this is conditional on addToFilters being true\\\\n\\\\n\\\\n\\\\nproperty addToFilters float\\\\nBoost multiplier to the match score. Matches on fields with higher boost score ranks higher\\\\n\\\\n\\\\n\\\\nproperty enableAutocomplete None | str\\\\nName of the field in the search index. Defaults to the field name otherwise\\\\n\\\\n\\\\n\\\\nproperty fieldNameAliases None | str | SearchFieldTypeClass\\\\nType of the field. Defines how the field is indexed and matched\\\\n\\\\n\\\\n\\\\nproperty filterNameOverride None | str\\\\nIf set, add a index field of the given name that checks whether the field exists\\\\n\\\\n\\\\n\\\\nproperty hasValuesFilterNameOverride None | str\\\\nIf set, add a index field of the given name that checks the number of elements\\\\n\\\\n\\\\n\\\\nproperty queryByDefault None | Dict[str, float]\\\\n(Optional) Weights to apply to score for a given value\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubSecretKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id Aspect\\\\nThe value of a DataHub Secret\\\\n\\\\nParameters None | AuditStampClass\\\\nCreated Audit stamp\\\\n\\\\n\\\\n\\\\nproperty description str\\\\nThe display name for the secret\\\\n\\\\n\\\\n\\\\nproperty value Aspect\\\\nKey for a DataHub Step State\\\\n\\\\nParameters str\\\\nA unique id for the state\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubStepStatePropertiesClass(lastModified, properties=None)\\\\nBases\\\\n\\\\nlastModified (AuditStampClass)\\\\nproperties (Optional[Dict[str, str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty lastModified Dict[str, str]\\\\nDescription of the secret\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubUpgradeKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id Aspect\\\\nInformation collected when kicking off a DataHubUpgrade\\\\n\\\\nParameters int\\\\nTimestamp when we started this DataHubUpgrade\\\\n\\\\n\\\\n\\\\nproperty version Aspect\\\\nInformation collected when a DataHubUpgrade successfully finishes\\\\n\\\\nParameters None | Dict[str, str]\\\\nResult map to place helpful information about this upgrade job\\\\n\\\\n\\\\n\\\\nproperty state int\\\\nTimestamp when we started this DataHubUpgrade\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubUpgradeStateClass\\\\nBases DictWrapper\\\\nA View definition.\\\\n\\\\nParameters List[str]\\\\nThe Entity Types in the scope of the View.\\\\n\\\\n\\\\n\\\\nproperty filter Aspect\\\\nInformation about a DataHub View. \\\\u2013 TODO\\\\n\\\\nname (str)\\\\ntype (Union[str, DataHubViewTypeClass])\\\\ndefinition (DataHubViewDefinitionClass)\\\\ncreated (AuditStampClass)\\\\nlastModified (AuditStampClass)\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty created DataHubViewDefinitionClass\\\\nThe view itself\\\\n\\\\n\\\\n\\\\nproperty description AuditStampClass\\\\nAudit stamp capturing the time and actor who last modified the View.\\\\n\\\\n\\\\n\\\\nproperty name str | DataHubViewTypeClass\\\\nThe type of View\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataHubViewKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id object\\\\n\\\\n\\\\nGLOBAL = \'GLOBAL\'\\\\n\\\\n\\\\n\\\\nPERSONAL = \'PERSONAL\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataJobInfoClass(name, type, customProperties=None, externalUrl=None, description=None, flowUrn=None, created=None, lastModified=None, status=None, env=None)\\\\nBases\\\\n\\\\nname (str)\\\\ntype (Union[str, AzkabanJobTypeClass])\\\\ncustomProperties (Optional[Dict[str, str]])\\\\nexternalUrl (Optional[str])\\\\ndescription (Optional[str])\\\\nflowUrn (Optional[str])\\\\ncreated (Optional[TimeStampClass])\\\\nlastModified (Optional[TimeStampClass])\\\\nstatus (Union[None, str, JobStatusClass])\\\\nenv (Union[None, str, FabricTypeClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty created Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty description None | str | FabricTypeClass\\\\nEnvironment for this job\\\\n\\\\n\\\\n\\\\nproperty externalUrl None | str\\\\nDataFlow urn that this job is part of\\\\n\\\\n\\\\n\\\\nproperty lastModified str\\\\nJob name\\\\n\\\\n\\\\n\\\\nproperty status str | AzkabanJobTypeClass\\\\nDatajob type\\\\nNOTE* Aspect\\\\nInformation about the inputs and outputs of a Data processing job\\\\n\\\\nParameters None | List[FineGrainedLineageClass]\\\\nFine-grained column-level lineages\\\\nNot currently supported in the UI\\\\nUse UpstreamLineage aspect for datasets to express Column Level Lineage for the UI\\\\n\\\\n\\\\n\\\\nproperty inputDatajobEdges None | List[str]\\\\nInput datajobs that this data job depends on\\\\nDeprecated! Use inputDatajobEdges instead.\\\\n\\\\n\\\\n\\\\nproperty inputDatasetEdges None | List[str]\\\\nFields of the input datasets used by this job\\\\n\\\\n\\\\n\\\\nproperty inputDatasets None | List[EdgeClass]\\\\nOutput datasets produced by the data job during processing\\\\n\\\\n\\\\n\\\\nproperty outputDatasetFields List[str]\\\\nOutput datasets produced by the data job during processing\\\\nDeprecated! Use outputDatasetEdges instead.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataJobKeyClass(flow, jobId)\\\\nBases\\\\n\\\\nflow (str)\\\\njobId (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty flow str\\\\nUnique Identifier of the data job\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataJobSnapshotClass(urn, aspects)\\\\nBases\\\\n\\\\nurn (str)\\\\naspects (List[Union[DataJobKeyClass, DataJobInfoClass, DataJobInputOutputClass, EditableDataJobPropertiesClass, OwnershipClass, StatusClass, GlobalTagsClass, BrowsePathsClass, GlossaryTermsClass, InstitutionalMemoryClass, DataPlatformInstanceClass, BrowsePathsV2Class]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty aspects str\\\\nURN for the entity the metadata snapshot is associated with.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataPlatformInfoClass(name, type, datasetNameDelimiter, displayName=None, logoUrl=None)\\\\nBases\\\\n\\\\nname (str)\\\\ntype (Union[str, PlatformTypeClass])\\\\ndatasetNameDelimiter (str)\\\\ndisplayName (Optional[str])\\\\nlogoUrl (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty datasetNameDelimiter None | str\\\\nThe name that will be used for displaying a platform type.\\\\n\\\\n\\\\n\\\\nproperty logoUrl str\\\\nName of the data platform\\\\n\\\\n\\\\n\\\\nproperty type Aspect\\\\nThe specific instance of the data platform that this entity belongs to\\\\n\\\\nParameters None | str\\\\nInstance of the data platform (e.g. db instance)\\\\n\\\\n\\\\n\\\\nproperty platform Aspect\\\\nKey for a Dataset\\\\n\\\\nParameters str\\\\nUnique instance id\\\\n\\\\n\\\\n\\\\nproperty platform Aspect\\\\nProperties associated with a Data Platform Instance\\\\n\\\\nParameters Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty description None | str\\\\nURL where the reference exist\\\\n\\\\n\\\\n\\\\nproperty name Aspect\\\\nKey for a Data Platform\\\\n\\\\nParameters str\\\\nData platform name i.e. hdfs, oracle, espresso\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataPlatformSnapshotClass(urn, aspects)\\\\nBases\\\\n\\\\nurn (str)\\\\naspects (List[Union[DataPlatformKeyClass, DataPlatformInfoClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty aspects str\\\\nURN for the entity the metadata snapshot is associated with.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataProcessInfoClass(inputs=None, outputs=None)\\\\nBases\\\\n\\\\ninputs (Optional[List[str]])\\\\noutputs (Optional[List[str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty inputs None | List[str]\\\\nthe outputs of the data process\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataProcessInstanceInputClass(inputs)\\\\nBases\\\\ninputs (List[str])\\\\n\\\\n\\\\n\\\\n\\\\nproperty inputs Aspect\\\\nKey for an Asset DataProcessInstance\\\\n\\\\nParameters str\\\\nA unique id for the DataProcessInstance . Should be separate from the name used for displaying a DataProcessInstance.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataProcessInstanceOutputClass(outputs)\\\\nBases\\\\noutputs (List[str])\\\\n\\\\n\\\\n\\\\n\\\\nproperty outputs Aspect\\\\nThe inputs and outputs of this data process\\\\n\\\\nParameters AuditStampClass\\\\nAudit stamp containing who reported the lineage and when\\\\n\\\\n\\\\n\\\\nproperty customProperties None | str\\\\nURL where the reference exist\\\\n\\\\n\\\\n\\\\nproperty name None | str | DataProcessTypeClass\\\\nProcess type\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataProcessInstanceRelationshipsClass(upstreamInstances, parentTemplate=None, parentInstance=None)\\\\nBases\\\\n\\\\nupstreamInstances (List[str])\\\\nparentTemplate (Optional[str])\\\\nparentInstance (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty parentInstance None | str\\\\nThe parent entity whose run instance it is\\\\n\\\\n\\\\n\\\\nproperty upstreamInstances Aspect\\\\nAn event representing the current status of data process run.\\\\nDataProcessRunEvent should be used for reporting the status of a dataProcess\\\\u2019 run.\\\\n\\\\nParameters ClassVar[str] = \'timeseries\'\\\\n\\\\n\\\\n\\\\nproperty attempt None | int\\\\nThe duration of the run in milliseconds.\\\\n\\\\n\\\\n\\\\nproperty eventGranularity None | str\\\\nURL where the reference exist\\\\n\\\\n\\\\n\\\\nproperty messageId PartitionSpecClass | None\\\\nThe optional partition specification.\\\\n\\\\n\\\\n\\\\nproperty result str | DataProcessRunStatusClass\\\\n\\\\n\\\\n\\\\nproperty timestampMillis DictWrapper\\\\n\\\\nParameters str\\\\nIt identifies the system where the native result comes from like Airflow, Azkaban, etc..\\\\n\\\\n\\\\n\\\\nproperty type Aspect\\\\nKey for a Data Process\\\\n\\\\nParameters str\\\\nProcess name i.e. an ETL job name\\\\n\\\\n\\\\n\\\\nproperty orchestrator Migrate towards something that can be validated like DataPlatform urn\\\\n\\\\n\\\\n\\\\nproperty origin object\\\\n\\\\n\\\\nCOMPLETE = \'COMPLETE\'\\\\n\\\\n\\\\n\\\\nSTARTED = \'STARTED\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataProcessSnapshotClass(urn, aspects)\\\\nBases\\\\n\\\\nurn (str)\\\\naspects (List[Union[DataProcessKeyClass, OwnershipClass, DataProcessInfoClass, StatusClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty aspects str\\\\nURN for the entity the metadata snapshot is associated with.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataProcessTypeClass\\\\nBases DictWrapper\\\\nRepresents an association of assets to a Data Product.\\\\n\\\\nParameters None | AuditStampClass\\\\nAudit stamp containing who created this relationship edge and when\\\\n\\\\n\\\\n\\\\nproperty destinationUrn None | AuditStampClass\\\\nAudit stamp containing who last modified this relationship edge and when\\\\n\\\\n\\\\n\\\\nproperty outputPort None | Dict[str, str]\\\\nA generic properties bag that allows us to store specific information on this graph edge.\\\\n\\\\n\\\\n\\\\nproperty sourceUrn Aspect\\\\nKey for a Query\\\\n\\\\nParameters str\\\\nA unique id for the Data Product.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataProductPropertiesClass(customProperties=None, externalUrl=None, name=None, description=None, assets=None)\\\\nBases\\\\n\\\\ncustomProperties (Optional[Dict[str, str]])\\\\nexternalUrl (Optional[str])\\\\nname (Optional[str])\\\\ndescription (Optional[str])\\\\nassets (Optional[List[DataProductAssociationClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty assets Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty description None | str\\\\nURL where the reference exist\\\\n\\\\n\\\\n\\\\nproperty name DictWrapper\\\\nA data quality contract pertaining to a physical data asset\\\\nData Quality contracts are used to make assertions about data quality metrics for a physical data asset\\\\n\\\\nParameters str\\\\nThe assertion representing the Data Quality contract.\\\\nE.g. a table or column-level assertion.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataTransformClass(queryStatement=None)\\\\nBases\\\\nqueryStatement (Optional[QueryStatementClass])\\\\n\\\\n\\\\n\\\\n\\\\nproperty queryStatement Aspect\\\\nInformation about a Query against one or more data assets (e.g. Tables or Views).\\\\n\\\\nParameters List[DataTransformClass]\\\\nList of transformations applied\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DataTypeInfoClass(qualifiedName, displayName=None, description=None)\\\\nBases\\\\n\\\\nqualifiedName (str)\\\\ndisplayName (Optional[str])\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty description None | str\\\\nAn optional display name for the data type.\\\\n\\\\n\\\\n\\\\nproperty qualifiedName Aspect\\\\n\\\\nParameters str\\\\nA unique id for a data type. Usually this will be a unique namespace + data type name.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DatahubIngestionCheckpointClass(timestampMillis, pipelineName, platformInstanceId, config, state, runId, eventGranularity=None, partitionSpec=None, messageId=None)\\\\nBases\\\\n\\\\ntimestampMillis (int)\\\\npipelineName (str)\\\\nplatformInstanceId (str)\\\\nconfig (str)\\\\nstate (IngestionCheckpointStateClass)\\\\nrunId (str)\\\\neventGranularity (Optional[TimeWindowSizeClass])\\\\npartitionSpec (Optional[PartitionSpecClass])\\\\nmessageId (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nASPECTTYPE str\\\\nJson-encoded string representation of the non-secret members of the config .\\\\n\\\\n\\\\n\\\\nproperty eventGranularity None | str\\\\nThe optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value.\\\\n\\\\n\\\\n\\\\nproperty partitionSpec str\\\\nThe name of the pipeline that ran ingestion, a stable unique user provided identifier.\\\\ne.g. mysnowflake1-to-datahub.\\\\n\\\\n\\\\n\\\\nproperty platformInstanceId Bigquery project ids, MySQL hostnames etc.\\\\n\\\\n\\\\n\\\\nproperty runId IngestionCheckpointStateClass\\\\nOpaque blob of the state representation.\\\\n\\\\n\\\\n\\\\nproperty timestampMillis Aspect\\\\nSummary of a datahub ingestion run for a given platform.\\\\n\\\\nParameters ClassVar[str] = \'timeseries\'\\\\n\\\\n\\\\n\\\\nproperty availableMemory None | str\\\\nThe non-sensitive key-value pairs of the yaml config used as json string.\\\\n\\\\n\\\\n\\\\nproperty customsummary None | TimeWindowSizeClass\\\\nGranularity of the event if applicable\\\\n\\\\n\\\\n\\\\nproperty messageId None | int\\\\nThe total number of aspects produced across all entities.\\\\n\\\\n\\\\n\\\\nproperty numEntities None | int\\\\nNumber of entities skipped.\\\\n\\\\n\\\\n\\\\nproperty numErrors None | int\\\\nThe number of events produced (MCE + MCP).\\\\n\\\\n\\\\n\\\\nproperty numProcessors None | int\\\\nTotal number of sink API calls.\\\\n\\\\n\\\\n\\\\nproperty numSourceAPICalls None | int\\\\nNumber of warnings generated.\\\\n\\\\n\\\\n\\\\nproperty numWorkUnitsCommitted None | int\\\\nThe number of workunits that are produced.\\\\n\\\\n\\\\n\\\\nproperty operatingSystemName PartitionSpecClass | None\\\\nThe optional partition specification.\\\\n\\\\n\\\\n\\\\nproperty pipelineName str\\\\nThe id of the instance against which the ingestion pipeline ran.\\\\ne.g. str\\\\nThe runId for this pipeline instance.\\\\n\\\\n\\\\n\\\\nproperty runStatus None | str\\\\nThe software version of this ingestion.\\\\n\\\\n\\\\n\\\\nproperty systemHostName int\\\\nThe event timestamp field as epoch at UTC in milli seconds.\\\\n\\\\n\\\\n\\\\nproperty totalLatencySinkAPICalls None | int\\\\nTotal latency across all source API calls.\\\\n\\\\n\\\\n\\\\nproperty totalMemory DictWrapper\\\\nAttributes that are applicable to single-Dataset Assertions\\\\n\\\\nParameters None | str | AssertionStdAggregationClass\\\\nStandardized assertion operator\\\\nThis field is left blank if there is no selected aggregation or metric for a particular column.\\\\n\\\\n\\\\n\\\\nproperty dataset None | List[str]\\\\nOne or more dataset schema fields that are targeted by this assertion.\\\\nThis field is expected to be provided if the assertion scope is DATASETCOLUMN.\\\\n\\\\n\\\\n\\\\nproperty logic None | Dict[str, str]\\\\nNative parameters required for the assertion.\\\\n\\\\n\\\\n\\\\nproperty nativeType str | AssertionStdOperatorClass\\\\nStandardized assertion operator\\\\n\\\\n\\\\n\\\\nproperty parameters str | DatasetAssertionScopeClass\\\\nScope of the Assertion. What part of the dataset does this assertion apply to?\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DatasetAssertionScopeClass\\\\nBases Aspect\\\\nDataset deprecation status\\\\nDeprecated! This aspect is deprecated in favor of the more-general-purpose \\\\u2018Deprecation\\\\u2019 aspect.\\\\n\\\\nParameters None | str\\\\nThe corpuser URN which will be credited for modifying this deprecation content.\\\\n\\\\n\\\\n\\\\nproperty decommissionTime bool\\\\nWhether the dataset is deprecated by owner.\\\\n\\\\n\\\\n\\\\nproperty note DictWrapper\\\\nFor non-urn based foregin keys.\\\\n\\\\nParameters List[str]\\\\nList of fields in hosting(current) SchemaMetadata that conform a foreign key. List can contain a single entry or multiple entries if several entries in hosting schema conform a foreign key in a single parent dataset.\\\\n\\\\n\\\\n\\\\nproperty parentDataset str\\\\nSchemaField@fieldPath that uniquely identify field in parent dataset that this field references.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DatasetFieldMappingClass(created, transformation, sourceFields, destinationField)\\\\nBases\\\\n\\\\ncreated (AuditStampClass)\\\\ntransformation (Union[str, TransformationTypeClass, UDFTransformerClass])\\\\nsourceFields (List[str])\\\\ndestinationField (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty created str\\\\nDestination field which is derived from source fields\\\\n\\\\n\\\\n\\\\nproperty sourceFields str | TransformationTypeClass | UDFTransformerClass\\\\nTransfomration function between the fields involved\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DatasetFieldProfileClass(fieldPath, uniqueCount=None, uniqueProportion=None, nullCount=None, nullProportion=None, min=None, max=None, mean=None, median=None, stdev=None, quantiles=None, distinctValueFrequencies=None, histogram=None, sampleValues=None)\\\\nBases\\\\n\\\\nfieldPath (str)\\\\nuniqueCount (Optional[int])\\\\nuniqueProportion (Optional[float])\\\\nnullCount (Optional[int])\\\\nnullProportion (Optional[float])\\\\nmin (Optional[str])\\\\nmax (Optional[str])\\\\nmean (Optional[str])\\\\nmedian (Optional[str])\\\\nstdev (Optional[str])\\\\nquantiles (Optional[List[QuantileClass]])\\\\ndistinctValueFrequencies (Optional[List[ValueFrequencyClass]])\\\\nhistogram (Optional[HistogramClass])\\\\nsampleValues (Optional[List[str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty distinctValueFrequencies str\\\\n\\\\n\\\\n\\\\nproperty histogram None | str\\\\n\\\\n\\\\n\\\\nproperty mean None | str\\\\n\\\\n\\\\n\\\\nproperty min None | int\\\\n\\\\n\\\\n\\\\nproperty nullProportion None | List[QuantileClass]\\\\n\\\\n\\\\n\\\\nproperty sampleValues None | str\\\\n\\\\n\\\\n\\\\nproperty uniqueCount None | float\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DatasetFieldUsageCountsClass(fieldPath, count)\\\\nBases\\\\n\\\\nfieldPath (str)\\\\ncount (int)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty count str\\\\nThe name of the field.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DatasetFilterClass(type, sql=None)\\\\nBases\\\\n\\\\ntype (Union[str, DatasetFilterTypeClass])\\\\nsql (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty sql str | DatasetFilterTypeClass\\\\nHow the partition will be represented in this model.\\\\nIn the future, we\\\\u2019ll likely add support for more structured\\\\npredicates.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DatasetFilterTypeClass\\\\nBases Aspect\\\\nKey for a Dataset\\\\n\\\\nParameters str\\\\nUnique guid for dataset\\\\n\\\\n\\\\n\\\\nproperty origin str\\\\nData platform urn associated with the dataset\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DatasetLineageTypeClass\\\\nBases Aspect\\\\nStats corresponding to datasets\\\\n\\\\nParameters ClassVar[str] = \'timeseries\'\\\\n\\\\n\\\\n\\\\nproperty columnCount None | TimeWindowSizeClass\\\\nGranularity of the event if applicable\\\\n\\\\n\\\\n\\\\nproperty fieldProfiles None | str\\\\nThe optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value.\\\\n\\\\n\\\\n\\\\nproperty partitionSpec None | int\\\\nThe total number of rows\\\\n\\\\n\\\\n\\\\nproperty sizeInBytes int\\\\nThe event timestamp field as epoch at UTC in milli seconds.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DatasetPropertiesClass(customProperties=None, externalUrl=None, name=None, qualifiedName=None, description=None, uri=None, created=None, lastModified=None, tags=None)\\\\nBases\\\\n\\\\ncustomProperties (Optional[Dict[str, str]])\\\\nexternalUrl (Optional[str])\\\\nname (Optional[str])\\\\nqualifiedName (Optional[str])\\\\ndescription (Optional[str])\\\\nuri (Optional[str])\\\\ncreated (Optional[TimeStampClass])\\\\nlastModified (Optional[TimeStampClass])\\\\ntags (Optional[List[str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty created Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty description None | str\\\\nURL where the reference exist\\\\n\\\\n\\\\n\\\\nproperty lastModified None | str\\\\nDisplay name of the Dataset\\\\n\\\\n\\\\n\\\\nproperty qualifiedName List[str]\\\\n[Legacy] Unstructured tags for the dataset. Structured tags can be applied via the GlobalTags aspect.\\\\nThis is now deprecated.\\\\n\\\\n\\\\n\\\\nproperty uri\\\\nThe abstracted URI such as hdfs\\\\n\\\\nType DictWrapper\\\\nA metadata snapshot for a specific dataset entity.\\\\n\\\\nParameters List[DatasetKeyClass | DatasetPropertiesClass | EditableDatasetPropertiesClass | DatasetDeprecationClass | DatasetUpstreamLineageClass | UpstreamLineageClass | InstitutionalMemoryClass | OwnershipClass | StatusClass | SchemaMetadataClass | EditableSchemaMetadataClass | GlobalTagsClass | GlossaryTermsClass | BrowsePathsClass | DataPlatformInstanceClass | ViewPropertiesClass | BrowsePathsV2Class]\\\\nThe list of metadata aspects associated with the dataset. Depending on the use case, this can either be all, or a selection, of supported aspects.\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nFine Grained upstream lineage for fields in a dataset\\\\n\\\\nParameters List[DatasetFieldMappingClass]\\\\nUpstream to downstream field level lineage mappings\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DatasetUsageStatisticsClass(timestampMillis, eventGranularity=None, partitionSpec=None, messageId=None, uniqueUserCount=None, totalSqlQueries=None, topSqlQueries=None, userCounts=None, fieldCounts=None)\\\\nBases\\\\n\\\\ntimestampMillis (int)\\\\neventGranularity (Optional[TimeWindowSizeClass])\\\\npartitionSpec (Optional[PartitionSpecClass])\\\\nmessageId (Optional[str])\\\\nuniqueUserCount (Optional[int])\\\\ntotalSqlQueries (Optional[int])\\\\ntopSqlQueries (Optional[List[str]])\\\\nuserCounts (Optional[List[DatasetUserUsageCountsClass]])\\\\nfieldCounts (Optional[List[DatasetFieldUsageCountsClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nASPECTTYPE None | TimeWindowSizeClass\\\\nGranularity of the event if applicable\\\\n\\\\n\\\\n\\\\nproperty fieldCounts None | str\\\\nThe optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value.\\\\n\\\\n\\\\n\\\\nproperty partitionSpec int\\\\nThe event timestamp field as epoch at UTC in milli seconds.\\\\n\\\\n\\\\n\\\\nproperty topSqlQueries None | int\\\\nTotal SQL query count\\\\n\\\\n\\\\n\\\\nproperty uniqueUserCount None | List[DatasetUserUsageCountsClass]\\\\nUsers within this bucket, with frequency counts\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DatasetUserUsageCountsClass(user, count, userEmail=None)\\\\nBases\\\\n\\\\nuser (str)\\\\ncount (int)\\\\nuserEmail (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty count str\\\\nThe unique id of the user.\\\\n\\\\n\\\\n\\\\nproperty userEmail DictWrapper\\\\nDate field type.\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DeploymentStatusClass\\\\nBases Aspect\\\\nDeprecation status of an entity\\\\n\\\\nParameters str\\\\nThe user URN which will be credited for modifying this deprecation content.\\\\n\\\\n\\\\n\\\\nproperty decommissionTime bool\\\\nWhether the entity is deprecated.\\\\n\\\\n\\\\n\\\\nproperty note None | str\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DisplayPropertiesClass(colorHex=None, icon=None)\\\\nBases\\\\n\\\\ncolorHex (Optional[str])\\\\nicon (Optional[IconPropertiesClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty colorHex None | IconPropertiesClass\\\\nThe icon associated with the entity\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DocPropagationFeatureSettingsClass(enabled, config=None, configVersion=None, columnPropagationEnabled=None)\\\\nBases\\\\n\\\\nenabled (bool)\\\\nconfig (Optional[str])\\\\nconfigVersion (Optional[str])\\\\ncolumnPropagationEnabled (Optional[bool])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty columnPropagationEnabled None | str\\\\nThe configuration for the feature, in JSON format.\\\\n\\\\n\\\\n\\\\nproperty configVersion bool\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DocumentationAssociationClass(documentation, attribution=None)\\\\nBases\\\\n\\\\ndocumentation (str)\\\\nattribution (Optional[MetadataAttributionClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty attribution str\\\\nDescription of this asset\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DocumentationClass(documentations)\\\\nBases\\\\nThe first entity that uses this aspect is Schema Field. We will expand this\\\\n\\\\naspect to other entities eventually.\\\\n\\\\n\\\\nThe values of the documentation are not currently searchable. This will bechanged once this aspect develops opinion on which documentation entry is\\\\nthe authoritative one.\\\\n\\\\nEnsuring that there is only one documentation per source is a businessrule that is not enforced by the aspect yet. This will currently be enforced by the\\\\napplication that uses this aspect. We will eventually enforce this rule in\\\\nthe aspect using AspectMutators.\\\\n\\\\n\\\\n\\\\nParameters List[DocumentationAssociationClass]\\\\nDocumentations associated with this asset. We could be receiving docs from different sources\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DomainKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id Aspect\\\\nInformation about a Domain\\\\n\\\\nParameters None | AuditStampClass\\\\nCreated Audit stamp\\\\n\\\\n\\\\n\\\\nproperty customProperties None | str\\\\nDescription of the Domain\\\\n\\\\n\\\\n\\\\nproperty name None | str\\\\nParent of the domain\\\\n\\\\nType Aspect\\\\nLinks from an Asset to its Domains\\\\n\\\\nParameters List[str]\\\\nThe Domains attached to an Asset\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.DynamicFormAssignmentClass(filter)\\\\nBases\\\\nfilter (FilterClass)\\\\n\\\\n\\\\n\\\\n\\\\nproperty filter object\\\\n\\\\n\\\\nNN = \'NN\'\\\\n\\\\n\\\\n\\\\nNONE = \'NONE\'\\\\n\\\\n\\\\n\\\\nONEN = \'ONEN\'\\\\n\\\\n\\\\n\\\\nONEONE = \'ONEONE\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ERModelRelationshipKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id Aspect\\\\nProperties associated with a ERModelRelationship\\\\n\\\\nParameters str | ERModelRelationshipCardinalityClass\\\\nCardinality of the relationship\\\\n\\\\n\\\\n\\\\nproperty created Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty destination None | AuditStampClass\\\\nA timestamp documenting when the asset was last modified in the source Data Platform (not on DataHub)\\\\n\\\\n\\\\n\\\\nproperty name List[RelationshipFieldMappingClass]\\\\nERModelRelationFieldMapping (in future we can make it an array)\\\\n\\\\n\\\\n\\\\nproperty source DictWrapper\\\\nA common structure to represent all edges to entities when used inside aspects as collections\\\\nThis ensures that all edges have common structure around audit-stamps and will support PATCH, time-travel automatically.\\\\n\\\\nParameters None | AuditStampClass\\\\nAudit stamp containing who created this relationship edge and when\\\\n\\\\n\\\\n\\\\nproperty destinationUrn None | AuditStampClass\\\\nAudit stamp containing who last modified this relationship edge and when\\\\n\\\\n\\\\n\\\\nproperty properties None | str\\\\nUrn of the source of this relationship edge.\\\\nIf not specified, assumed to be the entity that this aspect belongs to.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.EditableChartPropertiesClass(created=None, lastModified=None, deleted=None, description=None)\\\\nBases\\\\n\\\\ncreated (Optional[AuditStampClass])\\\\nlastModified (Optional[AuditStampClass])\\\\ndeleted (Optional[AuditStampClass])\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty created None | AuditStampClass\\\\nAn AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.\\\\n\\\\n\\\\n\\\\nproperty description AuditStampClass\\\\nAn AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.EditableContainerPropertiesClass(description=None)\\\\nBases\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\nproperty description Aspect\\\\nStores editable changes made to properties. This separates changes made from\\\\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines\\\\n\\\\nParameters AuditStampClass\\\\nAn AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.\\\\n\\\\n\\\\n\\\\nproperty deleted None | str\\\\nEdited documentation of the dashboard\\\\n\\\\n\\\\n\\\\nproperty lastModified Aspect\\\\nStores editable changes made to properties. This separates changes made from\\\\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines\\\\n\\\\nParameters AuditStampClass\\\\nAn AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.\\\\n\\\\n\\\\n\\\\nproperty deleted None | str\\\\nEdited documentation of the data flow\\\\n\\\\n\\\\n\\\\nproperty lastModified Aspect\\\\nStores editable changes made to properties. This separates changes made from\\\\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines\\\\n\\\\nParameters AuditStampClass\\\\nAn AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.\\\\n\\\\n\\\\n\\\\nproperty deleted None | str\\\\nEdited documentation of the data job\\\\n\\\\n\\\\n\\\\nproperty lastModified Aspect\\\\nEditableDatasetProperties stores editable changes made to dataset properties. This separates changes made from\\\\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines\\\\n\\\\nParameters AuditStampClass\\\\nAn AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.\\\\n\\\\n\\\\n\\\\nproperty deleted None | str\\\\nDocumentation of the dataset\\\\n\\\\n\\\\n\\\\nproperty lastModified None | str\\\\nEditable display name of the Dataset\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.EditableERModelRelationshipPropertiesClass(created=None, lastModified=None, deleted=None, description=None, name=None)\\\\nBases\\\\n\\\\ncreated (Optional[AuditStampClass])\\\\nlastModified (Optional[AuditStampClass])\\\\ndeleted (Optional[AuditStampClass])\\\\ndescription (Optional[str])\\\\nname (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty created None | AuditStampClass\\\\nAn AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.\\\\n\\\\n\\\\n\\\\nproperty description AuditStampClass\\\\nAn AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.\\\\n\\\\n\\\\n\\\\nproperty name Aspect\\\\nProperties associated with a MLFeature editable from the UI\\\\n\\\\nParameters None | str\\\\nDocumentation of the MLFeature\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.EditableMLFeatureTablePropertiesClass(description=None)\\\\nBases\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\nproperty description Aspect\\\\nProperties associated with an ML Model Group editable from the UI\\\\n\\\\nParameters None | str\\\\nDocumentation of the ml model group\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.EditableMLModelPropertiesClass(description=None)\\\\nBases\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\nproperty description Aspect\\\\nProperties associated with a MLPrimaryKey editable from the UI\\\\n\\\\nParameters None | str\\\\nDocumentation of the MLPrimaryKey\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.EditableNotebookPropertiesClass(created=None, lastModified=None, deleted=None, description=None)\\\\nBases This is IN BETA version\\\\n\\\\nParameters AuditStampClass\\\\nAn AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.\\\\n\\\\n\\\\n\\\\nproperty deleted None | str\\\\nEdited documentation of the Notebook\\\\n\\\\n\\\\n\\\\nproperty lastModified DictWrapper\\\\nSchemaField to describe metadata related to dataset schema.\\\\n\\\\nParameters None | str\\\\nDescription\\\\n\\\\n\\\\n\\\\nproperty fieldPath None | GlobalTagsClass\\\\nTags associated with the field\\\\n\\\\n\\\\n\\\\nproperty glossaryTerms Aspect\\\\nEditableSchemaMetadata stores editable changes made to schema metadata. This separates changes made from\\\\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines.\\\\n\\\\nParameters AuditStampClass\\\\nAn AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.\\\\n\\\\n\\\\n\\\\nproperty deleted List[EditableSchemaFieldInfoClass]\\\\nClient provided a list of fields from document schema.\\\\n\\\\n\\\\n\\\\nproperty lastModified Aspect\\\\nInformation regarding rendering an embed for an asset.\\\\n\\\\nParameters None | str\\\\nAn embed URL to be rendered inside of an iframe.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.EntityChangeEventClass(entityType, entityUrn, category, operation, auditStamp, version, modifier=None, parameters=None)\\\\nBases\\\\n\\\\nentityType (str)\\\\nentityUrn (str)\\\\ncategory (str)\\\\noperation (str)\\\\nauditStamp (AuditStampClass)\\\\nversion (int)\\\\nmodifier (Optional[str])\\\\nparameters (Optional[ParametersClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty auditStamp str\\\\nThe category type (TAG, GLOSSARYTERM, OWNERSHIP, TECHNICALSCHEMA, etc). This is used to determine what the rest of the schema will look like.\\\\n\\\\n\\\\n\\\\nproperty entityType str\\\\nThe urn of the entity which was affected.\\\\n\\\\n\\\\n\\\\nproperty modifier str\\\\nThe operation type. This is used to determine what the rest of the schema will look like.\\\\n\\\\n\\\\n\\\\nproperty parameters int\\\\nThe version of the event type, incremented in integers.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.EntityTypeInfoClass(qualifiedName, displayName=None, description=None)\\\\nBases\\\\n\\\\nqualifiedName (str)\\\\ndisplayName (Optional[str])\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty description\\\\nA description for the Entity Type\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty displayName str\\\\nThe fully qualified name for the entity type, which usually consists of a namespace\\\\nplus an identifier or name, e.g. datahub.dataset\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.EntityTypeKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id DictWrapper\\\\nEnum field type.\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.EspressoSchemaClass(documentSchema, tableSchema)\\\\nBases\\\\n\\\\ndocumentSchema (str)\\\\ntableSchema (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty documentSchema str\\\\nThe espresso table schema definition.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.EthicalConsiderationsClass(data=None, humanLife=None, mitigations=None, risksAndHarms=None, useCases=None)\\\\nBases\\\\n\\\\ndata (Optional[List[str]])\\\\nhumanLife (Optional[List[str]])\\\\nmitigations (Optional[List[str]])\\\\nrisksAndHarms (Optional[List[str]])\\\\nuseCases (Optional[List[str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty data None | List[str]\\\\nIs the MLModel intended to inform decisions about matters central to human life or flourishing - e.g., health or safety? Or could it be used in such a way?\\\\n\\\\n\\\\n\\\\nproperty mitigations None | List[str]\\\\nWhat risks may be present in MLModel usage? Try to identify the potential recipients, likelihood, and magnitude of harms. If these cannot be determined, note that they were considered but remain unknown.\\\\n\\\\n\\\\n\\\\nproperty useCases Aspect\\\\nAll referenced datasets would ideally point to any set of documents that provide visibility into the source and composition of the dataset.\\\\n\\\\nParameters List[BaseDataClass]\\\\nDetails on the dataset(s) used for the quantitative analyses in the MLModel\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ExecutionRequestInputClass(task, args, executorId, source, requestedAt, actorUrn=None)\\\\nBases Determine who is responsible for emitting execution request success or failure. Executor?\\\\n\\\\nParameters None | str\\\\nUrn of the actor who created this execution request.\\\\n\\\\n\\\\n\\\\nproperty args str\\\\nspecify a specific executor to route the request to. If none is provided, a \\\\u201cdefault\\\\u201d executor is used.\\\\n\\\\nType int\\\\nTime at which the execution request input was created\\\\n\\\\n\\\\n\\\\nproperty source str\\\\nThe name of the task to execute, for example RUNINGEST\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ExecutionRequestKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id Aspect\\\\nThe result of an execution request\\\\n\\\\nParameters None | int\\\\nDuration in milliseconds\\\\n\\\\n\\\\n\\\\nproperty report None | int\\\\nTime at which the request was created\\\\n\\\\n\\\\n\\\\nproperty status None | StructuredExecutionReportClass\\\\nA structured report if available.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ExecutionRequestSignalClass(signal, createdAt, executorId=None)\\\\nBases\\\\n\\\\nsignal (str)\\\\ncreatedAt (AuditStampClass)\\\\nexecutorId (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty createdAt None | str\\\\nspecify a specific executor to route the request to. If none is provided, a \\\\u201cdefault\\\\u201d executor is used.\\\\n\\\\nType str\\\\nThe signal to issue, e.g. KILL\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ExecutionRequestSourceClass(type, ingestionSource=None)\\\\nBases\\\\n\\\\ntype (str)\\\\ningestionSource (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty ingestionSource str\\\\nThe type of the execution request source, e.g. INGESTIONSOURCE\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FabricTypeClass\\\\nBases DictWrapper\\\\nAttributes defining a Field Assertion.\\\\n\\\\nParameters str\\\\nThe entity targeted by this Field check.\\\\n\\\\n\\\\n\\\\nproperty fieldMetricAssertion None | FieldValuesAssertionClass\\\\nThe definition of an assertion that validates individual values of a field / column for a set of rows.\\\\nThis type of assertion verifies that each column value meets a particular requirement.\\\\n\\\\n\\\\n\\\\nproperty filter str | FieldAssertionTypeClass\\\\nThe type of the field assertion being monitored.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FieldAssertionTypeClass\\\\nBases DictWrapper\\\\nInformation about the status of a particular prompt for a specific schema field\\\\non an entity.\\\\n\\\\nParameters str\\\\nThe field path on a schema field.\\\\n\\\\n\\\\n\\\\nproperty lastModified DictWrapper\\\\nAttributes defining a field metric assertion, which asserts an expectation against\\\\na common metric derived from the set of field / column values, for example\\\\n\\\\nfield (SchemaFieldSpecClass)\\\\nmetric (Union[str, FieldMetricTypeClass])\\\\noperator (Union[str, AssertionStdOperatorClass])\\\\nparameters (Optional[AssertionStdParametersClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty field str | FieldMetricTypeClass\\\\nThe specific metric to assert against. This is the value that\\\\nwill be obtained by applying a standard operation, such as an aggregation,\\\\nto the selected field.\\\\n\\\\n\\\\n\\\\nproperty operator None | AssertionStdParametersClass\\\\nStandard parameters required for the assertion. e.g. minvalue, maxvalue, value, columns\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FieldMetricTypeClass\\\\nBases DictWrapper\\\\nDefinition of a transform applied to the values of a column / field.\\\\nNote that the applicability of a field transform ultimately depends on the native type\\\\nof the field / column.\\\\nModel has single field to permit extension.\\\\n\\\\nParameters str | FieldTransformTypeClass\\\\nThe type of the field transform, e.g. the transformation\\\\nfunction / operator to apply.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FieldTransformTypeClass\\\\nBases DictWrapper\\\\nRecords field-level usage counts for a given resource\\\\n\\\\nParameters int\\\\n\\\\n\\\\n\\\\nproperty fieldName DictWrapper\\\\nAttributes defining a field values assertion, which asserts that the values for a field / column\\\\nof a dataset / table matches a set of expectations.\\\\nIn other words, this type of assertion acts as a semantic constraint applied to fields for a specific column.\\\\nTODO Determine whether we need an \\\\u201coperator\\\\u201d that can be applied to the field.\\\\n\\\\nParameters bool\\\\nWhether to ignore or allow nulls when running the values assertion. (i.e.\\\\nconsider only non-null values) using operators OTHER than the ISNULL operator.\\\\nDefaults to true, allowing null values.\\\\n\\\\n\\\\n\\\\nproperty failThreshold SchemaFieldSpecClass\\\\nThe field under evaluation\\\\n\\\\n\\\\n\\\\nproperty operator None | AssertionStdParametersClass\\\\nStandard parameters required for the assertion. e.g. minvalue, maxvalue, value, columns\\\\n\\\\n\\\\n\\\\nproperty transform DictWrapper\\\\n\\\\nParameters str | FieldValuesFailThresholdTypeClass\\\\nThe type of failure threshold. Either based on the number\\\\nof column values (rows) that fail the expectations, or the percentage\\\\nof the total rows under consideration.\\\\n\\\\n\\\\n\\\\nproperty value object\\\\n\\\\n\\\\nCOUNT = \'COUNT\'\\\\n\\\\n\\\\n\\\\nPERCENTAGE = \'PERCENTAGE\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FilterClass(or=None, criteria=None)\\\\nBases\\\\n\\\\nor (Optional[List[ConjunctiveCriterionClass]])\\\\ncriteria (Optional[List[CriterionClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty criteria None | List[ConjunctiveCriterionClass]\\\\nA list of disjunctive criterion for the filter. (or operation to combine filters)\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FineGrainedLineageClass(upstreamType, downstreamType, upstreams=None, downstreams=None, transformOperation=None, confidenceScore=None, query=None)\\\\nBases\\\\n\\\\nupstreamType (Union[str, FineGrainedLineageUpstreamTypeClass])\\\\ndownstreamType (Union[str, FineGrainedLineageDownstreamTypeClass])\\\\nupstreams (Optional[List[str]])\\\\ndownstreams (Optional[List[str]])\\\\ntransformOperation (Optional[str])\\\\nconfidenceScore (Optional[float])\\\\nquery (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty confidenceScore str | FineGrainedLineageDownstreamTypeClass\\\\nThe type of downstream field(s)\\\\n\\\\n\\\\n\\\\nproperty downstreams None | str\\\\nThe query that was used to generate this lineage.\\\\nPresent only if the lineage was generated from a detected query.\\\\n\\\\n\\\\n\\\\nproperty transformOperation str | FineGrainedLineageUpstreamTypeClass\\\\nThe type of upstream entity\\\\n\\\\n\\\\n\\\\nproperty upstreams object\\\\nThe type of downstream field(s) in a fine-grained lineage\\\\n\\\\n\\\\nFIELD = \'FIELD\'\\\\n\\\\n\\\\n\\\\nFIELDSET = \'FIELDSET\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FineGrainedLineageUpstreamTypeClass\\\\nBases DictWrapper\\\\nAttributes defining a relative fixed interval SLA schedule.\\\\n\\\\nParameters int\\\\nHow many units. Defaults to 1.\\\\n\\\\n\\\\n\\\\nproperty unit DictWrapper\\\\nFixed field type.\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ForeignKeyConstraintClass(name, foreignFields, sourceFields, foreignDataset)\\\\nBases\\\\n\\\\nname (str)\\\\nforeignFields (List[str])\\\\nsourceFields (List[str])\\\\nforeignDataset (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty foreignDataset List[str]\\\\nFields the constraint maps to on the foreign dataset\\\\n\\\\n\\\\n\\\\nproperty name List[str]\\\\nFields the constraint maps to on the source dataset\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ForeignKeySpecClass(foreignKey)\\\\nBases\\\\nforeignKey (Union[DatasetFieldForeignKeyClass, UrnForeignKeyClass])\\\\n\\\\n\\\\n\\\\n\\\\nproperty foreignKey DictWrapper\\\\n\\\\nParameters None | List[str]\\\\nSpecific set of groups that are targeted by this form assignment.\\\\n\\\\nType bool\\\\nWhether the form should be assigned to the owners of assets that it is applied to.\\\\nThis is the default.\\\\n\\\\n\\\\n\\\\nproperty users\\\\nOptional\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FormAssociationClass(urn, incompletePrompts=None, completedPrompts=None)\\\\nBases\\\\n\\\\nurn (str)\\\\nincompletePrompts (Optional[List[FormPromptAssociationClass]])\\\\ncompletedPrompts (Optional[List[FormPromptAssociationClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty completedPrompts List[FormPromptAssociationClass]\\\\nA list of prompts that are not yet complete for this form.\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nInformation about a form to help with filling out metadata on entities.\\\\n\\\\nParameters FormActorAssignmentClass\\\\nWho the form is assigned to, e.g. who should see the form when visiting the entity page or governance center\\\\n\\\\n\\\\n\\\\nproperty description str\\\\nDisplay name of the form\\\\n\\\\n\\\\n\\\\nproperty prompts str | FormTypeClass\\\\nThe type of this form\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FormKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id DictWrapper\\\\nInformation about the status of a particular prompt.\\\\nNote that this is where we can add additional information about individual responses\\\\n\\\\nid (str)\\\\nlastModified (AuditStampClass)\\\\nfieldAssociations (Optional[FormPromptFieldAssociationsClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty fieldAssociations str\\\\nThe id for the prompt. This must be GLOBALLY UNIQUE.\\\\n\\\\n\\\\n\\\\nproperty lastModified DictWrapper\\\\nA prompt to present to the user to encourage filling out metadata\\\\n\\\\nParameters None | str\\\\nThe description of this prompt\\\\n\\\\n\\\\n\\\\nproperty id bool\\\\nWhether the prompt is required to be completed, in order for the form to be marked as complete.\\\\n\\\\n\\\\n\\\\nproperty structuredPropertyParams str\\\\nThe title of this prompt\\\\n\\\\n\\\\n\\\\nproperty type DictWrapper\\\\nInformation about the field-level prompt associations on a top-level prompt association.\\\\n\\\\nParameters None | List[FieldFormPromptAssociationClass]\\\\nA list of field-level prompt associations that are not yet complete for this form.\\\\n\\\\n\\\\n\\\\nproperty incompleteFieldPrompts object\\\\n\\\\n\\\\nFIELDSSTRUCTUREDPROPERTY = \'FIELDSSTRUCTUREDPROPERTY\'\\\\n\\\\n\\\\n\\\\nSTRUCTUREDPROPERTY = \'STRUCTUREDPROPERTY\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FormTypeClass\\\\nBases DictWrapper\\\\nAn association between a verification and an entity that has been granted\\\\nvia completion of one or more forms of type \\\\u2018VERIFICATION\\\\u2019.\\\\n\\\\nParameters str\\\\nThe urn of the form that granted this verification.\\\\n\\\\n\\\\n\\\\nproperty lastModified Aspect\\\\nForms that are assigned to this entity to be filled out\\\\n\\\\nParameters List[FormAssociationClass]\\\\nAll complete forms assigned to the entity.\\\\n\\\\n\\\\n\\\\nproperty incompleteForms List[FormVerificationAssociationClass]\\\\nVerifications that have been applied to the entity via completed forms.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FreshnessAssertionInfoClass(type, entity, schedule, filter=None)\\\\nBases\\\\n\\\\ntype (Union[str, FreshnessAssertionTypeClass])\\\\nentity (str)\\\\nschedule (FreshnessAssertionScheduleClass)\\\\nfilter (Optional[DatasetFilterClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity None | DatasetFilterClass\\\\nA definition of the specific filters that should be applied, when performing monitoring.\\\\nIf not provided, there is no filter, and the full table is under consideration.\\\\n\\\\n\\\\n\\\\nproperty schedule str | FreshnessAssertionTypeClass\\\\nThe type of the freshness assertion being monitored.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FreshnessAssertionScheduleClass(type, cron=None, fixedInterval=None)\\\\nBases\\\\n\\\\ntype (Union[str, FreshnessAssertionScheduleTypeClass])\\\\ncron (Optional[FreshnessCronScheduleClass])\\\\nfixedInterval (Optional[FixedIntervalScheduleClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty cron None | FixedIntervalScheduleClass\\\\nA fixed interval schedule. This field is required when type is FIXEDINTERVAL.\\\\n\\\\n\\\\n\\\\nproperty type object\\\\n\\\\n\\\\nCRON = \'CRON\'\\\\n\\\\n\\\\n\\\\nFIXEDINTERVAL = \'FIXEDINTERVAL\'\\\\n\\\\n\\\\n\\\\nSINCETHELASTCHECK = \'SINCETHELASTCHECK\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FreshnessAssertionTypeClass\\\\nBases DictWrapper\\\\nA contract pertaining to the operational SLAs of a physical data asset\\\\n\\\\nParameters str\\\\nThe assertion representing the SLA contract.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.FreshnessCronScheduleClass(cron, timezone, windowStartOffsetMs=None)\\\\nBases\\\\n\\\\ncron (str)\\\\ntimezone (str)\\\\nwindowStartOffsetMs (Optional[int])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty cron str\\\\nTimezone in which the cron interval applies, e.g. America/Los Angeles\\\\n\\\\n\\\\n\\\\nproperty windowStartOffsetMs DictWrapper\\\\nGeneric record structure for serializing an Aspect\\\\n\\\\nParameters str\\\\nThe content type, which represents the fashion in which the aspect was serialized.\\\\nThe only type currently supported is application/json.\\\\n\\\\n\\\\n\\\\nproperty value DictWrapper\\\\nGeneric payload record structure for serializing a Platform Event.\\\\n\\\\nParameters str\\\\nThe content type, which represents the fashion in which the event was serialized.\\\\nThe only type currently supported is application/json.\\\\n\\\\n\\\\n\\\\nproperty value Aspect\\\\nDataHub Global platform settings. Careful - these should not be modified by the outside world!\\\\n\\\\nParameters DocPropagationFeatureSettingsClass | None\\\\nSettings related to the documentation propagation feature\\\\n\\\\n\\\\n\\\\nproperty sso None | GlobalViewsSettingsClass\\\\nSettings related to the Views Feature\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.GlobalSettingsKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty idglobalSettings\\\\nId for the settings. There should be only 1 global settings urn\\\\n\\\\nType Aspect\\\\nTag aspect used for applying tags to an entity\\\\n\\\\nParameters List[TagAssociationClass]\\\\nTags associated with a given entity\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.GlobalViewsSettingsClass(defaultView=None)\\\\nBases\\\\ndefaultView (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\nproperty defaultView Aspect\\\\nProperties associated with a GlossaryNode\\\\n\\\\nParameters Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty definition None | str\\\\nOptional id for the GlossaryNode\\\\n\\\\n\\\\n\\\\nproperty name None | str\\\\nParent node of the glossary term\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.GlossaryNodeKeyClass(name)\\\\nBases\\\\nname (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty name DictWrapper\\\\nA metadata snapshot for a specific GlossaryNode entity.\\\\n\\\\nParameters List[GlossaryNodeKeyClass | GlossaryNodeInfoClass | OwnershipClass | StatusClass]\\\\nThe list of metadata aspects associated with the GlossaryNode. Depending on the use case, this can either be all, or a selection, of supported aspects.\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nHas A / Is A lineage information about a glossary Term reporting the lineage\\\\n\\\\nParameters None | List[str]\\\\nThe relationship Has A with glossary term\\\\n\\\\n\\\\n\\\\nproperty isRelatedTerms None | List[str]\\\\nThe relationship isRelatedTo with glossary term\\\\n\\\\n\\\\n\\\\nproperty values DictWrapper\\\\nProperties of an applied glossary term.\\\\n\\\\nParameters None | str\\\\nThe user URN which will be credited for adding associating this term to the entity\\\\n\\\\n\\\\n\\\\nproperty attribution None | str\\\\nAdditional context about the association\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nProperties associated with a GlossaryTerm\\\\n\\\\nParameters Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty definition None | str\\\\nOptional id for the term\\\\n\\\\n\\\\n\\\\nproperty name None | str\\\\nParent node of the glossary term\\\\n\\\\n\\\\n\\\\nproperty rawSchema None | str\\\\nExternal Reference to the business-term\\\\n\\\\n\\\\n\\\\nproperty sourceUrl\\\\nThe abstracted URL such as https\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty termSource Aspect\\\\nKey for a GlossaryTerm\\\\n\\\\nParameters str\\\\nThe term name, which serves as a unique id\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.GlossaryTermSnapshotClass(urn, aspects)\\\\nBases\\\\n\\\\nurn (str)\\\\naspects (List[Union[GlossaryTermKeyClass, GlossaryTermInfoClass, OwnershipClass, StatusClass, BrowsePathsClass, GlossaryRelatedTermsClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty aspects str\\\\nURN for the entity the metadata snapshot is associated with.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.GlossaryTermsClass(terms, auditStamp)\\\\nBases\\\\n\\\\nterms (List[GlossaryTermAssociationClass])\\\\nauditStamp (AuditStampClass)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty auditStamp List[GlossaryTermAssociationClass]\\\\nThe related business terms\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.GroupMembershipClass(groups)\\\\nBases\\\\ngroups (List[str])\\\\n\\\\n\\\\n\\\\n\\\\nproperty groups DictWrapper\\\\n\\\\nParameters List[str]\\\\n\\\\n\\\\n\\\\nproperty heights Aspect\\\\nIceberg Catalog metadata associated with an Iceberg table/view\\\\n\\\\nParameters None | str\\\\nWhen Datahub is the REST Catalog for an Iceberg Table, stores the current metadata pointer.\\\\nIf the Iceberg table is managed by an external catalog, the metadata pointer is not set.\\\\n\\\\n\\\\n\\\\nproperty view Aspect\\\\nAn Iceberg warehouse location and credentails whose read/writes are governed by datahub catalog.\\\\n\\\\nParameters str\\\\nclientId to be used to authenticate with storage hosting this warehouse\\\\n\\\\n\\\\n\\\\nproperty clientSecret str\\\\nPath of the root for the backing store of the tables in the warehouse.\\\\n\\\\n\\\\n\\\\nproperty env str\\\\nregion where the warehouse is located.\\\\n\\\\n\\\\n\\\\nproperty role None | int\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.IconLibraryClass\\\\nBases DictWrapper\\\\nProperties describing an icon associated with an entity\\\\n\\\\nParameters str | IconLibraryClass\\\\ne.g. Antd, Material, etc\\\\n\\\\nType str\\\\nThe name of the icon\\\\n\\\\n\\\\n\\\\nproperty style Aspect\\\\nInformation about an incident raised on an asset.\\\\n\\\\nParameters AuditStampClass\\\\nThe time at which the request was initially created\\\\n\\\\n\\\\n\\\\nproperty customType None | str\\\\nOptional description associated with the incident\\\\n\\\\n\\\\n\\\\nproperty entities int | None\\\\nA numeric severity or priority for the incident. On the UI we will translate this into something easy to understand.\\\\n\\\\n\\\\n\\\\nproperty source IncidentStatusClass\\\\nThe current status of an incident, i.e. active or inactive.\\\\n\\\\n\\\\n\\\\nproperty title str | IncidentTypeClass\\\\nThe type of incident\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.IncidentKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id Aspect\\\\nInformation about the source of an incident raised on an asset.\\\\n\\\\nParameters None | str\\\\nReference to an URN related to the source of an incident.\\\\n\\\\n\\\\n\\\\nproperty type object\\\\n\\\\n\\\\nASSERTIONFAILURE = \'ASSERTIONFAILURE\'\\\\n\\\\n\\\\n\\\\nMANUAL = \'MANUAL\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.IncidentStateClass\\\\nBases DictWrapper\\\\nInformation about an incident raised on an asset\\\\n\\\\nParameters AuditStampClass\\\\nThe time at which the request was initially created\\\\n\\\\n\\\\n\\\\nproperty message str | IncidentStateClass\\\\nThe state of the incident\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.IncidentSummaryDetailsClass(urn, type, createdAt, resolvedAt=None, priority=None)\\\\nBases\\\\n\\\\nurn (str)\\\\ntype (str)\\\\ncreatedAt (int)\\\\nresolvedAt (Optional[int])\\\\npriority (Optional[int])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty createdAt None | int\\\\nThe priority of the incident\\\\n\\\\n\\\\n\\\\nproperty resolvedAt str\\\\nThe type of an incident\\\\n\\\\n\\\\n\\\\nproperty urn object\\\\nA type of asset incident\\\\n\\\\n\\\\nCUSTOM = \'CUSTOM\'\\\\n\\\\n\\\\n\\\\nDATASCHEMA = \'DATASCHEMA\'\\\\n\\\\n\\\\n\\\\nFIELD = \'FIELD\'\\\\n\\\\n\\\\n\\\\nFRESHNESS = \'FRESHNESS\'\\\\n\\\\n\\\\n\\\\nOPERATIONAL = \'OPERATIONAL\'\\\\n\\\\n\\\\n\\\\nSQL = \'SQL\'\\\\n\\\\n\\\\n\\\\nVOLUME = \'VOLUME\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.IncidentsSummaryClass(resolvedIncidents=None, activeIncidents=None, resolvedIncidentDetails=None, activeIncidentDetails=None)\\\\nBases\\\\n\\\\nresolvedIncidents (Optional[List[str]])\\\\nactiveIncidents (Optional[List[str]])\\\\nresolvedIncidentDetails (Optional[List[IncidentSummaryDetailsClass]])\\\\nactiveIncidentDetails (Optional[List[IncidentSummaryDetailsClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty activeIncidentDetails List[str]\\\\nActive incidents for an asset\\\\nDeprecated! Use the richer activeIncidentsDetails instead.\\\\n\\\\n\\\\n\\\\nproperty resolvedIncidentDetails List[str]\\\\nResolved incidents for an asset\\\\nDeprecated! Use the richer resolvedIncidentsDetails instead.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.IncrementingSegmentFieldTransformerClass(type, nativeType=None)\\\\nBases\\\\n\\\\ntype (Union[str, IncrementingSegmentFieldTransformerTypeClass])\\\\nnativeType (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty nativeType str | IncrementingSegmentFieldTransformerTypeClass\\\\nA \\\\u2018standard\\\\u2019 transformer type. Note that not all source systems will support all operators.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.IncrementingSegmentFieldTransformerTypeClass\\\\nBases DictWrapper\\\\nAttributes defining an INCREMENTINGSEGMENTROWCOUNTCHANGE volume assertion.\\\\n\\\\nParameters str | AssertionStdOperatorClass\\\\nThe operator you\\\\u2019d like to apply to the row count value\\\\nNote that only numeric operators are valid inputs AssertionStdParametersClass\\\\nThe parameters you\\\\u2019d like to provide as input to the operator.\\\\nNote that only numeric parameter types are valid inputs IncrementingSegmentSpecClass\\\\nA specification of how the \\\\u2018segment\\\\u2019 can be derived using a column and an optional transformer function.\\\\n\\\\n\\\\n\\\\nproperty type\\\\nThe type of the value used to evaluate the assertion\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.IncrementingSegmentRowCountTotalClass(segment, operator, parameters)\\\\nBases\\\\n\\\\nsegment (IncrementingSegmentSpecClass)\\\\noperator (Union[str, AssertionStdOperatorClass])\\\\nparameters (AssertionStdParametersClass)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty operator\\\\nGREATERTHAN, GREATERTHANOREQUALTO, EQUALTO, LESSTHAN, LESSTHANOREQUALTO,\\\\nBETWEEN.\\\\n\\\\n\\\\n\\\\nproperty parameters NUMBER.\\\\n\\\\n\\\\n\\\\nproperty segment DictWrapper\\\\nCore attributes required to identify an incrementing segment in a table. This type is mainly useful\\\\nfor tables that constantly increase with new rows being added on a particular cadence (e.g. fact or event tables)\\\\nAn incrementing segment represents a logical chunk of data which is INSERTED\\\\ninto a dataset on a regular interval, along with the presence of a constantly-incrementing column\\\\nvalue such as an event time, date partition, or last modified column.\\\\nAn incrementing segment is principally identified by 2 key attributes combined\\\\n\\\\nfield (SchemaFieldSpecClass)\\\\ntransformer (Optional[IncrementingSegmentFieldTransformerClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty field None | IncrementingSegmentFieldTransformerClass\\\\nOptional transformer function to apply to the field in order to obtain the final segment or bucket identifier.\\\\nIf not provided, then no operator will be applied to the field. (identity function)\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.IngestionCheckpointStateClass(formatVersion, serde, payload=None)\\\\nBases\\\\n\\\\nformatVersion (str)\\\\nserde (str)\\\\npayload (Optional[bytes])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty formatVersion None | bytes\\\\nOpaque blob of the state representation.\\\\n\\\\n\\\\n\\\\nproperty serde DictWrapper\\\\nInformation about a field a chart or dashboard references\\\\n\\\\nParameters None | SchemaFieldClass\\\\nCopied version of the referenced schema field object for indexing purposes\\\\n\\\\n\\\\n\\\\nproperty schemaFieldUrn Aspect\\\\nInformation about the fields a chart or dashboard references\\\\n\\\\nParameters List[InputFieldClass]\\\\nList of fields being referenced\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.InstitutionalMemoryClass(elements)\\\\nBases\\\\nelements (List[InstitutionalMemoryMetadataClass])\\\\n\\\\n\\\\n\\\\n\\\\nproperty elements DictWrapper\\\\nMetadata corresponding to a record of institutional memory.\\\\n\\\\nParameters AuditStampClass\\\\nAudit stamp associated with creation of this record\\\\n\\\\n\\\\n\\\\nproperty description str\\\\nLink to an engineering design document or a wiki page.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.IntendedUseClass(primaryUses=None, primaryUsers=None, outOfScopeUses=None)\\\\nBases\\\\n\\\\nprimaryUses (Optional[List[str]])\\\\nprimaryUsers (Optional[List[Union[str, IntendedUserTypeClass]]])\\\\noutOfScopeUses (Optional[List[str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty outOfScopeUses None | List[str | IntendedUserTypeClass]\\\\nPrimary Intended Users - For example, was the MLModel developed for entertainment purposes, for hobbyists, or enterprise solutions?\\\\n\\\\n\\\\n\\\\nproperty primaryUses object\\\\n\\\\n\\\\nENTERPRISE = \'ENTERPRISE\'\\\\n\\\\n\\\\n\\\\nENTERTAINMENT = \'ENTERTAINMENT\'\\\\n\\\\n\\\\n\\\\nHOBBY = \'HOBBY\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.InviteTokenClass(token, role=None)\\\\nBases\\\\n\\\\ntoken (str)\\\\nrole (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty role str\\\\nThe encrypted invite token.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.InviteTokenKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id object\\\\nJob statuses\\\\n\\\\n\\\\nCOMPLETED = \'COMPLETED\'\\\\n\\\\n\\\\n\\\\nFAILED = \'FAILED\'\\\\n\\\\n\\\\n\\\\nINPROGRESS = \'INPROGRESS\'\\\\n\\\\n\\\\n\\\\nSKIPPED = \'SKIPPED\'\\\\n\\\\n\\\\n\\\\nSTARTING = \'STARTING\'\\\\n\\\\n\\\\n\\\\nSTOPPED = \'STOPPED\'\\\\n\\\\n\\\\n\\\\nSTOPPING = \'STOPPING\'\\\\n\\\\n\\\\n\\\\nUNKNOWN = \'UNKNOWN\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.KafkaAuditHeaderClass(time, server, appName, messageId, instance=None, auditVersion=None, fabricUrn=None, clusterConnectionString=None)\\\\nBases\\\\n\\\\ntime (int)\\\\nserver (str)\\\\nappName (str)\\\\nmessageId (bytes)\\\\ninstance (Optional[str])\\\\nauditVersion (Optional[int])\\\\nfabricUrn (Optional[str])\\\\nclusterConnectionString (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty appName None | int\\\\nif the schema has an outer KafkaAuditHeader, use the outer audit header timestamp for bucketing; else if the EventHeader has an inner KafkaAuditHeader use that inner audit header\\\\u2019s timestamp for bucketing\\\\n\\\\nType None | str\\\\nThis is a String that the client uses to establish some kind of connection with the Kafka cluster. The exact format of it depends on specific versions of clients and brokers. This information could potentially identify the fabric and cluster with which the client is producing to or consuming from.\\\\n\\\\n\\\\n\\\\nproperty fabricUrn. See go/fabric.\\\\n\\\\nType\\\\nli\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty instance bytes\\\\nA unique identifier for the message\\\\n\\\\n\\\\n\\\\nproperty server int\\\\nThe time at which the event was emitted into kafka.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.KafkaSchemaClass(documentSchema, documentSchemaType=None, keySchema=None, keySchemaType=None)\\\\nBases\\\\n\\\\ndocumentSchema (str)\\\\ndocumentSchemaType (Optional[str])\\\\nkeySchema (Optional[str])\\\\nkeySchemaType (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty documentSchema None | str\\\\nThe native kafka document schema type. This can be AVRO/PROTOBUF/JSON.\\\\n\\\\n\\\\n\\\\nproperty keySchema None | str\\\\nThe native kafka key schema type. This can be AVRO/PROTOBUF/JSON.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.KeyValueSchemaClass(keySchema, valueSchema)\\\\nBases\\\\n\\\\nkeySchema (str)\\\\nvalueSchema (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty keySchema str\\\\nThe raw schema for the value in the key-value store.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLFeatureDataTypeClass\\\\nBases Aspect\\\\nKey for an MLFeature\\\\n\\\\nParameters str\\\\nNamespace for the feature\\\\n\\\\n\\\\n\\\\nproperty name Aspect\\\\nProperties associated with a MLFeature\\\\n\\\\nParameters Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty dataType None | str\\\\nDocumentation of the MLFeature\\\\n\\\\n\\\\n\\\\nproperty sources None | VersionTagClass\\\\nVersion of the MLFeature\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLFeatureSnapshotClass(urn, aspects)\\\\nBases\\\\n\\\\nurn (str)\\\\naspects (List[Union[MLFeatureKeyClass, MLFeaturePropertiesClass, OwnershipClass, InstitutionalMemoryClass, StatusClass, DeprecationClass, BrowsePathsClass, GlobalTagsClass, DataPlatformInstanceClass, BrowsePathsV2Class]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty aspects str\\\\nURN for the entity the metadata snapshot is associated with.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLFeatureTableKeyClass(platform, name)\\\\nBases\\\\n\\\\nplatform (str)\\\\nname (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty name str\\\\nData platform urn associated with the feature table\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLFeatureTablePropertiesClass(customProperties=None, description=None, mlFeatures=None, mlPrimaryKeys=None)\\\\nBases\\\\n\\\\ncustomProperties (Optional[Dict[str, str]])\\\\ndescription (Optional[str])\\\\nmlFeatures (Optional[List[str]])\\\\nmlPrimaryKeys (Optional[List[str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty customProperties None | str\\\\nDocumentation of the MLFeatureTable\\\\n\\\\n\\\\n\\\\nproperty mlFeatures None | List[str]\\\\nList of primary keys in the feature table (if multiple, assumed to act as a composite key)\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLFeatureTableSnapshotClass(urn, aspects)\\\\nBases\\\\n\\\\nurn (str)\\\\naspects (List[Union[MLFeatureTableKeyClass, MLFeatureTablePropertiesClass, OwnershipClass, InstitutionalMemoryClass, StatusClass, DeprecationClass, BrowsePathsClass, GlobalTagsClass, DataPlatformInstanceClass, BrowsePathsV2Class]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty aspects str\\\\nURN for the entity the metadata snapshot is associated with.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLHyperParamClass(name, description=None, value=None, createdAt=None)\\\\nBases\\\\n\\\\nname (str)\\\\ndescription (Optional[str])\\\\nvalue (Optional[str])\\\\ncreatedAt (Optional[int])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty createdAt None | str\\\\nDocumentation of the MLHyperParam\\\\n\\\\n\\\\n\\\\nproperty name None | str\\\\nThe value of the MLHyperParam\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLMetricClass(name, description=None, value=None, createdAt=None)\\\\nBases\\\\n\\\\nname (str)\\\\ndescription (Optional[str])\\\\nvalue (Optional[str])\\\\ncreatedAt (Optional[int])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty createdAt None | str\\\\nDocumentation of the mlMetric\\\\n\\\\n\\\\n\\\\nproperty name None | str\\\\nThe value of the mlMetric\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLModelDeploymentKeyClass(platform, name, origin)\\\\nBases\\\\n\\\\nplatform (str)\\\\nname (str)\\\\norigin (Union[str, FabricTypeClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty name str | FabricTypeClass\\\\nFabric type where model Deployment belongs to or where it was generated\\\\n\\\\n\\\\n\\\\nproperty platform Aspect\\\\nProperties associated with an ML Model Deployment\\\\n\\\\nParameters None | int\\\\nDate when the MLModelDeployment was developed\\\\n\\\\n\\\\n\\\\nproperty customProperties None | str\\\\nDocumentation of the MLModelDeployment\\\\n\\\\n\\\\n\\\\nproperty externalUrl None | str | DeploymentStatusClass\\\\nStatus of the deployment\\\\n\\\\n\\\\n\\\\nproperty version DictWrapper\\\\n\\\\nParameters List[MLModelDeploymentKeyClass | MLModelDeploymentPropertiesClass | OwnershipClass | StatusClass | DeprecationClass | GlobalTagsClass | DataPlatformInstanceClass]\\\\nThe list of metadata aspects associated with the MLModelDeployment. Depending on the use case, this can either be all, or a selection, of supported aspects.\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nPrompts which affect the performance of the MLModel\\\\n\\\\nParameters None | List[MLModelFactorsClass]\\\\nWhich factors are being reported, and why were these chosen?\\\\n\\\\n\\\\n\\\\nproperty relevantFactors DictWrapper\\\\nFactors affecting the performance of the MLModel.\\\\n\\\\nParameters None | List[str]\\\\nA further factor affecting MLModel performance is the environment in which it is deployed.\\\\n\\\\n\\\\n\\\\nproperty groups None | List[str]\\\\nThe performance of a MLModel can vary depending on what instruments were used to capture the input to the MLModel.\\\\nFor example, a face detection model may perform differently depending on the camera\\\\u2019s hardware and software,\\\\nincluding lens, image stabilization, high dynamic range techniques, and background blurring for portrait mode.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLModelGroupKeyClass(platform, name, origin)\\\\nBases\\\\n\\\\nplatform (str)\\\\nname (str)\\\\norigin (Union[str, FabricTypeClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty name str | FabricTypeClass\\\\nFabric type where model group belongs to or where it was generated\\\\n\\\\n\\\\n\\\\nproperty platform Aspect\\\\nProperties associated with an ML Model Group\\\\n\\\\nParameters None | TimeStampClass\\\\nTime and Actor who created the MLModelGroup\\\\n\\\\n\\\\n\\\\nproperty createdAt Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty description None | List[str]\\\\nList of jobs or process instances (if any) that use the model or group.\\\\n\\\\n\\\\n\\\\nproperty lastModified None | str\\\\nDisplay name of the MLModelGroup\\\\n\\\\n\\\\n\\\\nproperty trainingJobs None | VersionTagClass\\\\nVersion of the MLModelGroup\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLModelGroupSnapshotClass(urn, aspects)\\\\nBases\\\\n\\\\nurn (str)\\\\naspects (List[Union[MLModelGroupKeyClass, MLModelGroupPropertiesClass, OwnershipClass, StatusClass, DeprecationClass, BrowsePathsClass, GlobalTagsClass, DataPlatformInstanceClass, BrowsePathsV2Class]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty aspects str\\\\nURN for the entity the metadata snapshot is associated with.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLModelKeyClass(platform, name, origin)\\\\nBases\\\\n\\\\nplatform (str)\\\\nname (str)\\\\norigin (Union[str, FabricTypeClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty name str | FabricTypeClass\\\\nFabric type where model belongs to or where it was generated\\\\n\\\\n\\\\n\\\\nproperty platform Aspect\\\\nProperties associated with a ML Model\\\\n\\\\nParameters None | TimeStampClass\\\\nAudit stamp containing who created this and when\\\\n\\\\n\\\\n\\\\nproperty customProperties None | int\\\\nDate when the MLModel was developed\\\\n\\\\n\\\\n\\\\nproperty deployments None | str\\\\nDocumentation of the MLModel\\\\n\\\\n\\\\n\\\\nproperty downstreamJobs None | str\\\\nURL where the reference exist\\\\n\\\\n\\\\n\\\\nproperty groups None | Dict[str, str | int | float | bool]\\\\nHyper Parameters of the MLModel\\\\nNOTE None | List[MLHyperParamClass]\\\\nHyperparameters of the MLModel\\\\n\\\\n\\\\n\\\\nproperty lastModified None | List[str]\\\\nList of features used for MLModel training\\\\n\\\\n\\\\n\\\\nproperty name None | List[MLMetricClass]\\\\nMetrics of the MLModel used in production\\\\n\\\\n\\\\n\\\\nproperty tags None | List[str]\\\\nList of jobs or process instances (if any) used to train the model or group. Visible in Lineage. Note that ML Models can also be specified as the output of a specific Data Process Instances (runs) via the DataProcessInstanceOutputs aspect.\\\\n\\\\n\\\\n\\\\nproperty trainingMetrics None | str\\\\nType of Algorithm or MLModel such as whether it is a Naive Bayes classifier, Convolutional Neural Network, etc\\\\n\\\\n\\\\n\\\\nproperty version DictWrapper\\\\nMLModel Snapshot entity details.\\\\n\\\\nParameters List[MLModelKeyClass | OwnershipClass | MLModelPropertiesClass | IntendedUseClass | MLModelFactorPromptsClass | MetricsClass | EvaluationDataClass | TrainingDataClass | QuantitativeAnalysesClass | EthicalConsiderationsClass | CaveatsAndRecommendationsClass | InstitutionalMemoryClass | SourceCodeClass | StatusClass | CostClass | DeprecationClass | BrowsePathsClass | GlobalTagsClass | DataPlatformInstanceClass | BrowsePathsV2Class]\\\\nThe list of metadata aspects associated with the MLModel. Depending on the use case, this can either be all, or a selection, of supported aspects.\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nKey for an MLPrimaryKey\\\\n\\\\nParameters str\\\\nNamespace for the primary key\\\\n\\\\n\\\\n\\\\nproperty name Aspect\\\\nProperties associated with a MLPrimaryKey\\\\n\\\\nParameters Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty dataType None | str\\\\nDocumentation of the MLPrimaryKey\\\\n\\\\n\\\\n\\\\nproperty sources None | VersionTagClass\\\\nVersion of the MLPrimaryKey\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLPrimaryKeySnapshotClass(urn, aspects)\\\\nBases\\\\n\\\\nurn (str)\\\\naspects (List[Union[MLPrimaryKeyKeyClass, MLPrimaryKeyPropertiesClass, OwnershipClass, InstitutionalMemoryClass, StatusClass, DeprecationClass, GlobalTagsClass, DataPlatformInstanceClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty aspects str\\\\nURN for the entity the metadata snapshot is associated with.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MLTrainingRunPropertiesClass(customProperties=None, externalUrl=None, id=None, outputUrls=None, hyperParams=None, trainingMetrics=None)\\\\nBases\\\\n\\\\ncustomProperties (Optional[Dict[str, str]])\\\\nexternalUrl (Optional[str])\\\\nid (Optional[str])\\\\noutputUrls (Optional[List[str]])\\\\nhyperParams (Optional[List[MLHyperParamClass]])\\\\ntrainingMetrics (Optional[List[MLMetricClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty customProperties None | str\\\\nURL where the reference exist\\\\n\\\\n\\\\n\\\\nproperty hyperParams None | str\\\\nRun Id of the ML Training Run\\\\n\\\\n\\\\n\\\\nproperty outputUrls None | List[MLMetricClass]\\\\nMetrics of the ML Training Run\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MapTypeClass(keyType=None, valueType=None)\\\\nBases\\\\n\\\\nkeyType (Optional[str])\\\\nvalueType (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty keyType None | str\\\\nType of the value in a map\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MediaClass(type, location)\\\\nBases\\\\n\\\\ntype (Union[str, MediaTypeClass])\\\\nlocation (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty location str | MediaTypeClass\\\\nType of content the Media is storing, e.g. image, video, etc.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MediaTypeClass\\\\nBases DictWrapper\\\\nInformation about who, why, and how this metadata was applied\\\\n\\\\nParameters str\\\\nThe entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\\\neither be a user (in case of UI edits) or the datahub system for automation.\\\\n\\\\n\\\\n\\\\nproperty source Dict[str, str]\\\\nThe details associated with why this metadata was applied. For example, this could include\\\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc.\\\\n\\\\n\\\\n\\\\nproperty time DictWrapper\\\\nKafka event for proposing a metadata change for an entity. A corresponding MetadataAuditEvent is emitted when the change is accepted and committed, otherwise a FailedMetadataChangeEvent will be emitted instead.\\\\n\\\\nParameters None | KafkaAuditHeaderClass\\\\nKafka audit header. See go/kafkaauditheader for more info.\\\\n\\\\n\\\\n\\\\nproperty proposedDelta ChartSnapshotClass | CorpGroupSnapshotClass | CorpUserSnapshotClass | DashboardSnapshotClass | DataFlowSnapshotClass | DataJobSnapshotClass | DatasetSnapshotClass | DataProcessSnapshotClass | DataPlatformSnapshotClass | MLModelSnapshotClass | MLPrimaryKeySnapshotClass | MLFeatureSnapshotClass | MLFeatureTableSnapshotClass | MLModelDeploymentSnapshotClass | MLModelGroupSnapshotClass | TagSnapshotClass | GlossaryTermSnapshotClass | GlossaryNodeSnapshotClass | DataHubPolicySnapshotClass | SchemaFieldSnapshotClass | DataHubRetentionSnapshotClass\\\\nSnapshot of the proposed metadata change. Include only the aspects affected by the change in the snapshot.\\\\n\\\\n\\\\n\\\\nproperty systemMetadata DictWrapper\\\\nKafka event for capturing update made to an entity\\\\u2019s metadata.\\\\n\\\\nParameters None | GenericAspectClass\\\\nThe value of the new aspect.\\\\n\\\\n\\\\n\\\\nproperty aspectName This is only valid for CREATE, UPSERT, and DELETE operations.\\\\n\\\\n\\\\n\\\\nproperty auditHeader str | ChangeTypeClass\\\\nType of change being proposed\\\\n\\\\n\\\\n\\\\nproperty created None | GenericAspectClass\\\\nKey aspect of the entity being written\\\\n\\\\n\\\\n\\\\nproperty entityType None | str\\\\nUrn of the entity being written\\\\n\\\\n\\\\n\\\\nproperty headers None | GenericAspectClass\\\\nThe previous value of the aspect that has changed.\\\\n\\\\n\\\\n\\\\nproperty previousSystemMetadata None | SystemMetadataClass\\\\nSystem properties that one might want to attach to an event\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MetadataChangeProposalClass(entityType, changeType, auditHeader=None, entityUrn=None, entityKeyAspect=None, aspectName=None, aspect=None, systemMetadata=None, headers=None)\\\\nBases\\\\n\\\\nentityType (str)\\\\nchangeType (Union[str, ChangeTypeClass])\\\\nauditHeader (Optional[KafkaAuditHeaderClass])\\\\nentityUrn (Optional[str])\\\\nentityKeyAspect (Optional[GenericAspectClass])\\\\naspectName (Optional[str])\\\\naspect (Optional[GenericAspectClass])\\\\nsystemMetadata (Optional[SystemMetadataClass])\\\\nheaders (Optional[Dict[str, str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty aspect None | str\\\\nAspect of the entity being written to\\\\nNot filling this out implies that the writer wants to affect the entire entity\\\\nNote None | KafkaAuditHeaderClass\\\\nKafka audit header. Currently remains unused in the open source.\\\\n\\\\n\\\\n\\\\nproperty changeType None | GenericAspectClass\\\\nKey aspect of the entity being written\\\\n\\\\n\\\\n\\\\nproperty entityType None | str\\\\nUrn of the entity being written\\\\n\\\\n\\\\n\\\\nproperty headers None | SystemMetadataClass\\\\nSystem properties that one might want to attach to an event\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MetricsClass(performanceMeasures=None, decisionThreshold=None)\\\\nBases\\\\n\\\\nperformanceMeasures (Optional[List[str]])\\\\ndecisionThreshold (Optional[List[str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty decisionThreshold None | List[str]\\\\nMeasures of MLModel performance\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.MySqlDDLClass(tableSchema)\\\\nBases\\\\ntableSchema (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty tableSchema Aspect\\\\nCarries information about the native CorpGroups a user is in.\\\\n\\\\nParameters List[str]\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.NotebookCellClass(type, textCell=None, queryCell=None, chartCell=None)\\\\nBases\\\\n\\\\ntype (Union[str, NotebookCellTypeClass])\\\\ntextCell (Optional[TextCellClass])\\\\nqueryCell (Optional[QueryCellClass])\\\\nchartCell (Optional[ChartCellClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty chartCell None | QueryCellClass\\\\nThe query cell content. The will be non-null only when all other cell field is null.\\\\n\\\\n\\\\n\\\\nproperty textCell str | NotebookCellTypeClass\\\\nThe type of this Notebook cell\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.NotebookCellTypeClass\\\\nBases Aspect\\\\nContent in a Notebook\\\\nNote\\\\ncells (Optional[List[NotebookCellClass]])\\\\n\\\\n\\\\n\\\\n\\\\nproperty cells Aspect\\\\nInformation about a Notebook\\\\nNote\\\\n\\\\ntitle (str)\\\\nchangeAuditStamps (ChangeAuditStampsClass)\\\\ncustomProperties (Optional[Dict[str, str]])\\\\nexternalUrl (Optional[str])\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty changeAuditStamps Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty description None | str\\\\nURL where the reference exist\\\\n\\\\n\\\\n\\\\nproperty title Aspect\\\\nKey for a Notebook\\\\n\\\\nParameters str\\\\nUnique id for the Notebook. This id should be globally unique for a Notebook tool even when there are multiple deployments of it. As an example, Notebook URL could be used here for QueryBook such as \\\\u2018querybook.com/notebook/773\\\\u2019\\\\n\\\\n\\\\n\\\\nproperty notebookTool DictWrapper\\\\nNull field type.\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.NumberTypeClass\\\\nBases long, integer, short, etc..\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.OidcSettingsClass(enabled, clientId, clientSecret, discoveryUri, userNameClaim=None, userNameClaimRegex=None, scope=None, clientAuthenticationMethod=None, jitProvisioningEnabled=None, preProvisioningRequired=None, extractGroupsEnabled=None, groupsClaim=None, responseType=None, responseMode=None, useNonce=None, readTimeout=None, extractJwtAccessTokenClaims=None, preferredJwsAlgorithm=None, preferredJwsAlgorithm2=None)\\\\nBases\\\\n\\\\nenabled (bool)\\\\nclientId (str)\\\\nclientSecret (str)\\\\ndiscoveryUri (str)\\\\nuserNameClaim (Optional[str])\\\\nuserNameClaimRegex (Optional[str])\\\\nscope (Optional[str])\\\\nclientAuthenticationMethod (Optional[str])\\\\njitProvisioningEnabled (Optional[bool])\\\\npreProvisioningRequired (Optional[bool])\\\\nextractGroupsEnabled (Optional[bool])\\\\ngroupsClaim (Optional[str])\\\\nresponseType (Optional[str])\\\\nresponseMode (Optional[str])\\\\nuseNonce (Optional[bool])\\\\nreadTimeout (Optional[int])\\\\nextractJwtAccessTokenClaims (Optional[bool])\\\\npreferredJwsAlgorithm (Optional[str])\\\\npreferredJwsAlgorithm2 (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty clientAuthenticationMethod\\\\nADVANCED. Which authentication method to use to pass credentials (clientId and clientSecret) to the token endpoint\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty clientId str\\\\nUnique client secret issued by the identity provider.\\\\n\\\\n\\\\n\\\\nproperty discoveryUri bool\\\\nWhether OIDC SSO is enabled.\\\\n\\\\n\\\\n\\\\nproperty extractGroupsEnabled None | bool\\\\nADVANCED. Whether to extract claims from JWT access token.  Defaults to false.\\\\n\\\\n\\\\n\\\\nproperty groupsClaim None | bool\\\\nADVANCED. Whether DataHub users should be provisioned on login if they do not exist. Defaults to true.\\\\n\\\\n\\\\n\\\\nproperty preProvisioningRequired None | str\\\\nADVANCED. Which jws algorithm to use. Unused.\\\\n\\\\n\\\\n\\\\nproperty preferredJwsAlgorithm2 None | int\\\\nADVANCED. Read timeout.\\\\n\\\\n\\\\n\\\\nproperty responseMode None | str\\\\nADVANCED. Response type.\\\\n\\\\n\\\\n\\\\nproperty scope None | bool\\\\nADVANCED. Use Nonce.\\\\n\\\\n\\\\n\\\\nproperty userNameClaim None | str\\\\nADVANCED. TThe regex used to parse the DataHub username from the user name claim. Defaults to (.*) (all).\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.OperationClass(timestampMillis, operationType, lastUpdatedTimestamp, eventGranularity=None, partitionSpec=None, messageId=None, actor=None, customOperationType=None, numAffectedRows=None, affectedDatasets=None, sourceType=None, customProperties=None)\\\\nBases\\\\n\\\\ntimestampMillis (int)\\\\noperationType (Union[str, OperationTypeClass])\\\\nlastUpdatedTimestamp (int)\\\\neventGranularity (Optional[TimeWindowSizeClass])\\\\npartitionSpec (Optional[PartitionSpecClass])\\\\nmessageId (Optional[str])\\\\nactor (Optional[str])\\\\ncustomOperationType (Optional[str])\\\\nnumAffectedRows (Optional[int])\\\\naffectedDatasets (Optional[List[str]])\\\\nsourceType (Union[None, str, OperationSourceTypeClass])\\\\ncustomProperties (Optional[Dict[str, str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nASPECTTYPE None | str\\\\nActor who issued this operation.\\\\n\\\\n\\\\n\\\\nproperty affectedDatasets None | str\\\\nA custom type of operation. Required if operationType is CUSTOM.\\\\n\\\\n\\\\n\\\\nproperty customProperties None | TimeWindowSizeClass\\\\nGranularity of the event if applicable\\\\n\\\\n\\\\n\\\\nproperty lastUpdatedTimestamp None | str\\\\nThe optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value.\\\\n\\\\n\\\\n\\\\nproperty numAffectedRows str | OperationTypeClass\\\\nOperation type of change.\\\\n\\\\n\\\\n\\\\nproperty partitionSpec None | str | OperationSourceTypeClass\\\\nSource Type\\\\n\\\\n\\\\n\\\\nproperty timestampMillis object\\\\nThe source of an operation\\\\n\\\\n\\\\nDATAPLATFORM = \'DATAPLATFORM\'\\\\n\\\\n\\\\n\\\\nDATAPROCESS = \'DATAPROCESS\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.OperationTypeClass\\\\nBases DictWrapper\\\\nSchema holder for oracle data definition language that describes an oracle table.\\\\n\\\\nParameters str\\\\nThe native schema in the dataset\\\\u2019s platform. This is a human readable (json blob) table schema.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.OrcSchemaClass(schema)\\\\nBases\\\\nschema (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty schema Aspect\\\\nCarries information about where an entity originated from.\\\\n\\\\nParameters None | str\\\\nOnly populated if type is EXTERNAL. The externalType of the entity, such as the name of the identity provider.\\\\n\\\\n\\\\n\\\\nproperty type object\\\\nEnum to define where an entity originated from.\\\\n\\\\n\\\\nEXTERNAL = \'EXTERNAL\'\\\\n\\\\n\\\\n\\\\nNATIVE = \'NATIVE\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.OtherSchemaClass(rawSchema)\\\\nBases\\\\nrawSchema (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty rawSchema DictWrapper\\\\nOwnership information\\\\n\\\\nParameters str\\\\ncorpuserligroupname, and urnmultiProduct only corpuser is currently supported in the frontend.)\\\\n\\\\nType\\\\nli\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty source str | OwnershipTypeClass\\\\nThe type of the ownership\\\\n\\\\n\\\\n\\\\nproperty typeUrn Aspect\\\\nOwnership information of an entity.\\\\n\\\\nParameters AuditStampClass\\\\nAudit stamp containing who last modified the record and when. A value of 0 in the time field indicates missing data.\\\\n\\\\n\\\\n\\\\nproperty ownerTypes List[OwnerClass]\\\\nList of owners of the entity.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.OwnershipSourceClass(type, url=None)\\\\nBases\\\\n\\\\ntype (Union[str, OwnershipSourceTypeClass])\\\\nurl (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty type None | str\\\\nA reference URL for the source\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.OwnershipSourceTypeClass\\\\nBases object\\\\nAsset owner types\\\\n\\\\n\\\\nBUSINESSOWNER = \'BUSINESSOWNER\'\\\\n\\\\n\\\\n\\\\nCONSUMER = \'CONSUMER\'\\\\n\\\\n\\\\n\\\\nCUSTOM = \'CUSTOM\'\\\\n\\\\n\\\\n\\\\nDATAOWNER = \'DATAOWNER\'\\\\n\\\\n\\\\n\\\\nDATASTEWARD = \'DATASTEWARD\'\\\\n\\\\n\\\\n\\\\nDELEGATE = \'DELEGATE\'\\\\n\\\\n\\\\n\\\\nDEVELOPER = \'DEVELOPER\'\\\\n\\\\n\\\\n\\\\nNONE = \'NONE\'\\\\n\\\\n\\\\n\\\\nPRODUCER = \'PRODUCER\'\\\\n\\\\n\\\\n\\\\nSTAKEHOLDER = \'STAKEHOLDER\'\\\\n\\\\n\\\\n\\\\nTECHNICALOWNER = \'TECHNICALOWNER\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.OwnershipTypeInfoClass(name, created, lastModified, description=None)\\\\nBases\\\\n\\\\nname (str)\\\\ncreated (AuditStampClass)\\\\nlastModified (AuditStampClass)\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty created None | str\\\\nDescription of the Ownership Type\\\\n\\\\n\\\\n\\\\nproperty lastModified str\\\\nDisplay name of the Ownership Type\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.OwnershipTypeKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id DictWrapper\\\\nArbitrary key-value parameters for an Entity Change Event. (any record).\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.PartitionSpecClass(partition, timePartition=None, type=None)\\\\nBases\\\\n\\\\npartition (str)\\\\ntimePartition (Optional[TimeWindowClass])\\\\ntype (Union[str, PartitionTypeClass, None])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty partition None | TimeWindowClass\\\\nTime window of the partition, if we are able to extract it from the partition key.\\\\n\\\\n\\\\n\\\\nproperty type DictWrapper\\\\nDefines how the data is partitioned\\\\n\\\\nParameters None | int\\\\nThe created time for a given partition.\\\\n\\\\n\\\\n\\\\nproperty lastModifiedTime str\\\\nA unique id / value for the partition for which statistics were collected,\\\\ngenerated by applying the key definition to a given row.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.PartitionTypeClass\\\\nBases Aspect\\\\nDefines how the data is partitioned for Data Lake tables (e.g. Hive, S3, Iceberg, Delta, Hudi, etc).\\\\n\\\\nParameters None | PartitionSummaryClass\\\\nThe maximum partition as ordered\\\\n\\\\n\\\\n\\\\nproperty minPartition DictWrapper\\\\nA DataHub Platform Event.\\\\n\\\\nParameters PlatformEventHeaderClass\\\\nHeader information stored with the event.\\\\n\\\\n\\\\n\\\\nproperty name GenericPayloadClass\\\\nThe event payload.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.PlatformEventHeaderClass(timestampMillis)\\\\nBases\\\\ntimestampMillis (int)\\\\n\\\\n\\\\n\\\\n\\\\nproperty timestampMillis Aspect\\\\nPlatform Resource Info.\\\\nThese entities are for miscelaneous data that is used in non-core parts of the system.\\\\nFor instance, if we want to persist &amp; retrieve data from auxiliary integrations such as Slack or Microsoft Teams.\\\\n\\\\nParameters str\\\\nThe primary key for this platform resource.\\\\ne.g. for a slack member this would be the memberID.\\\\nprimary keys specified here don\\\\u2019t need to include any additional specificity for the\\\\n\\\\ndataPlatform\\\\n\\\\nThe @PlatformResourceKey is supposed to represent that\\\\n\\\\n\\\\n\\\\nproperty resourceType conversation, user, grant, etc.\\\\nResource types are indexed for ease of access.\\\\ne.g. Get me all platform resources of type user for the platform looker\\\\n\\\\n\\\\n\\\\nproperty secondaryKeys None | SerializedValueClass\\\\nThe serialized value of this platform resource item.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.PlatformResourceKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty idslack-instanceuser-info\\\\nor guid(slack, slack-instance, slack-user-id, user-info) etc.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.PlatformTypeClass\\\\nBases object\\\\nThe matching condition in a filter criterion\\\\n\\\\n\\\\nEQUALS = \'EQUALS\'\\\\n\\\\n\\\\n\\\\nSTARTSWITH = \'STARTSWITH\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.PolicyMatchCriterionClass(field, values, condition=None)\\\\nBases\\\\n\\\\nfield (str)\\\\nvalues (List[str])\\\\ncondition (Union[str, PolicyMatchConditionClass, None])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty condition str\\\\nThe name of the field that the criterion refers to\\\\n\\\\n\\\\n\\\\nproperty values DictWrapper\\\\nThe filter for specifying the resource or actor to apply privileges to\\\\n\\\\nParameters List[PolicyMatchCriterionClass]\\\\nA list of criteria to apply conjunctively (so all criteria must pass)\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.PostContentClass(title, type, description=None, link=None, media=None)\\\\nBases\\\\n\\\\ntitle (str)\\\\ntype (Union[str, PostContentTypeClass])\\\\ndescription (Optional[str])\\\\nlink (Optional[str])\\\\nmedia (Optional[MediaClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty description None | str\\\\nOptional link that the post is associated with.\\\\n\\\\n\\\\n\\\\nproperty media str\\\\nTitle of the post.\\\\n\\\\n\\\\n\\\\nproperty type object\\\\nEnum defining the type of content held in a Post.\\\\n\\\\n\\\\nLINK = \'LINK\'\\\\n\\\\n\\\\n\\\\nTEXT = \'TEXT\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.PostInfoClass(type, content, created, lastModified, auditStamp=None, target=None)\\\\nBases\\\\n\\\\ntype (Union[str, PostTypeClass])\\\\ncontent (PostContentClass)\\\\ncreated (int)\\\\nlastModified (int)\\\\nauditStamp (Optional[AuditStampClass])\\\\ntarget (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty auditStamp PostContentClass\\\\nContent stored in the post.\\\\n\\\\n\\\\n\\\\nproperty created int\\\\nThe time at which the post was last modified\\\\n\\\\n\\\\n\\\\nproperty target str | PostTypeClass\\\\nType of the Post.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.PostKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id object\\\\nEnum defining types of Posts.\\\\n\\\\n\\\\nENTITYANNOUNCEMENT = \'ENTITYANNOUNCEMENT\'\\\\n\\\\n\\\\n\\\\nHOMEPAGEANNOUNCEMENT = \'HOMEPAGEANNOUNCEMENT\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.PrestoDDLClass(rawSchema)\\\\nBases\\\\nrawSchema (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty rawSchema object\\\\n\\\\n\\\\nMULTIPLE = \'MULTIPLE\'\\\\n\\\\n\\\\n\\\\nSINGLE = \'SINGLE\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.PropertyValueClass(value, description=None)\\\\nBases\\\\n\\\\nvalue (Union[str, float])\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty description str | float\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.QuantileClass(quantile, value)\\\\nBases\\\\n\\\\nquantile (str)\\\\nvalue (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty quantile str\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.QuantitativeAnalysesClass(unitaryResults=None, intersectionalResults=None)\\\\nBases\\\\n\\\\nunitaryResults (Optional[str])\\\\nintersectionalResults (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty intersectionalResults None | str\\\\nLink to a dashboard with results showing how the MLModel performed with respect to each factor\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.QueryCellClass(cellId, changeAuditStamps, rawQuery, cellTitle=None, lastExecuted=None)\\\\nBases\\\\n\\\\ncellId (str)\\\\nchangeAuditStamps (ChangeAuditStampsClass)\\\\nrawQuery (str)\\\\ncellTitle (Optional[str])\\\\nlastExecuted (Optional[AuditStampClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty cellId None | str\\\\nTitle of the cell\\\\n\\\\n\\\\n\\\\nproperty changeAuditStamps None | AuditStampClass\\\\nCaptures information about who last executed this query cell and when\\\\n\\\\n\\\\n\\\\nproperty rawQuery Aspect\\\\nKey for a Query\\\\n\\\\nParameters str\\\\nA unique id for the Query.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.QueryLanguageClass\\\\nBases Aspect\\\\nInformation about a Query against one or more data assets (e.g. Tables or Views).\\\\n\\\\nParameters AuditStampClass\\\\nAudit stamp capturing the time and actor who created the Query.\\\\n\\\\n\\\\n\\\\nproperty description AuditStampClass\\\\nAudit stamp capturing the time and actor who last modified the Query.\\\\n\\\\n\\\\n\\\\nproperty name None | str\\\\nThe origin of the Query.\\\\nThis is the source of the Query (e.g. a View, Stored Procedure, dbt Model, etc.) that the Query was created from.\\\\n\\\\n\\\\n\\\\nproperty source QueryStatementClass\\\\nThe Query Statement.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.QuerySourceClass\\\\nBases DictWrapper\\\\nA query statement against one or more data assets.\\\\n\\\\nParameters str | QueryLanguageClass\\\\nThe language of the Query, e.g. SQL.\\\\n\\\\n\\\\n\\\\nproperty value DictWrapper\\\\nA single subject of a particular query.\\\\nIn the future, we may evolve this model to include richer details\\\\nabout the Query Subject in relation to the query.\\\\n\\\\nParameters str\\\\nAn entity which is the subject of a query.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.QuerySubjectsClass(subjects)\\\\nBases\\\\nsubjects (List[QuerySubjectClass])\\\\n\\\\n\\\\n\\\\n\\\\nproperty subjects Aspect\\\\nStats corresponding to dataset\\\\u2019s usage.\\\\n\\\\nParameters ClassVar[str] = \'timeseries\'\\\\n\\\\n\\\\n\\\\nproperty eventGranularity None | int\\\\nLast executed timestamp\\\\n\\\\n\\\\n\\\\nproperty messageId PartitionSpecClass | None\\\\nThe optional partition specification.\\\\n\\\\n\\\\n\\\\nproperty queryCost None | int\\\\nTotal query count in this bucket\\\\n\\\\n\\\\n\\\\nproperty timestampMillis None | int\\\\nUnique user count\\\\n\\\\n\\\\n\\\\nproperty userCounts DictWrapper\\\\nRecord field type.\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.RelationshipFieldMappingClass(sourceField, destinationField)\\\\nBases\\\\n\\\\nsourceField (str)\\\\ndestinationField (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty destinationField\\\\nAll fields from dataset B that are required for the join, maps to aFields 1\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty sourceField\\\\nAll fields from dataset A that are required for the join, maps to bFields 1\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.RetentionClass(version=None, time=None)\\\\nBases\\\\n\\\\nversion (Optional[VersionBasedRetentionClass])\\\\ntime (Optional[TimeBasedRetentionClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty time None | VersionBasedRetentionClass\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.RoleAssociationClass(urn)\\\\nBases\\\\nurn (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nKey for a External AccessManagement\\\\n\\\\nParameters str\\\\nA unique id for the access management IAM.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.RoleMembershipClass(roles)\\\\nBases\\\\nroles (List[str])\\\\n\\\\n\\\\n\\\\n\\\\nproperty roles Aspect\\\\nInformation about a ExternalRoleProperties\\\\n\\\\nParameters None | AuditStampClass\\\\nCreated Audit stamp\\\\n\\\\n\\\\n\\\\nproperty description str\\\\nDisplay name of the IAM Role in the external system\\\\n\\\\n\\\\n\\\\nproperty requestUrl str\\\\nCan be READ, ADMIN, WRITE\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.RoleUserClass(user)\\\\nBases\\\\nuser (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty user DictWrapper\\\\nAttributes defining a ROWCOUNTCHANGE volume assertion.\\\\n\\\\nParameters str | AssertionStdOperatorClass\\\\nThe operator you\\\\u2019d like to apply.\\\\nNote that only numeric operators are valid inputs AssertionStdParametersClass\\\\nThe parameters you\\\\u2019d like to provide as input to the operator.\\\\nNote that only numeric parameter types are valid inputs str | AssertionValueChangeTypeClass\\\\na fixed absolute value or a relative percentage.\\\\n\\\\nType DictWrapper\\\\nAttributes defining a ROWCOUNTTOTAL volume assertion.\\\\n\\\\nParameters str | AssertionStdOperatorClass\\\\nThe operator you\\\\u2019d like to apply.\\\\nNote that only numeric operators are valid inputs AssertionStdParametersClass\\\\nThe parameters you\\\\u2019d like to provide as input to the operator.\\\\nNote that only numeric parameter types are valid inputs object\\\\n\\\\n\\\\nFAILURE = \'FAILURE\'\\\\n\\\\n\\\\n\\\\nSKIPPED = \'SKIPPED\'\\\\n\\\\n\\\\n\\\\nSUCCESS = \'SUCCESS\'\\\\n\\\\n\\\\n\\\\nUPFORRETRY = \'UPFORRETRY\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SchemaAssertionCompatibilityClass\\\\nBases DictWrapper\\\\nAttributes that are applicable to schema assertions\\\\n\\\\nParameters str | SchemaAssertionCompatibilityClass | None\\\\nThe required compatibility level for the schema assertion to pass.\\\\n\\\\n\\\\n\\\\nproperty entity SchemaMetadataClass\\\\nA definition of the expected structure for the asset\\\\nNote that many of the fields of this model, especially those related to metadata (tags, terms)\\\\nwill go unused in this context.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SchemaContractClass(assertion)\\\\nBases\\\\nassertion (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty assertion Aspect\\\\n\\\\nParameters None | List[str]\\\\nUsed to store aliases\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SchemaFieldClass(fieldPath, type, nativeDataType, jsonPath=None, nullable=None, description=None, label=None, created=None, lastModified=None, recursive=None, globalTags=None, glossaryTerms=None, isPartOfKey=None, isPartitioningKey=None, jsonProps=None)\\\\nBases\\\\n\\\\nfieldPath (str)\\\\ntype (SchemaFieldDataTypeClass)\\\\nnativeDataType (str)\\\\njsonPath (Optional[str])\\\\nnullable (Optional[bool])\\\\ndescription (Optional[str])\\\\nlabel (Optional[str])\\\\ncreated (Optional[AuditStampClass])\\\\nlastModified (Optional[AuditStampClass])\\\\nrecursive (Optional[bool])\\\\nglobalTags (Optional[GlobalTagsClass])\\\\nglossaryTerms (Optional[GlossaryTermsClass])\\\\nisPartOfKey (Optional[bool])\\\\nisPartitioningKey (Optional[bool])\\\\njsonProps (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty created None | str\\\\nDescription\\\\n\\\\n\\\\n\\\\nproperty fieldPath None | GlobalTagsClass\\\\nTags associated with the field\\\\n\\\\n\\\\n\\\\nproperty glossaryTerms bool\\\\nFor schema fields that are part of complex keys, set this field to true\\\\nWe do this to easily distinguish between value and key fields\\\\n\\\\n\\\\n\\\\nproperty isPartitioningKey None | str\\\\nFlattened name of a field in JSON Path notation.\\\\n\\\\n\\\\n\\\\nproperty jsonProps None | str\\\\nLabel of the field. Provides a more human-readable name for the field than field path. Some sources will\\\\nprovide this metadata but not all sources have the concept of a label. If just one string is associated with\\\\na field in a source, that is most likely a description.\\\\nNote that this field is deprecated and is not surfaced in the UI.\\\\n\\\\n\\\\n\\\\nproperty lastModified str\\\\nThe native type of the field in the dataset\\\\u2019s platform as declared by platform schema.\\\\n\\\\n\\\\n\\\\nproperty nullable bool\\\\nThere are use cases when a field in type B references type A. A field in A references field of type B. In such cases, we will mark the first field as recursive.\\\\n\\\\n\\\\n\\\\nproperty type DictWrapper\\\\nSchema field data types\\\\n\\\\nParameters BooleanTypeClass | FixedTypeClass | StringTypeClass | BytesTypeClass | NumberTypeClass | DateTypeClass | TimeTypeClass | EnumTypeClass | NullTypeClass | MapTypeClass | ArrayTypeClass | UnionTypeClass | RecordTypeClass\\\\nData platform specific types\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SchemaFieldInfoClass(name=None, schemaFieldAliases=None)\\\\nBases\\\\n\\\\nname (Optional[str])\\\\nschemaFieldAliases (Optional[List[str]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty name None | List[str]\\\\nUsed to store field path variations for the schemaField urn.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SchemaFieldKeyClass(parent, fieldPath)\\\\nBases\\\\n\\\\nparent (str)\\\\nfieldPath (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty fieldPath str\\\\nParent associated with the schema field\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SchemaFieldSnapshotClass(urn, aspects)\\\\nBases\\\\n\\\\nurn (str)\\\\naspects (List[SchemaFieldKeyClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty aspects str\\\\nURN for the entity the metadata snapshot is associated with.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SchemaFieldSpecClass(path, type, nativeType)\\\\nBases\\\\n\\\\npath (str)\\\\ntype (str)\\\\nnativeType (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty nativeType str\\\\nThe field path\\\\n\\\\n\\\\n\\\\nproperty type Aspect\\\\nSchemaMetadata to describe metadata related to store schema\\\\n\\\\nParameters None | str\\\\nThe cluster this schema metadata resides from\\\\n\\\\n\\\\n\\\\nproperty created None | str\\\\nDataset this schema metadata is associated with.\\\\n\\\\n\\\\n\\\\nproperty deleted List[SchemaFieldClass]\\\\nClient provided a list of fields from document schema.\\\\n\\\\n\\\\n\\\\nproperty foreignKeys None | Dict[str, ForeignKeySpecClass]\\\\nMap captures all the references schema makes to external datasets. Map key is ForeignKeySpecName typeref.\\\\n\\\\n\\\\n\\\\nproperty hash AuditStampClass\\\\nAn AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.\\\\n\\\\n\\\\n\\\\nproperty platform{platformname})\\\\n\\\\nType\\\\nli\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty platformSchema None | List[str]\\\\nClient provided list of fields that define primary keys to access record. Field order defines hierarchical espresso keys. Empty lists indicates absence of primary key access patter. Value is a SchemaField@fieldPath.\\\\n\\\\n\\\\n\\\\nproperty schemaName int\\\\nEvery change to SchemaMetadata in the resource results in a new version. Version is server assigned. This version is differ from platform native schema version.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SchemalessClass\\\\nBases object\\\\n\\\\n\\\\nBOOLEAN = \'BOOLEAN\'\\\\n\\\\n\\\\n\\\\nBROWSEPATH = \'BROWSEPATH\'\\\\n\\\\n\\\\n\\\\nBROWSEPATHV2 = \'BROWSEPATHV2\'\\\\n\\\\n\\\\n\\\\nCOUNT = \'COUNT\'\\\\n\\\\n\\\\n\\\\nDATETIME = \'DATETIME\'\\\\n\\\\n\\\\n\\\\nKEYWORD = \'KEYWORD\'\\\\n\\\\n\\\\n\\\\nOBJECT = \'OBJECT\'\\\\n\\\\n\\\\n\\\\nTEXT = \'TEXT\'\\\\n\\\\n\\\\n\\\\nTEXTPARTIAL = \'TEXTPARTIAL\'\\\\n\\\\n\\\\n\\\\nURN = \'URN\'\\\\n\\\\n\\\\n\\\\nURNPARTIAL = \'URNPARTIAL\'\\\\n\\\\n\\\\n\\\\nWORDGRAM = \'WORDGRAM\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SerializedValueClass(blob, contentType=None, schemaType=None, schemaRef=None)\\\\nBases\\\\n\\\\nblob (bytes)\\\\ncontentType (Union[str, SerializedValueContentTypeClass, None])\\\\nschemaType (Union[None, str, SerializedValueSchemaTypeClass])\\\\nschemaRef (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty blob str | SerializedValueContentTypeClass\\\\nThe content-type of the serialized blob value.\\\\n\\\\n\\\\n\\\\nproperty schemaRef None | str | SerializedValueSchemaTypeClass\\\\n\\\\nThe schema type for the schema that models the object that was serializedinto the blob.\\\\n\\\\n\\\\nAbsence of this field indicates that the schema is not known.\\\\nIf the schema is known, the value should be set to the appropriate schema\\\\ntype.\\\\nUse the NONE value if the existing schema categories do not apply.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SerializedValueContentTypeClass\\\\nBases object\\\\n\\\\n\\\\nAVRO = \'AVRO\'\\\\n\\\\n\\\\n\\\\nJSON = \'JSON\'\\\\n\\\\n\\\\n\\\\nNONE = \'NONE\'\\\\n\\\\n\\\\n\\\\nPEGASUS = \'PEGASUS\'\\\\n\\\\n\\\\n\\\\nPROTOBUF = \'PROTOBUF\'\\\\n\\\\n\\\\n\\\\nTHRIFT = \'THRIFT\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SiblingsClass(siblings, primary)\\\\nBases\\\\n\\\\nsiblings (List[str])\\\\nprimary (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty primary List[str]\\\\nList of sibling entities\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SourceCodeClass(sourceCode)\\\\nBases\\\\nsourceCode (List[SourceCodeUrlClass])\\\\n\\\\n\\\\n\\\\n\\\\nproperty sourceCode DictWrapper\\\\nSource Code Url Entity\\\\n\\\\nParameters str\\\\nSource Code Url\\\\n\\\\n\\\\n\\\\nproperty type object\\\\n\\\\n\\\\nEVALUATIONPIPELINESOURCECODE = \'EVALUATIONPIPELINESOURCECODE\'\\\\n\\\\n\\\\n\\\\nMLMODELSOURCECODE = \'MLMODELSOURCECODE\'\\\\n\\\\n\\\\n\\\\nTRAININGPIPELINESOURCECODE = \'TRAININGPIPELINESOURCECODE\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SqlAssertionInfoClass(type, entity, statement, operator, parameters, changeType=None)\\\\nBases\\\\n\\\\ntype (Union[str, SqlAssertionTypeClass])\\\\nentity (str)\\\\nstatement (str)\\\\noperator (Union[str, AssertionStdOperatorClass])\\\\nparameters (AssertionStdParametersClass)\\\\nchangeType (Union[None, str, AssertionValueChangeTypeClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty changeType\\\\nThe type of the value used to evaluate the assertion\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity str | AssertionStdOperatorClass\\\\nThe operator you\\\\u2019d like to apply to the result of the SQL query.\\\\nNote that at this time, only numeric operators are valid inputs AssertionStdParametersClass\\\\nThe parameters you\\\\u2019d like to provide as input to the operator.\\\\nNote that only numeric parameter types are valid inputs str\\\\nThe SQL statement to be executed when evaluating the assertion (or computing the metric).\\\\nThis should be a valid and complete statement, executable by itself.\\\\nUsually this should be a SELECT query statement.\\\\n\\\\n\\\\n\\\\nproperty type object\\\\n\\\\n\\\\nMETRIC = \'METRIC\'\\\\n\\\\n\\\\n\\\\nMETRICCHANGE = \'METRICCHANGE\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SsoSettingsClass(baseUrl, oidcSettings=None)\\\\nBases\\\\n\\\\nbaseUrl (str)\\\\noidcSettings (Optional[OidcSettingsClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty baseUrl None | OidcSettingsClass\\\\nOptional OIDC SSO settings.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.StatusClass(removed=None)\\\\nBases\\\\nremoved (Optional[bool])\\\\n\\\\n\\\\n\\\\n\\\\nproperty removed DictWrapper\\\\nString field type.\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.StructuredExecutionReportClass(type, serializedValue, contentType)\\\\nBases\\\\n\\\\ntype (str)\\\\nserializedValue (str)\\\\ncontentType (str)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty contentType str\\\\nThe serialized value of the structured report\\\\n\\\\n\\\\n\\\\nproperty type Aspect\\\\nProperties about an entity governed by StructuredPropertyDefinition\\\\n\\\\nParameters List[StructuredPropertyValueAssignmentClass]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.StructuredPropertyDefinitionClass(qualifiedName, valueType, entityTypes, displayName=None, typeQualifier=None, allowedValues=None, cardinality=None, description=None, searchConfiguration=None, immutable=None, version=None, created=None, lastModified=None)\\\\nBases\\\\n\\\\nqualifiedName (str)\\\\nvalueType (str)\\\\nentityTypes (List[str])\\\\ndisplayName (Optional[str])\\\\ntypeQualifier (Optional[Dict[str, List[str]]])\\\\nallowedValues (Optional[List[PropertyValueClass]])\\\\ncardinality (Union[str, PropertyCardinalityClass, None])\\\\ndescription (Optional[str])\\\\nsearchConfiguration (Optional[DataHubSearchConfigClass])\\\\nimmutable (Optional[bool])\\\\nversion (Optional[str])\\\\ncreated (Optional[AuditStampClass])\\\\nlastModified (Optional[AuditStampClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty allowedValues str | PropertyCardinalityClass | None\\\\nThe cardinality of the property. If not specified, then the property is assumed to be single valued..\\\\n\\\\n\\\\n\\\\nproperty created None | str\\\\nThe description of the property. This is the description that will be shown in the UI.\\\\n\\\\n\\\\n\\\\nproperty displayName List[str]\\\\n\\\\n\\\\n\\\\nproperty immutable None | AuditStampClass\\\\nLast Modified Audit stamp\\\\n\\\\n\\\\n\\\\nproperty qualifiedName None | DataHubSearchConfigClass\\\\nSearch configuration for this property. If not specified, then the property is indexed using the default mapping.\\\\nfrom the logical type.\\\\n\\\\n\\\\n\\\\nproperty typeQualifierlidatahub.urn\\\\ncan be specialized to be a USER or GROUP URN by adding a typeQualifier like\\\\n{ \\\\u201callowedTypes\\\\u201dlidatahub.corpuser\\\\u201d, \\\\u201curnentityType str\\\\nThe value type of the property. Must be a dataType.\\\\ne.g. To indicate that the property is of type DATE, use urndataType None | str\\\\nDefinition version - Allows breaking schema changes. String is compared case-insensitive and new\\\\nversions must be monotonically increasing. Cannot use periods/dots.\\\\nSuggestions Aspect\\\\n\\\\nParameters str\\\\nThe id for a structured proeprty.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.StructuredPropertyParamsClass(urn)\\\\nBases\\\\nurn (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nSettings specific to a structured property entity\\\\n\\\\nParameters bool\\\\nWhether or not this asset should be hidden in the main application\\\\n\\\\n\\\\n\\\\nproperty lastModified bool\\\\nWhether or not this asset should be displayed as an asset badge on other\\\\nasset\\\\u2019s headers\\\\n\\\\n\\\\n\\\\nproperty showInAssetSummary bool\\\\nWhether or not this asset should be displayed as a column in the schema field table\\\\nin a Dataset\\\\u2019s \\\\u201cColumns\\\\u201d tab.\\\\n\\\\n\\\\n\\\\nproperty showInSearchFilters DictWrapper\\\\n\\\\nParameters None | AuditStampClass\\\\nAudit stamp containing who created this relationship edge and when\\\\n\\\\n\\\\n\\\\nproperty lastModified str\\\\nThe property that is being assigned a value.\\\\n\\\\n\\\\n\\\\nproperty values Aspect\\\\nSub Types. Use this aspect to specialize a generic Entity\\\\ne.g. Making a Dataset also be a View or also be a LookerExplore\\\\n\\\\nParameters List[str]\\\\nThe names of the specific types.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.SystemMetadataClass(lastObserved=None, runId=None, lastRunId=None, pipelineName=None, registryName=None, registryVersion=None, properties=None, version=None)\\\\nBases\\\\n\\\\nlastObserved (Optional[int])\\\\nrunId (Optional[str])\\\\nlastRunId (Optional[str])\\\\npipelineName (Optional[str])\\\\nregistryName (Optional[str])\\\\nregistryVersion (Optional[str])\\\\nproperties (Optional[Dict[str, str]])\\\\nversion (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty lastObserved str | None\\\\nThe last run id that produced the metadata. Populated in case of batch-ingestion.\\\\n\\\\n\\\\n\\\\nproperty pipelineName None | Dict[str, str]\\\\nAdditional properties\\\\n\\\\n\\\\n\\\\nproperty registryName None | str\\\\nThe model registry version that was used to process this event\\\\n\\\\n\\\\n\\\\nproperty runId None | str\\\\nAspect version\\\\nInitial implementation will use the aspect version\\\\u2019s number, however stored as\\\\na string in the case where a different aspect versioning scheme is later adopted.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.TagAssociationClass(tag, context=None, attribution=None)\\\\nBases\\\\n\\\\ntag (str)\\\\ncontext (Optional[str])\\\\nattribution (Optional[MetadataAttributionClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty attribution None | str\\\\nAdditional context about the association\\\\n\\\\n\\\\n\\\\nproperty tag Aspect\\\\nKey for a Tag\\\\n\\\\nParameters str\\\\nThe tag name, which serves as a unique id\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.TagPropertiesClass(name, description=None, colorHex=None)\\\\nBases\\\\n\\\\nname (str)\\\\ndescription (Optional[str])\\\\ncolorHex (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty colorHex None | str\\\\nDocumentation of the tag\\\\n\\\\n\\\\n\\\\nproperty name DictWrapper\\\\nA metadata snapshot for a specific dataset entity.\\\\n\\\\nParameters List[TagKeyClass | OwnershipClass | TagPropertiesClass | StatusClass]\\\\nThe list of metadata aspects associated with the dataset. Depending on the use case, this can either be all, or a selection, of supported aspects.\\\\n\\\\n\\\\n\\\\nproperty urn Aspect\\\\nA simple wrapper around a String to persist the client ID for telemetry in DataHub\\\\u2019s backend DB\\\\n\\\\nParameters str\\\\nA string representing the telemetry client ID\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.TelemetryKeyClass(name)\\\\nBases\\\\nname (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty name DictWrapper\\\\n\\\\nParameters None | str\\\\nJSON format configuration for the test\\\\n\\\\n\\\\n\\\\nproperty type object\\\\n\\\\n\\\\nJSON = \'JSON\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.TestInfoClass(name, category, definition, description=None)\\\\nBases\\\\n\\\\nname (str)\\\\ncategory (str)\\\\ndefinition (TestDefinitionClass)\\\\ndescription (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty category TestDefinitionClass\\\\nConfiguration for the Test\\\\n\\\\n\\\\n\\\\nproperty description str\\\\nThe name of the test\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.TestKeyClass(id)\\\\nBases\\\\nid (str)\\\\n\\\\n\\\\n\\\\n\\\\nproperty id DictWrapper\\\\nInformation about a Test Result\\\\n\\\\nParameters None | AuditStampClass\\\\nThe audit stamp of when the result was computed, including the actor who computed it.\\\\n\\\\n\\\\n\\\\nproperty test None | str\\\\nThe md5 of the test definition that was used to compute this result.\\\\nSee TestInfo.testDefinition.md5 for more information.\\\\n\\\\n\\\\n\\\\nproperty type object\\\\n\\\\n\\\\nFAILURE = \'FAILURE\'\\\\n\\\\n\\\\n\\\\nSUCCESS = \'SUCCESS\'\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.TestResultsClass(failing, passing)\\\\nBases\\\\n\\\\nfailing (List[TestResultClass])\\\\npassing (List[TestResultClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty failing List[TestResultClass]\\\\nResults that are passing\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.TextCellClass(cellId, changeAuditStamps, text, cellTitle=None)\\\\nBases\\\\n\\\\ncellId (str)\\\\nchangeAuditStamps (ChangeAuditStampsClass)\\\\ntext (str)\\\\ncellTitle (Optional[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty cellId None | str\\\\nTitle of the cell\\\\n\\\\n\\\\n\\\\nproperty changeAuditStamps str\\\\nThe actual text in a TextCell in a Notebook\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.TimeBasedRetentionClass(maxAgeInSeconds)\\\\nBases\\\\nmaxAgeInSeconds (int)\\\\n\\\\n\\\\n\\\\n\\\\nproperty maxAgeInSeconds DictWrapper\\\\nA standard event timestamp\\\\n\\\\nParameters None | str\\\\nThe actor urn involved in the event.\\\\n\\\\nType int\\\\nWhen did the event occur\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.TimeTypeClass\\\\nBases DictWrapper\\\\n\\\\nParameters TimeWindowSizeClass\\\\nThe length of the window.\\\\n\\\\n\\\\n\\\\nproperty startTimeMillis DictWrapper\\\\nDefines the size of a time window.\\\\n\\\\nParameters int\\\\nHow many units. Defaults to 1.\\\\n\\\\n\\\\n\\\\nproperty unit Aspect\\\\nIdeally, the MLModel card would contain as much information about the training data as the evaluation data. However, there might be cases where it is not feasible to provide this level of detailed information about the training data. For example, the data may be proprietary, or require a non-disclosure agreement. In these cases, we advocate for basic details about the distributions over groups in the data, as well as any other details that could inform stakeholders on the kinds of biases the model may have encoded.\\\\n\\\\nParameters List[BaseDataClass]\\\\nDetails on the dataset(s) used for training the MLModel\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.TransformationTypeClass\\\\nBases DictWrapper\\\\nField transformation expressed in UDF\\\\n\\\\nParameters str\\\\nA UDF mentioning how the source fields got transformed to destination field. This is the FQCN(Fully Qualified Class Name) of the udf.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.UnionTypeClass(nestedTypes=None)\\\\nBases\\\\nnestedTypes (Optional[List[str]])\\\\n\\\\n\\\\n\\\\n\\\\nproperty nestedTypes DictWrapper\\\\nUpstream lineage information about a dataset including the source reporting the lineage\\\\n\\\\nParameters AuditStampClass\\\\nAudit stamp containing who reported the lineage and when.\\\\n\\\\n\\\\n\\\\nproperty created str\\\\nThe upstream dataset the lineage points to\\\\n\\\\n\\\\n\\\\nproperty properties None | str\\\\nIf the lineage is generated by a query, a reference to the query\\\\n\\\\n\\\\n\\\\nproperty type Aspect\\\\nUpstream lineage of a dataset\\\\n\\\\nParameters None | List[FineGrainedLineageClass]\\\\nList of fine-grained lineage information, including field-level lineage\\\\n\\\\n\\\\n\\\\nproperty upstreams DictWrapper\\\\nIf SchemaMetadata fields make any external references and references are of type com.linkedin.pegasus2avro.common.Urn or any children, this models can be used to mark it.\\\\n\\\\nParameters str\\\\nField in hosting(current) SchemaMetadata.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.UsageAggregationClass(bucket, duration, resource, metrics)\\\\nBases\\\\n\\\\nbucket (int)\\\\nduration (Union[str, WindowDurationClass])\\\\nresource (str)\\\\nmetrics (UsageAggregationMetricsClass)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty bucket str | WindowDurationClass\\\\nBucket duration\\\\n\\\\n\\\\n\\\\nproperty metrics str\\\\nResource associated with these usage stats\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.UsageAggregationMetricsClass(uniqueUserCount=None, users=None, totalSqlQueries=None, topSqlQueries=None, fields=None)\\\\nBases\\\\n\\\\nuniqueUserCount (Optional[int])\\\\nusers (Optional[List[UserUsageCountsClass]])\\\\ntotalSqlQueries (Optional[int])\\\\ntopSqlQueries (Optional[List[str]])\\\\nfields (Optional[List[FieldUsageCountsClass]])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty fields None | List[str]\\\\nFrequent SQL queries; mostly makes sense for datasets in SQL databases\\\\n\\\\n\\\\n\\\\nproperty totalSqlQueries None | int\\\\nUnique user count\\\\n\\\\n\\\\n\\\\nproperty users DictWrapper\\\\nRecords a single user\\\\u2019s usage counts for a given resource\\\\n\\\\nParameters int\\\\n\\\\n\\\\n\\\\nproperty user None | str\\\\nIf useremail is set, we attempt to resolve the user\\\\u2019s urn upon ingest\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.ValueFrequencyClass(value, frequency)\\\\nBases\\\\n\\\\nvalue (str)\\\\nfrequency (int)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty frequency str\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.VersionBasedRetentionClass(maxVersions)\\\\nBases\\\\nmaxVersions (int)\\\\n\\\\n\\\\n\\\\n\\\\nproperty maxVersions Aspect\\\\nInformation about a Data processing job\\\\n\\\\nParameters Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty externalUrl str\\\\nThe version which can indentify a job version like a commit hash or md5 hash\\\\n\\\\n\\\\n\\\\nproperty versionType Aspect\\\\nProperties about a versioned asset i.e. dataset, ML Model, etc.\\\\n\\\\nParameters List[VersionTagClass]\\\\nAssociated aliases for this versioned asset\\\\n\\\\n\\\\n\\\\nproperty comment None | bool\\\\nMarks whether this version is currently the latest. Set by a side effect and should not be modified by API.\\\\n\\\\n\\\\n\\\\nproperty metadataCreatedTimestamp str\\\\nSort identifier that determines where a version lives in the order of the Version Set.\\\\nWhat this looks like depends on the Version Scheme. For sort ids generated by DataHub we use an 8 character string representation.\\\\n\\\\n\\\\n\\\\nproperty sourceCreatedTimestamp VersionTagClass\\\\nLabel for this versioned asset, is unique within a version set\\\\n\\\\n\\\\n\\\\nproperty versionSet Aspect\\\\nKey for a Version Set entity\\\\n\\\\nParameters str\\\\nType of entities included in version set, limits to a single entity type between linked versioned entities\\\\n\\\\n\\\\n\\\\nproperty id Aspect\\\\n\\\\nParameters Dict[str, str]\\\\nCustom property bag.\\\\n\\\\n\\\\n\\\\nproperty latest str | VersioningSchemeClass\\\\nWhat versioning scheme is being utilized for the versioned entities sort criterion. Static once set\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.VersionTagClass(versionTag=None, metadataAttribution=None)\\\\nBases\\\\n\\\\nversionTag (Optional[str])\\\\nmetadataAttribution (Optional[MetadataAttributionClass])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty metadataAttribution None | str\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.VersioningSchemeClass\\\\nBases Aspect\\\\nDetails about a View.\\\\ne.g. Gets activated when subTypes is view\\\\n\\\\nParameters None | str\\\\nThe formatted view logic. This is particularly used for SQL sources, where the SQL\\\\nlogic is formatted for better readability, and with dbt, where this contains the\\\\ncompiled SQL logic.\\\\n\\\\n\\\\n\\\\nproperty materialized str\\\\nThe view logic language / dialect\\\\n\\\\n\\\\n\\\\nproperty viewLogic DictWrapper\\\\nAttributes defining a dataset Volume Assertion\\\\n\\\\nParameters str\\\\nThe entity targeted by this Volume check.\\\\n\\\\n\\\\n\\\\nproperty filter None | IncrementingSegmentRowCountChangeClass\\\\nProduce FAILURE Assertion Result if the asset\\\\u2019s incrementing segment row count delta\\\\ndoes not meet specific requirements. Required if type is \\\\u2018INCREMENTINGSEGMENTROWCOUNTCHANGE\\\\u2019\\\\n\\\\n\\\\n\\\\nproperty incrementingSegmentRowCountTotal None | RowCountChangeClass\\\\nProduce FAILURE Assertion Result if the delta row count of the asset does not meet specific requirements\\\\nwithin a given period of time.\\\\nRequired if type is \\\\u2018ROWCOUNTCHANGE\\\\u2019\\\\n\\\\n\\\\n\\\\nproperty rowCountTotal str | VolumeAssertionTypeClass\\\\nThe type of the volume assertion being monitored.\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.schemaclasses.VolumeAssertionTypeClass\\\\nBases object\\\\nEnum to define the length of a bucket when doing aggregations\\\\n\\\\n\\\\nDAY = \'DAY\'\\\\n\\\\n\\\\n\\\\nHOUR = \'HOUR\'\\\\n\\\\n\\\\n\\\\nMONTH = \'MONTH\'\\\\n\\\\n\\\\n\\\\nWEEK = \'WEEK\'\\\\n\\\\n\\\\n\\\\nYEAR = \'YEAR\'\\\\n\\\\n\\\\n\\\\n\\\\ndatahub.metadata.schemaclasses.getschema_type(fullname)\\\\n\\\\nParameters\\\\nRecordSchema\\\\n\\\\n\\\\n\\\\n\\\\n\\"}}>","sidebar":"overviewSidebar"},"python-sdk/urns":{"id":"python-sdk/urns","title":"URNs","description":"\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.AssertionUrn(assertionid, *, allowcoercion=True)\\\\nBases\\\\n\\\\nassertionid (Union[AssertionUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE str\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nAssertionUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type _SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'businessAttribute\'\\\\n\\\\n\\\\n\\\\nclassmethod create_from_string(urn_str)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity_ids str\\\\n\\\\n\\\\n\\\\nclassmethod from_key_aspect(key_aspect)\\\\n\\\\nParameters\\\\nBusinessAttributeUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod from_string(urn_str, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.from_string(urn_str)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.from_string), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.from_string(urn_str)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentity_type (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructured_property (str)\\\\n\\\\nReturn type\\\\nBusinessAttributeKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.ChartUrn(dashboard_tool, chart_id, , allowcoercion=True)\\\\nBases\\\\n\\\\ndashboardtool (str)\\\\nchartid (str)\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE str\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty dashboardtool List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (ChartKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nChartKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.ContainerUrn(guid, *, allowcoercion=True)\\\\nBases\\\\n\\\\nguid (Union[ContainerUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (ContainerKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type _SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'corpGroup\'\\\\n\\\\n\\\\n\\\\nclassmethod create_from_id(id)\\\\n\\\\nDeprecated since version 0.12.0.2\\\\nid (str)\\\\n\\\\nReturn type\\\\nurn_str (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entity_type\\\\nkey_aspect (CorpGroupKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurn_str (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentity_type (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructured_property (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nto_key_aspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn_url_encoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'corpuser\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromid(id)\\\\n\\\\nDeprecated since version 0.12.0.2\\\\nid (str)\\\\n\\\\nReturn type\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (CorpUserKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nCorpUserKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty username SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'dashboard\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty dashboardid str\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nDashboardUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type _SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'dataContract\'\\\\n\\\\n\\\\n\\\\nclassmethod create_from_string(urn_str)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity_ids str\\\\n\\\\n\\\\n\\\\nclassmethod from_key_aspect(key_aspect)\\\\n\\\\nParameters\\\\nDataContractUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod from_string(urn_str, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.from_string(urn_str)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.from_string), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.from_string(urn_str)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentity_type (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructured_property (str)\\\\n\\\\nReturn type\\\\nDataContractKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataFlowUrn(orchestrator, flow_id, cluster, , allowcoercion=True)\\\\nBases\\\\n\\\\norchestrator (str)\\\\nflowid (str)\\\\ncluster (str)\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE str\\\\n\\\\n\\\\n\\\\nclassmethod createfromids(orchestrator, flowid, env, platforminstance=None)\\\\n\\\\nParameters\\\\nDataFlowUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nproperty flowid\\\\nkeyaspect (DataFlowKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type Use .cluster instead\\\\n\\\\n\\\\nReturn type Use .flowid instead\\\\n\\\\n\\\\nReturn type Use .orchestrator instead\\\\n\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'dataHubAccessToken\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nDataHubAccessTokenUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nDataHubAccessTokenKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataHubActionUrn(id, , _allow_coercion=True)\\\\nBases\\\\n\\\\nid (Union[DataHubActionUrn, str])\\\\n_allow_coercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITY_TYPE\\\\nurn_str (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entity_type\\\\nkey_aspect (DataHubActionKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurn_str (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic make_data_type_urn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_entity_type_urn(entity_type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_form_urn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_structured_property_urn(structured_property)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nto_key_aspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn_url_encoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'dataHubConnection\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nDataHubConnectionUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nDataHubConnectionKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataHubExecutionRequestUrn(id, *, allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[DataHubExecutionRequestUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (ExecutionRequestKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type _SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'dataHubIngestionSource\'\\\\n\\\\n\\\\n\\\\nclassmethod create_from_string(urn_str)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity_ids str\\\\n\\\\n\\\\n\\\\nclassmethod from_key_aspect(key_aspect)\\\\n\\\\nParameters\\\\nDataHubIngestionSourceUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod from_string(urn_str, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.from_string(urn_str)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.from_string), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.from_string(urn_str)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentity_type (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructured_property (str)\\\\n\\\\nReturn type\\\\nDataHubIngestionSourceKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataHubPersonaUrn(id, , allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[DataHubPersonaUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (DataHubPersonaKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'dataHubPolicy\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nDataHubPolicyUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nDataHubPolicyKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataHubRetentionUrn(entityname, aspectname, , _allow_coercion=True)\\\\nBases\\\\n\\\\nentity_name (str)\\\\naspect_name (str)\\\\n_allow_coercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITY_TYPE str\\\\n\\\\n\\\\n\\\\nclassmethod create_from_string(urn_str)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity_ids str\\\\n\\\\n\\\\n\\\\nproperty entity_type\\\\nkey_aspect (DataHubRetentionKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurn_str (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentity_type (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructured_property (str)\\\\n\\\\nReturn type\\\\nDataHubRetentionKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataHubRoleUrn(id, , allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[DataHubRoleUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (DataHubRoleKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'dataHubSecret\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nDataHubSecretUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nDataHubSecretKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataHubStepStateUrn(id, , _allow_coercion=True)\\\\nBases\\\\n\\\\nid (Union[DataHubStepStateUrn, str])\\\\n_allow_coercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITY_TYPE\\\\nurn_str (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entity_type\\\\nkey_aspect (DataHubStepStateKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurn_str (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic make_data_type_urn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_entity_type_urn(entity_type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_form_urn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_structured_property_urn(structured_property)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nto_key_aspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn_url_encoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'dataHubUpgrade\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nDataHubUpgradeUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nDataHubUpgradeKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataHubViewUrn(id, *, allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[DataHubViewUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (DataHubViewKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'dataJob\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromids(dataflowurn, jobid)\\\\n\\\\nParameters\\\\nDataJobUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nproperty flow\\\\nkeyaspect (DataJobKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nDataFlowUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetjobid()\\\\n\\\\nDeprecated since version 0.12.0.2\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty jobid\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nDataJobKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataPlatformInstanceUrn(platform, instance, , _allow_coercion=True)\\\\nBases\\\\n\\\\nplatform (Union[DataPlatformUrn, str])\\\\ninstance (str)\\\\n_allow_coercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITY_TYPE\\\\nurn_str (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entity_type\\\\nkey_aspect (DataPlatformInstanceKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurn_str (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic make_data_type_urn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_entity_type_urn(entity_type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_form_urn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_structured_property_urn(structured_property)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty platform\\\\nDataPlatformInstanceKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataPlatformUrn(platform_name, , allowcoercion=True)\\\\nBases\\\\n\\\\nplatformname (Union[DataPlatformUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE Use the constructor instead\\\\n\\\\n\\\\nParameters\\\\nDataPlatformUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nDataPlatformUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty platformname\\\\nDataPlatformKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataProcessInstanceUrn(id, *, allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[DataProcessInstanceUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE Use the constructor instead\\\\n\\\\n\\\\nParameters\\\\nDataProcessInstanceUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nDataProcessInstanceUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetdataprocessinstanceid()\\\\n\\\\nDeprecated since version 0.12.0.2\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nDataProcessInstanceKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataProcessUrn(name, orchestrator, env=\'PROD\', , _allow_coercion=True)\\\\nBases\\\\n\\\\nname (str)\\\\norchestrator (str)\\\\nenv (str)\\\\n_allow_coercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITY_TYPE\\\\nurn_str (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entity_type str\\\\n\\\\n\\\\n\\\\nclassmethod from_key_aspect(key_aspect)\\\\n\\\\nParameters\\\\nDataProcessUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod from_string(urn_str, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.from_string(urn_str)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.from_string), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.from_string(urn_str)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_data_type_urn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_entity_type_urn(entity_type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_form_urn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_structured_property_urn(structured_property)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty name str\\\\n\\\\n\\\\n\\\\nto_key_aspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn_url_encoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'dataProduct\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nDataProductUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nDataProductKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DataTypeUrn(id, *, allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[DataTypeUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (DataTypeKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type _SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'dataset\'\\\\n\\\\n\\\\n\\\\nclassmethod create_from_ids(platform_id, table_name, env, platform_instance=None)\\\\n\\\\nParameters\\\\nDatasetUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod create_from_string(urn_str)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity_ids str\\\\n\\\\n\\\\n\\\\nproperty env\\\\nkey_aspect (DatasetKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurn_str (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nDataPlatformUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nget_dataset_name()\\\\n\\\\nDeprecated since version 0.12.0.2\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nget_env()\\\\n\\\\nDeprecated since version 0.12.0.2\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_simple_field_path_from_v2_field_path()\\\\nA helper function to extract simple . path notation from the v2 field path\\\\n\\\\nDeprecated since version 0.12.0.2\\\\nfield_path (str)\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentity_type (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructured_property (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nproperty platform\\\\nDatasetKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.DomainUrn(id, , allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[DomainUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE Use the constructor instead\\\\n\\\\n\\\\nParameters\\\\nDomainUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nDomainUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nDomainKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.EntityTypeUrn(id, *, allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[EntityTypeUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (EntityTypeKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type _SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'erModelRelationship\'\\\\n\\\\n\\\\n\\\\nclassmethod create_from_string(urn_str)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity_ids str\\\\n\\\\n\\\\n\\\\nclassmethod from_key_aspect(key_aspect)\\\\n\\\\nParameters\\\\nErModelRelationshipUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod from_string(urn_str, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.from_string(urn_str)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.from_string), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.from_string(urn_str)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentity_type (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructured_property (str)\\\\n\\\\nReturn type\\\\nERModelRelationshipKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.FormUrn(id, , allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[FormUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (FormKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'globalSettings\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nGlobalSettingsUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nGlobalSettingsKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.GlossaryNodeUrn(name, , _allow_coercion=True)\\\\nBases\\\\n\\\\nname (Union[GlossaryNodeUrn, str])\\\\n_allow_coercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITY_TYPE\\\\nurn_str (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entity_type\\\\nkey_aspect (GlossaryNodeKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurn_str (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentity_type (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructured_property (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nto_key_aspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn_url_encoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'glossaryTerm\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nGlossaryTermUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty name\\\\nGlossaryTermKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.IncidentUrn(id, *, allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[IncidentUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (IncidentKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type _SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'inviteToken\'\\\\n\\\\n\\\\n\\\\nclassmethod create_from_string(urn_str)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity_ids str\\\\n\\\\n\\\\n\\\\nclassmethod from_key_aspect(key_aspect)\\\\n\\\\nParameters\\\\nInviteTokenUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod from_string(urn_str, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.from_string(urn_str)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.from_string), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.from_string(urn_str)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentity_type (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructured_property (str)\\\\n\\\\nReturn type\\\\nInviteTokenKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.MlFeatureTableUrn(platform, name, , allowcoercion=True)\\\\nBases\\\\n\\\\nplatform (Union[DataPlatformUrn, str])\\\\nname (str)\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (MLFeatureTableKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nproperty platform\\\\nMLFeatureTableKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.MlFeatureUrn(featurenamespace, name, , _allow_coercion=True)\\\\nBases\\\\n\\\\nfeature_namespace (str)\\\\nname (str)\\\\n_allow_coercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITY_TYPE\\\\nurn_str (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entity_type str\\\\n\\\\n\\\\n\\\\nclassmethod from_key_aspect(key_aspect)\\\\n\\\\nParameters\\\\nMlFeatureUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod from_string(urn_str, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.from_string(urn_str)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.from_string), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.from_string(urn_str)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_data_type_urn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_entity_type_urn(entity_type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_form_urn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_structured_property_urn(structured_property)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty name\\\\nMLFeatureKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.MlModelDeploymentUrn(platform, name, env=\'PROD\', , allowcoercion=True)\\\\nBases\\\\n\\\\nplatform (Union[DataPlatformUrn, str])\\\\nname (str)\\\\nenv (str)\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nMlModelDeploymentUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty name str\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'mlModelGroup\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nproperty env\\\\nkeyaspect (MLModelGroupKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nproperty platform\\\\nMLModelGroupKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.MlModelUrn(platform, name, env=\'PROD\', , _allow_coercion=True)\\\\nBases\\\\n\\\\nplatform (Union[DataPlatformUrn, str])\\\\nname (str)\\\\nenv (str)\\\\n_allow_coercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITY_TYPE\\\\nurn_str (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entity_type str\\\\n\\\\n\\\\n\\\\nclassmethod from_key_aspect(key_aspect)\\\\n\\\\nParameters\\\\nMlModelUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod from_string(urn_str, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.from_string(urn_str)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.from_string), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.from_string(urn_str)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_data_type_urn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_entity_type_urn(entity_type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_form_urn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_structured_property_urn(structured_property)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty name str\\\\n\\\\n\\\\n\\\\nto_key_aspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn_url_encoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'mlPrimaryKey\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nproperty featurenamespace\\\\nkeyaspect (MLPrimaryKeyKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'notebook\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nNotebookUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetnotebookid()\\\\n\\\\nDeprecated since version 0.12.0.2\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ngetplatformid()\\\\n\\\\nDeprecated since version 0.12.0.2\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty notebookid str\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type _SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'ownershipType\'\\\\n\\\\n\\\\n\\\\nclassmethod create_from_string(urn_str)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity_ids str\\\\n\\\\n\\\\n\\\\nclassmethod from_key_aspect(key_aspect)\\\\n\\\\nParameters\\\\nOwnershipTypeUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod from_string(urn_str, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.from_string(urn_str)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.from_string), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.from_string(urn_str)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentity_type (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructured_property (str)\\\\n\\\\nReturn type\\\\nOwnershipTypeKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.PlatformResourceUrn(id, , allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[PlatformResourceUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (PlatformResourceKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'post\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nPostUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nPostKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.QueryUrn(id, , _allow_coercion=True)\\\\nBases\\\\n\\\\nid (Union[QueryUrn, str])\\\\n_allow_coercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITY_TYPE\\\\nurn_str (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entity_type\\\\nkey_aspect (QueryKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurn_str (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic make_data_type_urn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_entity_type_urn(entity_type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_form_urn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_structured_property_urn(structured_property)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nto_key_aspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn_url_encoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'role\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromkeyaspect(keyaspect)\\\\n\\\\nParameters\\\\nRoleUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty id\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type\\\\nRoleKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.SchemaFieldUrn(parent, fieldpath, , _allow_coercion=True)\\\\nBases\\\\n\\\\nparent (Union[Urn, str])\\\\nfield_path (str)\\\\n_allow_coercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITY_TYPE\\\\nurn_str (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entity_type str\\\\n\\\\n\\\\n\\\\nclassmethod from_key_aspect(key_aspect)\\\\n\\\\nParameters\\\\nSchemaFieldUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod from_string(urn_str, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.from_string(urn_str)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.from_string), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.from_string(urn_str)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_data_type_urn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_entity_type_urn(entity_type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_form_urn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_structured_property_urn(structured_property)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty parent\\\\nSchemaFieldKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.StructuredPropertyUrn(id, , allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[StructuredPropertyUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (StructuredPropertyKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'tag\'\\\\n\\\\n\\\\n\\\\nclassmethod createfromid(id)\\\\n\\\\nDeprecated since version 0.12.0.2\\\\nid (str)\\\\n\\\\nReturn type\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (TagKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type\\\\ntype (str)\\\\n\\\\nReturn type\\\\nentitytype (str)\\\\n\\\\nReturn type\\\\nform (str)\\\\n\\\\nReturn type\\\\nstructuredproperty (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type _SpecificUrn\\\\n\\\\nParameters ClassVar[str] = \'telemetry\'\\\\n\\\\n\\\\n\\\\nclassmethod create_from_string(urn_str)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entity_ids str\\\\n\\\\n\\\\n\\\\nclassmethod from_key_aspect(key_aspect)\\\\n\\\\nParameters\\\\nTelemetryUrn\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod from_string(urn_str, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.from_string(urn_str)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.from_string), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urn_str = \'urndatasetlisnowflake,my_db.my_schema.my_table,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.from_string(urn_str)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic get_data_type_from_urn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_data_type_urn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_entity_type_urn(entity_type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_form_urn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic make_structured_property_urn(structured_property)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty name\\\\nTelemetryKeyClass\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.TestUrn(id, , allowcoercion=True)\\\\nBases\\\\n\\\\nid (Union[TestUrn, str])\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (TestKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type object\\\\nURNs are globally unique identifiers used to refer to entities.\\\\nIt will be in format of urn&lt;type&gt;li(&lt;id1&gt;,&lt;id2&gt;,\\\\u2026)\\\\nA note on encoding\\\\n\\\\nentitytype (str)\\\\nentityid (List[str])\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclassmethod createfromstring(urnstr)\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nproperty entityids str\\\\n\\\\n\\\\n\\\\nclassmethod fromstring(urnstr, /)\\\\nCreate an Urn from its string representation.\\\\nWhen called against the base Urn class, this method will return a more specific Urn type where possible.\\\\n&gt;&gt;&gt; from datahub.metadata.urns import DatasetUrn, Urn\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; urn = Urn.fromstring(urnstr)\\\\n&gt;&gt;&gt; assert isinstance(urn, DatasetUrn)\\\\n\\\\n\\\\nWhen called against a specific Urn type (e.g. DatasetUrn.fromstring), this method can\\\\nalso be used for type narrowing.\\\\n&gt;&gt;&gt; urnstr = \'urndatasetlisnowflake,mydb.myschema.mytable,PROD)\'\\\\n&gt;&gt;&gt; assert DatasetUrn.fromstring(urnstr)\\\\n\\\\n\\\\n\\\\nParameters\\\\nSelf\\\\n\\\\nReturns\\\\nInvalidUrnError \\\\u2013 If the string representation is in invalid format.\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic getdatatypefromurn(urn)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurn()\\\\nGet the string representation of the urn.\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nclass datahub.metadata.urns.VersionSetUrn(id, entitytype, *, allowcoercion=True)\\\\nBases\\\\n\\\\nid (str)\\\\nentitytype (str)\\\\nallowcoercion (bool)\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nENTITYTYPE\\\\nurnstr (str)\\\\n\\\\nReturn type List[str]\\\\n\\\\n\\\\n\\\\nproperty entitytype\\\\nkeyaspect (VersionSetKeyClass)\\\\n\\\\nReturn typeli(urndataPlatformli(urndataPlatform\\\\nurnstr (Union[str, Urn]) \\\\u2013 The string representation of the urn. Also accepts an existing Urn instance.\\\\n\\\\nReturn type\\\\nUrn of the given string representation.\\\\n\\\\nRaises\\\\nurn (str)\\\\n\\\\nReturn type str\\\\n\\\\n\\\\n\\\\nstatic makedatatypeurn(type)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeentitytypeurn(entitytype)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makeformurn(form)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nstatic makestructuredpropertyurn(structuredproperty)\\\\n\\\\nParameters\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\ntokeyaspect()\\\\n\\\\nReturn type\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nurnurlencoded()\\\\n\\\\nReturn type:\\\\nstr\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\"}}>","sidebar":"overviewSidebar"},"README":{"id":"README","title":"Introduction","description":"DataHub is a data discovery application built on an extensible metadata platform that helps you tame the complexity of diverse data ecosystems."},"releases":{"id":"releases","title":"DataHub Releases","description":"Summary","sidebar":"overviewSidebar"},"SECURITY":{"id":"SECURITY","title":"Reporting Security Issues","description":"If you think you have found a security vulnerability, please send a report to security@datahubproject.io. This address can be used for all of Acryl Data\u2019s open source and commercial products (including but not limited to DataHub and Acryl Data). We can accept only vulnerability reports at this address.","sidebar":"overviewSidebar"},"smoke-test/tests/openapi/README":{"id":"smoke-test/tests/openapi/README","title":"Goal","description":"This test is configuration driven by json files which contain request/response sequences intended to"}}}')}}]);